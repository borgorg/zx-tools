{"version":3,"sources":["lib/dnd.js","sprites/lib/colour.js","lib/save.js","sprites/lib/zlib.js","sprites/lib/png.js","sprites/lib/bmp.js","sprites/lib/parser.js","lib/$.js","sprites/SpriteSheet.js","sprites/ColourPicker.js","sprites/Tool.js","sprites/index.js"],"names":["drop","root","callback","ondragover","ondragend","ondrop","e","preventDefault","droppedFile","dataTransfer","files","reader","FileReader","onload","event","Uint8Array","target","result","readAsArrayBuffer","rgbFromIndex","index","r","g","b","a","toRGB332","Math","floor","transparent","document","createElement","body","appendChild","style","data","fileName","blob","Blob","Array","isArray","type","url","URL","createObjectURL","href","download","click","revokeObjectURL","DecodeStream","constructor","pos","bufferLength","eof","buffer","prototype","ensureBuffer","requested","current","byteLength","size","buffer2","i","getByte","readBlock","getBytes","length","end","bufEnd","subarray","lookChar","String","fromCharCode","getChar","makeSubStream","start","dict","Stream","skip","n","reset","FlateStream","codeLenCodeMap","Uint32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","error","Error","bytes","bytesPos","cmf","flg","codeSize","codeBuf","call","Object","create","getBits","bits","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","repeat","stream","array","offset","what","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","slice","limit","code1","dist","k","blockLen","check","PNG","data1","palette","imgData","transparency","animation","text","frame","chunkSize","readUInt32","section","width","height","colorType","compressionMethod","filterMethod","interlaceMethod","numFrames","numPlays","Infinity","frames","read","push","xOffset","yOffset","delayNum","readUInt16","delayDen","delay","disposeOp","blendOp","indexed","short","grayscale","rgb","indexOf","key","apply","colors","hasAlphaChannel","includes","pixelBitlength","colorSpace","b1","decodePixels","pixelBytes","pixels","pass","x0","y0","dx","dy","singlePass","w","ceil","h","scanlineLength","row","c","byte","col","left","upper","paeth","upperLeft","p","pa","abs","pb","pc","pixelsPos","bufferPos","j","decodePalette","ret","copyToImageData","imageData","alpha","_decodedPalette","input","v","decode","BmpDecoder","is_with_alpha","DataView","bottom_up","flag","parseHeader","parseRGBA","fileSize","getUint32","reserved","headerSize","getInt32","planes","getUint16","bitPP","compress","rawSize","hr","vr","importantColors","blue","getUint8","green","red","quad","bitn","ArrayBuffer","bit1","xlen","mode","y","line","x","location","bit4","fill","lines","low_nibble","setPixelData","rgbIndex","before","after","bit8","bit15","dif_w","_1_5","parseInt","B","bit16","maskRed","maskGreen","maskBlue","mask0","ns","bit24","bit32","getData","pngSig","bmpSig","file","isPNG","isBMP","detect","png","bmp","max","BMP","transform","alphaFirst","res","ri","gi","bi","ai","spriteIndex","dataIndex","undefined","ArrayNode","Proxy","set","obj","prop","value","HTMLElement","filter","el","on","handler","options","addEventListener","emit","Event","dispatchEvent","$","s","ctx","from","querySelectorAll","getCoords","pixelLength","colourTable","rect","getBoundingClientRect","clientX","clientY","top","xyToIndex","emptyCanvas","blankData","Uint8ClampedArray","canvas","blank","ImageData","putImageData","Sprite","getContext","render","pget","pset","clear","canvasToPixels","getImageData","paint","clearRect","imageSmoothingEnabled","drawImage","SpriteSheet","spriteData","sprite","sprites","previewCtx","snapshot","_current","history","splice","_undoPtr","console","log","undo","rebuild","getPreviewElements","map","_","coords","args","renderPreview","draw","classList","remove","add","ColourPicker","html","join","innerHTML","dataset","id","container","colour","_history","unshift","values","forEach","querySelector","className","_index","selected","Tool","action","shortcuts","types","_selected","state","documentElement","tool","shift","_last","pan","_coords","source","spritesContainer","debug","picker","upload","pickerColour","buttons","newSpriteSheet","confirm","renderSpritePreviews","renderCurrentSprite","newSprite","totalSprites","currentSprite","concat","dupeSprite","copy","filename","prompt","parentNode","startsWith","right","next","down","buildStyleSheet","css","innerText","head","append","focused","fileHandler","into","makePixel","d","onclick","altKey","ctrlKey","shiftKey","metaKey","onmousemove","toString","padStart","onmouseout","node","nodeName","childNodes"],"mappings":"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A,EAAMQ,EAAQT,EACX,KAAKd,cAAgBe,IAAQ,KAAKd,KAAK,KAAKW,YAC5C,OAAA,IAAIa,OAAO,KAAKvB,OAAQqB,EAAOT,EAAQU,IAEhDE,KAAM,SAA2BC,GAC1BA,IAAGA,EAAI,GACP5B,KAAAA,KAAO4B,GAEdC,MAAO,WACA7B,KAAAA,IAAM,IAIRD,EA7EoB,GAgFtB,QAAA,aAAA,EAAA,MAAM+B,EAAe,WACtBC,IAAAA,EAAiB,IAAIC,YAAY,CACnC,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,KAGEC,EAAe,IAAID,YAAY,CACjC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,MAGEE,EAAa,IAAIF,YAAY,CAC/B,EACA,EACA,EACA,EACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGEG,EAAkB,CACpB,IAAIH,YAAY,CACdmB,CACrB,IAAIJ,YAAY,CACd,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IAEF,GAGOK,SAAAA,EAAMjF,GACP,MAAA,IAAIkF,MAAMlF,GAGT2C,SAAAA,EAAYwC,GAEfC,IAAAA,EAAW,EAEXC,EAAMF,EAAMC,KACZE,EAAMH,EAAMC,MACJ,GAARC,IAAqB,GAARC,GAAWL,EAAM,kCACd,IAAT,GAANI,IACHJ,EAAM,gDACFI,GAAO,GAAKC,GAAO,IAAM,GAAGL,EAAM,8BAC9B,GAANK,GAAYL,EAAM,iCAEjBE,KAAAA,MAAQA,EACRC,KAA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","file":"sprites.a3f152c2.js","sourceRoot":"../public","sourcesContent":["export default function drop(root, callback) {\n  root.ondragover = () => false;\n  root.ondragend = () => false;\n  root.ondrop = e => {\n    e.preventDefault();\n\n    const droppedFile = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      callback(new Uint8Array(event.target.result));\n    };\n    reader.readAsArrayBuffer(droppedFile);\n\n    return false;\n  };\n}\n","export function rgbFromIndex(index) {\n  if (index === 0xe3) {\n    return { r: 0, g: 0, b: 0, a: 0 };\n  }\n\n  let r = (index >> 5) & 0x7;\n  let g = (index >> 2) & 0x7;\n  let b = (index >> 0) & 0x3;\n\n  //make a pure RGB332 colour\n  return {\n    r: (r * 255.0) / 7.0,\n    g: (g * 255.0) / 7.0,\n    b: (b * 255.0) / 3.0,\n    a: 255,\n  };\n}\n\nexport function toRGB332(r, g, b) {\n  return (\n    (Math.floor(r / 32) << 5) + (Math.floor(g / 32) << 2) + Math.floor(b / 64)\n  );\n}\n\nexport const transparent = 0xe3;\n","export default (function() {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n  return function(data, fileName) {\n    let blob = null;\n\n    if (data instanceof Blob) {\n      blob = data;\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n      blob = new Blob(data, { type: 'octet/stream' });\n    }\n    const url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n})();\n","/*\n * Extracted from pdf.js\n * https://github.com/andreasgal/pdf.js\n *\n * Copyright (c) 2011 Mozilla Foundation\n *\n * Contributors: Andreas Gal <gal@mozilla.com>\n *               Chris G Jones <cjones@mozilla.com>\n *               Shaon Barman <shaon.barman@gmail.com>\n *               Vivien Nicolas <21@vingtetun.org>\n *               Justin D'Arcangelo <justindarc@gmail.com>\n *               Yury Delendik\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nexport const DecodeStream = (function() {\n  function constructor() {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = null;\n  }\n\n  constructor.prototype = {\n    ensureBuffer: function decodestream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      var current = buffer ? buffer.byteLength : 0;\n      if (requested < current) return buffer;\n      var size = 512;\n      while (size < requested) size <<= 1;\n      var buffer2 = new Uint8Array(size);\n      for (var i = 0; i < current; ++i) buffer2[i] = buffer[i];\n      return (this.buffer = buffer2);\n    },\n    getByte: function decodestream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) return null;\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getBytes: function decodestream_getBytes(length) {\n      var pos = this.pos;\n\n      if (length) {\n        this.ensureBuffer(pos + length);\n        var end = pos + length;\n\n        while (!this.eof && this.bufferLength < end) this.readBlock();\n\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) end = bufEnd;\n      } else {\n        while (!this.eof) this.readBlock();\n\n        var end = this.bufferLength;\n      }\n\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    lookChar: function decodestream_lookChar() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) return null;\n        this.readBlock();\n      }\n      return String.fromCharCode(this.buffer[this.pos]);\n    },\n    getChar: function decodestream_getChar() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) return null;\n        this.readBlock();\n      }\n      return String.fromCharCode(this.buffer[this.pos++]);\n    },\n    makeSubStream: function decodestream_makeSubstream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) this.readBlock();\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function decodestream_skip(n) {\n      if (!n) n = 1;\n      this.pos += n;\n    },\n    reset: function decodestream_reset() {\n      this.pos = 0;\n    }\n  };\n\n  return constructor;\n})();\n\nexport const FlateStream = (function() {\n  var codeLenCodeMap = new Uint32Array([\n    16,\n    17,\n    18,\n    0,\n    8,\n    7,\n    9,\n    6,\n    10,\n    5,\n    11,\n    4,\n    12,\n    3,\n    13,\n    2,\n    14,\n    1,\n    15\n  ]);\n\n  var lengthDecode = new Uint32Array([\n    0x00003,\n    0x00004,\n    0x00005,\n    0x00006,\n    0x00007,\n    0x00008,\n    0x00009,\n    0x0000a,\n    0x1000b,\n    0x1000d,\n    0x1000f,\n    0x10011,\n    0x20013,\n    0x20017,\n    0x2001b,\n    0x2001f,\n    0x30023,\n    0x3002b,\n    0x30033,\n    0x3003b,\n    0x40043,\n    0x40053,\n    0x40063,\n    0x40073,\n    0x50083,\n    0x500a3,\n    0x500c3,\n    0x500e3,\n    0x00102,\n    0x00102,\n    0x00102\n  ]);\n\n  var distDecode = new Uint32Array([\n    0x00001,\n    0x00002,\n    0x00003,\n    0x00004,\n    0x10005,\n    0x10007,\n    0x20009,\n    0x2000d,\n    0x30011,\n    0x30019,\n    0x40021,\n    0x40031,\n    0x50041,\n    0x50061,\n    0x60081,\n    0x600c1,\n    0x70101,\n    0x70181,\n    0x80201,\n    0x80301,\n    0x90401,\n    0x90601,\n    0xa0801,\n    0xa0c01,\n    0xb1001,\n    0xb1801,\n    0xc2001,\n    0xc3001,\n    0xd4001,\n    0xd6001\n  ]);\n\n  var fixedLitCodeTab = [\n    new Uint32Array([\n      0x70100,\n      0x80050,\n      0x80010,\n      0x80118,\n      0x70110,\n      0x80070,\n      0x80030,\n      0x900c0,\n      0x70108,\n      0x80060,\n      0x80020,\n      0x900a0,\n      0x80000,\n      0x80080,\n      0x80040,\n      0x900e0,\n      0x70104,\n      0x80058,\n      0x80018,\n      0x90090,\n      0x70114,\n      0x80078,\n      0x80038,\n      0x900d0,\n      0x7010c,\n      0x80068,\n      0x80028,\n      0x900b0,\n      0x80008,\n      0x80088,\n      0x80048,\n      0x900f0,\n      0x70102,\n      0x80054,\n      0x80014,\n      0x8011c,\n      0x70112,\n      0x80074,\n      0x80034,\n      0x900c8,\n      0x7010a,\n      0x80064,\n      0x80024,\n      0x900a8,\n      0x80004,\n      0x80084,\n      0x80044,\n      0x900e8,\n      0x70106,\n      0x8005c,\n      0x8001c,\n      0x90098,\n      0x70116,\n      0x8007c,\n      0x8003c,\n      0x900d8,\n      0x7010e,\n      0x8006c,\n      0x8002c,\n      0x900b8,\n      0x8000c,\n      0x8008c,\n      0x8004c,\n      0x900f8,\n      0x70101,\n      0x80052,\n      0x80012,\n      0x8011a,\n      0x70111,\n      0x80072,\n      0x80032,\n      0x900c4,\n      0x70109,\n      0x80062,\n      0x80022,\n      0x900a4,\n      0x80002,\n      0x80082,\n      0x80042,\n      0x900e4,\n      0x70105,\n      0x8005a,\n      0x8001a,\n      0x90094,\n      0x70115,\n      0x8007a,\n      0x8003a,\n      0x900d4,\n      0x7010d,\n      0x8006a,\n      0x8002a,\n      0x900b4,\n      0x8000a,\n      0x8008a,\n      0x8004a,\n      0x900f4,\n      0x70103,\n      0x80056,\n      0x80016,\n      0x8011e,\n      0x70113,\n      0x80076,\n      0x80036,\n      0x900cc,\n      0x7010b,\n      0x80066,\n      0x80026,\n      0x900ac,\n      0x80006,\n      0x80086,\n      0x80046,\n      0x900ec,\n      0x70107,\n      0x8005e,\n      0x8001e,\n      0x9009c,\n      0x70117,\n      0x8007e,\n      0x8003e,\n      0x900dc,\n      0x7010f,\n      0x8006e,\n      0x8002e,\n      0x900bc,\n      0x8000e,\n      0x8008e,\n      0x8004e,\n      0x900fc,\n      0x70100,\n      0x80051,\n      0x80011,\n      0x80119,\n      0x70110,\n      0x80071,\n      0x80031,\n      0x900c2,\n      0x70108,\n      0x80061,\n      0x80021,\n      0x900a2,\n      0x80001,\n      0x80081,\n      0x80041,\n      0x900e2,\n      0x70104,\n      0x80059,\n      0x80019,\n      0x90092,\n      0x70114,\n      0x80079,\n      0x80039,\n      0x900d2,\n      0x7010c,\n      0x80069,\n      0x80029,\n      0x900b2,\n      0x80009,\n      0x80089,\n      0x80049,\n      0x900f2,\n      0x70102,\n      0x80055,\n      0x80015,\n      0x8011d,\n      0x70112,\n      0x80075,\n      0x80035,\n      0x900ca,\n      0x7010a,\n      0x80065,\n      0x80025,\n      0x900aa,\n      0x80005,\n      0x80085,\n      0x80045,\n      0x900ea,\n      0x70106,\n      0x8005d,\n      0x8001d,\n      0x9009a,\n      0x70116,\n      0x8007d,\n      0x8003d,\n      0x900da,\n      0x7010e,\n      0x8006d,\n      0x8002d,\n      0x900ba,\n      0x8000d,\n      0x8008d,\n      0x8004d,\n      0x900fa,\n      0x70101,\n      0x80053,\n      0x80013,\n      0x8011b,\n      0x70111,\n      0x80073,\n      0x80033,\n      0x900c6,\n      0x70109,\n      0x80063,\n      0x80023,\n      0x900a6,\n      0x80003,\n      0x80083,\n      0x80043,\n      0x900e6,\n      0x70105,\n      0x8005b,\n      0x8001b,\n      0x90096,\n      0x70115,\n      0x8007b,\n      0x8003b,\n      0x900d6,\n      0x7010d,\n      0x8006b,\n      0x8002b,\n      0x900b6,\n      0x8000b,\n      0x8008b,\n      0x8004b,\n      0x900f6,\n      0x70103,\n      0x80057,\n      0x80017,\n      0x8011f,\n      0x70113,\n      0x80077,\n      0x80037,\n      0x900ce,\n      0x7010b,\n      0x80067,\n      0x80027,\n      0x900ae,\n      0x80007,\n      0x80087,\n      0x80047,\n      0x900ee,\n      0x70107,\n      0x8005f,\n      0x8001f,\n      0x9009e,\n      0x70117,\n      0x8007f,\n      0x8003f,\n      0x900de,\n      0x7010f,\n      0x8006f,\n      0x8002f,\n      0x900be,\n      0x8000f,\n      0x8008f,\n      0x8004f,\n      0x900fe,\n      0x70100,\n      0x80050,\n      0x80010,\n      0x80118,\n      0x70110,\n      0x80070,\n      0x80030,\n      0x900c1,\n      0x70108,\n      0x80060,\n      0x80020,\n      0x900a1,\n      0x80000,\n      0x80080,\n      0x80040,\n      0x900e1,\n      0x70104,\n      0x80058,\n      0x80018,\n      0x90091,\n      0x70114,\n      0x80078,\n      0x80038,\n      0x900d1,\n      0x7010c,\n      0x80068,\n      0x80028,\n      0x900b1,\n      0x80008,\n      0x80088,\n      0x80048,\n      0x900f1,\n      0x70102,\n      0x80054,\n      0x80014,\n      0x8011c,\n      0x70112,\n      0x80074,\n      0x80034,\n      0x900c9,\n      0x7010a,\n      0x80064,\n      0x80024,\n      0x900a9,\n      0x80004,\n      0x80084,\n      0x80044,\n      0x900e9,\n      0x70106,\n      0x8005c,\n      0x8001c,\n      0x90099,\n      0x70116,\n      0x8007c,\n      0x8003c,\n      0x900d9,\n      0x7010e,\n      0x8006c,\n      0x8002c,\n      0x900b9,\n      0x8000c,\n      0x8008c,\n      0x8004c,\n      0x900f9,\n      0x70101,\n      0x80052,\n      0x80012,\n      0x8011a,\n      0x70111,\n      0x80072,\n      0x80032,\n      0x900c5,\n      0x70109,\n      0x80062,\n      0x80022,\n      0x900a5,\n      0x80002,\n      0x80082,\n      0x80042,\n      0x900e5,\n      0x70105,\n      0x8005a,\n      0x8001a,\n      0x90095,\n      0x70115,\n      0x8007a,\n      0x8003a,\n      0x900d5,\n      0x7010d,\n      0x8006a,\n      0x8002a,\n      0x900b5,\n      0x8000a,\n      0x8008a,\n      0x8004a,\n      0x900f5,\n      0x70103,\n      0x80056,\n      0x80016,\n      0x8011e,\n      0x70113,\n      0x80076,\n      0x80036,\n      0x900cd,\n      0x7010b,\n      0x80066,\n      0x80026,\n      0x900ad,\n      0x80006,\n      0x80086,\n      0x80046,\n      0x900ed,\n      0x70107,\n      0x8005e,\n      0x8001e,\n      0x9009d,\n      0x70117,\n      0x8007e,\n      0x8003e,\n      0x900dd,\n      0x7010f,\n      0x8006e,\n      0x8002e,\n      0x900bd,\n      0x8000e,\n      0x8008e,\n      0x8004e,\n      0x900fd,\n      0x70100,\n      0x80051,\n      0x80011,\n      0x80119,\n      0x70110,\n      0x80071,\n      0x80031,\n      0x900c3,\n      0x70108,\n      0x80061,\n      0x80021,\n      0x900a3,\n      0x80001,\n      0x80081,\n      0x80041,\n      0x900e3,\n      0x70104,\n      0x80059,\n      0x80019,\n      0x90093,\n      0x70114,\n      0x80079,\n      0x80039,\n      0x900d3,\n      0x7010c,\n      0x80069,\n      0x80029,\n      0x900b3,\n      0x80009,\n      0x80089,\n      0x80049,\n      0x900f3,\n      0x70102,\n      0x80055,\n      0x80015,\n      0x8011d,\n      0x70112,\n      0x80075,\n      0x80035,\n      0x900cb,\n      0x7010a,\n      0x80065,\n      0x80025,\n      0x900ab,\n      0x80005,\n      0x80085,\n      0x80045,\n      0x900eb,\n      0x70106,\n      0x8005d,\n      0x8001d,\n      0x9009b,\n      0x70116,\n      0x8007d,\n      0x8003d,\n      0x900db,\n      0x7010e,\n      0x8006d,\n      0x8002d,\n      0x900bb,\n      0x8000d,\n      0x8008d,\n      0x8004d,\n      0x900fb,\n      0x70101,\n      0x80053,\n      0x80013,\n      0x8011b,\n      0x70111,\n      0x80073,\n      0x80033,\n      0x900c7,\n      0x70109,\n      0x80063,\n      0x80023,\n      0x900a7,\n      0x80003,\n      0x80083,\n      0x80043,\n      0x900e7,\n      0x70105,\n      0x8005b,\n      0x8001b,\n      0x90097,\n      0x70115,\n      0x8007b,\n      0x8003b,\n      0x900d7,\n      0x7010d,\n      0x8006b,\n      0x8002b,\n      0x900b7,\n      0x8000b,\n      0x8008b,\n      0x8004b,\n      0x900f7,\n      0x70103,\n      0x80057,\n      0x80017,\n      0x8011f,\n      0x70113,\n      0x80077,\n      0x80037,\n      0x900cf,\n      0x7010b,\n      0x80067,\n      0x80027,\n      0x900af,\n      0x80007,\n      0x80087,\n      0x80047,\n      0x900ef,\n      0x70107,\n      0x8005f,\n      0x8001f,\n      0x9009f,\n      0x70117,\n      0x8007f,\n      0x8003f,\n      0x900df,\n      0x7010f,\n      0x8006f,\n      0x8002f,\n      0x900bf,\n      0x8000f,\n      0x8008f,\n      0x8004f,\n      0x900ff\n    ]),\n    9\n  ];\n\n  var fixedDistCodeTab = [\n    new Uint32Array([\n      0x50000,\n      0x50010,\n      0x50008,\n      0x50018,\n      0x50004,\n      0x50014,\n      0x5000c,\n      0x5001c,\n      0x50002,\n      0x50012,\n      0x5000a,\n      0x5001a,\n      0x50006,\n      0x50016,\n      0x5000e,\n      0x00000,\n      0x50001,\n      0x50011,\n      0x50009,\n      0x50019,\n      0x50005,\n      0x50015,\n      0x5000d,\n      0x5001d,\n      0x50003,\n      0x50013,\n      0x5000b,\n      0x5001b,\n      0x50007,\n      0x50017,\n      0x5000f,\n      0x00000\n    ]),\n    5\n  ];\n\n  function error(e) {\n    throw new Error(e);\n  }\n\n  function constructor(bytes) {\n    //var bytes = stream.getBytes();\n    var bytesPos = 0;\n\n    var cmf = bytes[bytesPos++];\n    var flg = bytes[bytesPos++];\n    if (cmf == -1 || flg == -1) error(\"Invalid header in flate stream\");\n    if ((cmf & 0x0f) != 0x08)\n      error(\"Unknown compression method in flate stream\");\n    if (((cmf << 8) + flg) % 31 != 0) error(\"Bad FCHECK in flate stream\");\n    if (flg & 0x20) error(\"FDICT bit set in flate stream\");\n\n    this.bytes = bytes;\n    this.bytesPos = bytesPos;\n\n    this.codeSize = 0;\n    this.codeBuf = 0;\n\n    DecodeStream.call(this);\n  }\n\n  constructor.prototype = Object.create(DecodeStream.prototype);\n\n  constructor.prototype.getBits = function(bits) {\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var bytes = this.bytes;\n    var bytesPos = this.bytesPos;\n\n    var b;\n    while (codeSize < bits) {\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad encoding in flate stream\");\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & ((1 << bits) - 1);\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    this.bytesPos = bytesPos;\n    return b;\n  };\n\n  constructor.prototype.getCode = function(table) {\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var bytes = this.bytes;\n    var bytesPos = this.bytesPos;\n\n    while (codeSize < maxLen) {\n      var b;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad encoding in flate stream\");\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & ((1 << maxLen) - 1)];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeSize == 0 || codeSize < codeLen || codeLen == 0)\n      error(\"Bad encoding in flate stream\");\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    this.bytesPos = bytesPos;\n    return codeVal;\n  };\n\n  constructor.prototype.generateHuffmanTable = function(lengths) {\n    var n = lengths.length;\n\n    // find max code length\n    var maxLen = 0;\n    for (var i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) maxLen = lengths[i];\n    }\n\n    // build the table\n    var size = 1 << maxLen;\n    var codes = new Uint32Array(size);\n    for (\n      var len = 1, code = 0, skip = 2;\n      len <= maxLen;\n      ++len, code <<= 1, skip <<= 1\n    ) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] == len) {\n          // bit-reverse the code\n          var code2 = 0;\n          var t = code;\n          for (var i = 0; i < len; ++i) {\n            code2 = (code2 << 1) | (t & 1);\n            t >>= 1;\n          }\n\n          // fill the table entries\n          for (var i = code2; i < size; i += skip) codes[i] = (len << 16) | val;\n\n          ++code;\n        }\n      }\n    }\n\n    return [codes, maxLen];\n  };\n\n  constructor.prototype.readBlock = function() {\n    function repeat(stream, array, len, offset, what) {\n      var repeat = stream.getBits(len) + offset;\n      while (repeat-- > 0) array[i++] = what;\n    }\n\n    // read block header\n    var hdr = this.getBits(3);\n    if (hdr & 1) this.eof = true;\n    hdr >>= 1;\n\n    if (hdr == 0) {\n      // uncompressed block\n      var bytes = this.bytes;\n      var bytesPos = this.bytesPos;\n      var b;\n\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      var blockLen = b;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      blockLen |= b << 8;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      var check = b;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      check |= b << 8;\n      if (check != (~blockLen & 0xffff))\n        error(\"Bad uncompressed block length in flate stream\");\n\n      this.codeBuf = 0;\n      this.codeSize = 0;\n\n      var bufferLength = this.bufferLength;\n      var buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      for (var n = bufferLength; n < end; ++n) {\n        if (typeof (b = bytes[bytesPos++]) == \"undefined\") {\n          this.eof = true;\n          break;\n        }\n        buffer[n] = b;\n      }\n      this.bytesPos = bytesPos;\n      return;\n    }\n\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr == 1) {\n      // compressed block, fixed codes\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr == 2) {\n      // compressed block, dynamic codes\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n\n      // build the code lengths code table\n      var codeLenCodeLengths = Array(codeLenCodeMap.length);\n      var i = 0;\n      while (i < numCodeLenCodes)\n        codeLenCodeLengths[codeLenCodeMap[i++]] = this.getBits(3);\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\n      // build the literal and distance code tables\n      var len = 0;\n      var i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Array(codes);\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code == 16) {\n          repeat(this, codeLengths, 2, 3, len);\n        } else if (code == 17) {\n          repeat(this, codeLengths, 3, 3, (len = 0));\n        } else if (code == 18) {\n          repeat(this, codeLengths, 7, 11, (len = 0));\n        } else {\n          codeLengths[i++] = len = code;\n        }\n      }\n\n      litCodeTable = this.generateHuffmanTable(\n        codeLengths.slice(0, numLitCodes)\n      );\n      distCodeTable = this.generateHuffmanTable(\n        codeLengths.slice(numLitCodes, codes)\n      );\n    } else {\n      error(\"Unknown block type in flate stream\");\n    }\n\n    var buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 == 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) code2 = this.getBits(code2);\n      var len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) code2 = this.getBits(code2);\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) buffer[pos] = buffer[pos - dist];\n    }\n  };\n\n  return constructor;\n})();\n","/*\n * MIT LICENSE\n * Copyright (c) 2011 Devon Govett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n * to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { FlateStream } from './zlib.js';\n\nexport default class PNG {\n  constructor(data1) {\n    let i;\n    this.data = data1;\n    this.pos = 8; // Skip the default header\n\n    this.palette = [];\n    this.imgData = [];\n    this.transparency = {};\n    this.animation = null;\n    this.text = {};\n    let frame = null;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var data;\n      let chunkSize = this.readUInt32();\n      let section = '';\n      for (i = 0; i < 4; i++) {\n        section += String.fromCharCode(this.data[this.pos++]);\n      }\n\n      switch (section) {\n        case 'IHDR':\n          // we can grab  interesting values from here (like width, height, etc)\n          this.width = this.readUInt32();\n          this.height = this.readUInt32();\n          this.bits = this.data[this.pos++];\n          this.colorType = this.data[this.pos++];\n          this.compressionMethod = this.data[this.pos++];\n          this.filterMethod = this.data[this.pos++];\n          this.interlaceMethod = this.data[this.pos++];\n          break;\n\n        case 'acTL':\n          // we have an animated PNG\n          this.animation = {\n            numFrames: this.readUInt32(),\n            numPlays: this.readUInt32() || Infinity,\n            frames: [],\n          };\n          break;\n\n        case 'PLTE':\n          this.palette = this.read(chunkSize);\n          break;\n\n        case 'fcTL':\n          if (frame) {\n            this.animation.frames.push(frame);\n          }\n\n          this.pos += 4; // skip sequence number\n          frame = {\n            width: this.readUInt32(),\n            height: this.readUInt32(),\n            xOffset: this.readUInt32(),\n            yOffset: this.readUInt32(),\n          };\n\n          var delayNum = this.readUInt16();\n          var delayDen = this.readUInt16() || 100;\n          frame.delay = (1000 * delayNum) / delayDen;\n\n          frame.disposeOp = this.data[this.pos++];\n          frame.blendOp = this.data[this.pos++];\n          frame.data = [];\n          break;\n\n        case 'IDAT':\n        case 'fdAT':\n          if (section === 'fdAT') {\n            this.pos += 4; // skip sequence number\n            chunkSize -= 4;\n          }\n\n          data = (frame && frame.data) || this.imgData;\n          for (i = 0; i < chunkSize; i++) {\n            data.push(this.data[this.pos++]);\n          }\n          break;\n\n        case 'tRNS':\n          // This chunk can only occur once and it must occur after the\n          // PLTE chunk and before the IDAT chunk.\n          this.transparency = {};\n          switch (this.colorType) {\n            case 3:\n              // Indexed color, RGB. Each byte in this chunk is an alpha for\n              // the palette index in the PLTE (\"palette\") chunk up until the\n              // last non-opaque entry. Set up an array, stretching over all\n              // palette entries which will be 0 (opaque) or 1 (transparent).\n              this.transparency.indexed = this.read(chunkSize);\n              var short = 255 - this.transparency.indexed.length;\n              if (short > 0) {\n                for (i = 0; i < short; i++) {\n                  this.transparency.indexed.push(255);\n                }\n              }\n              break;\n            case 0:\n              // Greyscale. Corresponding to entries in the PLTE chunk.\n              // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1\n              this.transparency.grayscale = this.read(chunkSize)[0];\n              break;\n            case 2:\n              // True color with proper alpha channel.\n              this.transparency.rgb = this.read(chunkSize);\n              break;\n          }\n          break;\n\n        case 'tEXt':\n          var text = this.read(chunkSize);\n          var index = text.indexOf(0);\n          var key = String.fromCharCode.apply(String, text.slice(0, index));\n          this.text[key] = String.fromCharCode.apply(\n            String,\n            text.slice(index + 1)\n          );\n          break;\n\n        case 'IEND':\n          if (frame) {\n            this.animation.frames.push(frame);\n          }\n\n          // we've got everything we need!\n          switch (this.colorType) {\n            case 0:\n            case 3:\n            case 4:\n              this.colors = 1;\n              break;\n            case 2:\n            case 6:\n              this.colors = 3;\n              break;\n          }\n\n          this.hasAlphaChannel = [4, 6].includes(this.colorType);\n          var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n          this.pixelBitlength = this.bits * colors;\n\n          switch (this.colors) {\n            case 1:\n              this.colorSpace = 'DeviceGray';\n              break;\n            case 3:\n              this.colorSpace = 'DeviceRGB';\n              break;\n          }\n\n          this.imgData = new Uint8Array(this.imgData);\n          return;\n\n        default:\n          // unknown (or unimportant) section, skip it\n          this.pos += chunkSize;\n      }\n\n      this.pos += 4; // Skip the CRC\n\n      if (this.pos > this.data.length) {\n        throw new Error('Incomplete or corrupt PNG file');\n      }\n    }\n  }\n\n  read(bytes) {\n    const result = new Array(bytes);\n    for (let i = 0; i < bytes; i++) {\n      result[i] = this.data[this.pos++];\n    }\n    return result;\n  }\n\n  readUInt32() {\n    const b1 = this.data[this.pos++] << 24;\n    const b2 = this.data[this.pos++] << 16;\n    const b3 = this.data[this.pos++] << 8;\n    const b4 = this.data[this.pos++];\n    return b1 | b2 | b3 | b4;\n  }\n\n  readUInt16() {\n    const b1 = this.data[this.pos++] << 8;\n    const b2 = this.data[this.pos++];\n    return b1 | b2;\n  }\n\n  decodePixels(data) {\n    if (data == null) {\n      data = this.imgData;\n    }\n    if (data.length === 0) {\n      return new Uint8Array(0);\n    }\n\n    data = new FlateStream(data);\n    data = data.getBytes();\n\n    const { width, height } = this;\n    const pixelBytes = this.pixelBitlength / 8;\n\n    const pixels = new Uint8Array(width * height * pixelBytes);\n    const { length } = data;\n    let pos = 0;\n\n    function pass(x0, y0, dx, dy, singlePass = false) {\n      const w = Math.ceil((width - x0) / dx);\n      const h = Math.ceil((height - y0) / dy);\n      const scanlineLength = pixelBytes * w;\n      const buffer = singlePass ? pixels : new Uint8Array(scanlineLength * h);\n      let row = 0;\n      let c = 0;\n      while (row < h && pos < length) {\n        var byte, col, i, left, upper;\n        switch (data[pos++]) {\n          case 0: // None\n            for (i = 0; i < scanlineLength; i++) {\n              buffer[c++] = data[pos++];\n            }\n            break;\n\n          case 1: // Sub\n            for (i = 0; i < scanlineLength; i++) {\n              byte = data[pos++];\n              left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n              buffer[c++] = (byte + left) % 256;\n            }\n            break;\n\n          case 2: // Up\n            for (i = 0; i < scanlineLength; i++) {\n              byte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              upper =\n                row &&\n                buffer[\n                  (row - 1) * scanlineLength +\n                    col * pixelBytes +\n                    (i % pixelBytes)\n                ];\n              buffer[c++] = (upper + byte) % 256;\n            }\n            break;\n\n          case 3: // Average\n            for (i = 0; i < scanlineLength; i++) {\n              byte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n              upper =\n                row &&\n                buffer[\n                  (row - 1) * scanlineLength +\n                    col * pixelBytes +\n                    (i % pixelBytes)\n                ];\n              buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n            }\n            break;\n\n          case 4: // Paeth\n            for (i = 0; i < scanlineLength; i++) {\n              var paeth, upperLeft;\n              byte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n\n              if (row === 0) {\n                upper = upperLeft = 0;\n              } else {\n                upper =\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                upperLeft =\n                  col &&\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      (col - 1) * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n              }\n\n              const p = left + upper - upperLeft;\n              const pa = Math.abs(p - left);\n              const pb = Math.abs(p - upper);\n              const pc = Math.abs(p - upperLeft);\n\n              if (pa <= pb && pa <= pc) {\n                paeth = left;\n              } else if (pb <= pc) {\n                paeth = upper;\n              } else {\n                paeth = upperLeft;\n              }\n\n              buffer[c++] = (byte + paeth) % 256;\n            }\n            break;\n\n          default:\n            throw new Error(`Invalid filter algorithm: ${data[pos - 1]}`);\n        }\n\n        if (!singlePass) {\n          let pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;\n          let bufferPos = row * scanlineLength;\n          for (i = 0; i < w; i++) {\n            for (let j = 0; j < pixelBytes; j++)\n              pixels[pixelsPos++] = buffer[bufferPos++];\n            pixelsPos += (dx - 1) * pixelBytes;\n          }\n        }\n\n        row++;\n      }\n    }\n\n    if (this.interlaceMethod === 1) {\n      /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */\n      pass(0, 0, 8, 8); // 1\n      pass(4, 0, 8, 8); // 2\n      pass(0, 4, 4, 8); // 3\n      pass(2, 0, 4, 4); // 4\n      pass(0, 2, 2, 4); // 5\n      pass(1, 0, 2, 2); // 6\n      pass(0, 1, 1, 2); // 7\n    } else {\n      pass(0, 0, 1, 1, true);\n    }\n\n    return pixels;\n  }\n\n  decodePalette() {\n    const { palette } = this;\n    const { length } = palette;\n    const transparency = this.transparency.indexed || [];\n    const ret = new Uint8Array((transparency.length || 0) + length);\n    let pos = 0;\n    let c = 0;\n\n    for (let i = 0; i < length; i += 3) {\n      var left;\n      ret[pos++] = palette[i];\n      ret[pos++] = palette[i + 1];\n      ret[pos++] = palette[i + 2];\n      ret[pos++] = (left = transparency[c++]) != null ? left : 255;\n    }\n\n    return ret;\n  }\n\n  copyToImageData(imageData, pixels) {\n    let j, k;\n    let { colors } = this;\n    let palette = null;\n    let alpha = this.hasAlphaChannel;\n\n    if (this.palette.length) {\n      palette =\n        this._decodedPalette || (this._decodedPalette = this.decodePalette());\n      colors = 4;\n      alpha = true;\n    }\n\n    const data = imageData.data || imageData;\n    const { length } = data;\n    const input = palette || pixels;\n    let i = (j = 0);\n\n    if (colors === 1) {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        const v = input[k++];\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    } else {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    }\n  }\n\n  decode() {\n    const ret = new Uint8Array(this.width * this.height * 4);\n    this.copyToImageData(ret, this.decodePixels());\n    return ret;\n  }\n}\n","/**\n * @author shaozilee\n *\n * Bmp format decoder,support 1bit 4bit 8bit 24bit bmp\n *\n */\n\nexport default function BmpDecoder(buffer, is_with_alpha) {\n  this.pos = 2;\n  this.buffer = new DataView(buffer.buffer);\n  this.is_with_alpha = !!is_with_alpha;\n  this.bottom_up = true;\n  this.flag = buffer.slice(0, 2);\n\n  if (this.flag[0] !== 66 || this.flag[1] !== 77)\n    throw new Error('Invalid BMP File');\n  this.parseHeader();\n  this.parseRGBA();\n}\n\nBmpDecoder.prototype.parseHeader = function() {\n  this.fileSize = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.reserved = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.offset = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.headerSize = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.width = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.height = this.buffer.getInt32(this.pos, true);\n  this.pos += 4;\n  this.planes = this.buffer.getUint16(this.pos, true);\n  this.pos += 2;\n  this.bitPP = this.buffer.getUint16(this.pos, true);\n  this.pos += 2;\n  this.compress = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.rawSize = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.hr = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.vr = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.colors = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.importantColors = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n\n  if (this.bitPP === 16 && this.is_with_alpha) {\n    this.bitPP = 15;\n  }\n  if (this.bitPP < 15) {\n    var len = this.colors === 0 ? 1 << this.bitPP : this.colors;\n    this.palette = new Array(len);\n    for (var i = 0; i < len; i++) {\n      var blue = this.buffer.getUint8(this.pos++);\n      var green = this.buffer.getUint8(this.pos++);\n      var red = this.buffer.getUint8(this.pos++);\n      var quad = this.buffer.getUint8(this.pos++);\n      this.palette[i] = {\n        red: red,\n        green: green,\n        blue: blue,\n        quad: quad,\n      };\n    }\n  }\n  if (this.height < 0) {\n    this.height *= -1;\n    this.bottom_up = false;\n  }\n};\n\nBmpDecoder.prototype.parseRGBA = function() {\n  var bitn = 'bit' + this.bitPP;\n  var len = this.width * this.height * 4;\n  this.data = new ArrayBuffer(len);\n  this[bitn]();\n};\n\nBmpDecoder.prototype.bit1 = function() {\n  var xlen = Math.ceil(this.width / 8);\n  var mode = xlen % 4;\n  var y = this.height >= 0 ? this.height - 1 : -this.height;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < xlen; x++) {\n      var b = this.buffer.getUint8(this.pos++);\n      var location = line * this.width * 4 + x * 8 * 4;\n      for (var i = 0; i < 8; i++) {\n        if (x * 8 + i < this.width) {\n          var rgb = this.palette[(b >> (7 - i)) & 0x1];\n\n          this.data[location + i * 4] = 0;\n          this.data[location + i * 4 + 1] = rgb.blue;\n          this.data[location + i * 4 + 2] = rgb.green;\n          this.data[location + i * 4 + 3] = rgb.red;\n        } else {\n          break;\n        }\n      }\n    }\n\n    if (mode != 0) {\n      this.pos += 4 - mode;\n    }\n  }\n};\n\nBmpDecoder.prototype.bit4 = function() {\n  //RLE-4\n  if (this.compress == 2) {\n    this.data.fill(0xff);\n\n    var location = 0;\n    var lines = this.bottom_up ? this.height - 1 : 0;\n    var low_nibble = false; //for all count of pixel\n\n    while (location < this.data.length) {\n      var a = this.buffer.getUint8(this.pos++);\n      var b = this.buffer.getUint8(this.pos++);\n      //absolute mode\n      if (a == 0) {\n        if (b == 0) {\n          //line end\n          if (this.bottom_up) {\n            lines--;\n          } else {\n            lines++;\n          }\n          location = lines * this.width * 4;\n          low_nibble = false;\n          continue;\n        } else if (b == 1) {\n          //image end\n          break;\n        } else if (b == 2) {\n          //offset x,y\n          var x = this.buffer.getUint8(this.pos++);\n          var y = this.buffer.getUint8(this.pos++);\n          if (this.bottom_up) {\n            lines -= y;\n          } else {\n            lines += y;\n          }\n\n          location += y * this.width * 4 + x * 4;\n        } else {\n          var c = this.buffer.getUint8(this.pos++);\n          for (var i = 0; i < b; i++) {\n            if (low_nibble) {\n              setPixelData.call(this, c & 0x0f);\n            } else {\n              setPixelData.call(this, (c & 0xf0) >> 4);\n            }\n\n            if (i & 1 && i + 1 < b) {\n              c = this.buffer.getUint8(this.pos++);\n            }\n\n            low_nibble = !low_nibble;\n          }\n\n          if ((((b + 1) >> 1) & 1) == 1) {\n            this.pos++;\n          }\n        }\n      } else {\n        //encoded mode\n        for (var i = 0; i < a; i++) {\n          if (low_nibble) {\n            setPixelData.call(this, b & 0x0f);\n          } else {\n            setPixelData.call(this, (b & 0xf0) >> 4);\n          }\n          low_nibble = !low_nibble;\n        }\n      }\n    }\n\n    function setPixelData(rgbIndex) {\n      var rgb = this.palette[rgbIndex];\n      this.data[location] = 0;\n      this.data[location + 1] = rgb.blue;\n      this.data[location + 2] = rgb.green;\n      this.data[location + 3] = rgb.red;\n      location += 4;\n    }\n  } else {\n    var xlen = Math.ceil(this.width / 2);\n    var mode = xlen % 4;\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < xlen; x++) {\n        var b = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 2 * 4;\n\n        var before = b >> 4;\n        var after = b & 0x0f;\n\n        var rgb = this.palette[before];\n        this.data[location] = 0;\n        this.data[location + 1] = rgb.blue;\n        this.data[location + 2] = rgb.green;\n        this.data[location + 3] = rgb.red;\n\n        if (x * 2 + 1 >= this.width) break;\n\n        rgb = this.palette[after];\n\n        this.data[location + 4] = 0;\n        this.data[location + 4 + 1] = rgb.blue;\n        this.data[location + 4 + 2] = rgb.green;\n        this.data[location + 4 + 3] = rgb.red;\n      }\n\n      if (mode != 0) {\n        this.pos += 4 - mode;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.bit8 = function() {\n  //RLE-8\n  if (this.compress == 1) {\n    this.data.fill(0xff);\n\n    var location = 0;\n    var lines = this.bottom_up ? this.height - 1 : 0;\n\n    while (location < this.data.length) {\n      var a = this.buffer.getUint8(this.pos++);\n      var b = this.buffer.getUint8(this.pos++);\n      //absolute mode\n      if (a == 0) {\n        if (b == 0) {\n          //line end\n          if (this.bottom_up) {\n            lines--;\n          } else {\n            lines++;\n          }\n          location = lines * this.width * 4;\n          continue;\n        } else if (b == 1) {\n          //image end\n          break;\n        } else if (b == 2) {\n          //offset x,y\n          var x = this.buffer.getUint8(this.pos++);\n          var y = this.buffer.getUint8(this.pos++);\n          if (this.bottom_up) {\n            lines -= y;\n          } else {\n            lines += y;\n          }\n\n          location += y * this.width * 4 + x * 4;\n        } else {\n          for (var i = 0; i < b; i++) {\n            var c = this.buffer.getUint8(this.pos++);\n            setPixelData.call(this, c);\n          }\n          if (b & (1 == 1)) {\n            this.pos++;\n          }\n        }\n      } else {\n        //encoded mode\n        for (var i = 0; i < a; i++) {\n          setPixelData.call(this, b);\n        }\n      }\n    }\n\n    function setPixelData(rgbIndex) {\n      var rgb = this.palette[rgbIndex];\n      this.data[location] = 0;\n      this.data[location + 1] = rgb.blue;\n      this.data[location + 2] = rgb.green;\n      this.data[location + 3] = rgb.red;\n      location += 4;\n    }\n  } else {\n    var mode = this.width % 4;\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < this.width; x++) {\n        var b = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        if (b < this.palette.length) {\n          var rgb = this.palette[b];\n\n          this.data[location] = 0;\n          this.data[location + 1] = rgb.blue;\n          this.data[location + 2] = rgb.green;\n          this.data[location + 3] = rgb.red;\n        } else {\n          this.data[location] = 0;\n          this.data[location + 1] = 0xff;\n          this.data[location + 2] = 0xff;\n          this.data[location + 3] = 0xff;\n        }\n      }\n      if (mode != 0) {\n        this.pos += 4 - mode;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.bit15 = function() {\n  var dif_w = this.width % 3;\n  var _11111 = parseInt('11111', 2),\n    _1_5 = _11111;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var B = this.buffer.getUint16(this.pos, true);\n      this.pos += 2;\n      var blue = (((B & _1_5) / _1_5) * 255) | 0;\n      var green = ((((B >> 5) & _1_5) / _1_5) * 255) | 0;\n      var red = ((((B >> 10) & _1_5) / _1_5) * 255) | 0;\n      var alpha = B >> 15 ? 0xff : 0x00;\n\n      var location = line * this.width * 4 + x * 4;\n\n      this.data[location] = alpha;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit16 = function() {\n  var dif_w = (this.width % 2) * 2;\n  //default xrgb555\n  this.maskRed = 0x7c00;\n  this.maskGreen = 0x3e0;\n  this.maskBlue = 0x1f;\n  this.mask0 = 0;\n\n  if (this.compress == 3) {\n    this.maskRed = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskGreen = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskBlue = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.mask0 = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n  }\n\n  var ns = [0, 0, 0];\n  for (var i = 0; i < 16; i++) {\n    if ((this.maskRed >> i) & 0x01) ns[0]++;\n    if ((this.maskGreen >> i) & 0x01) ns[1]++;\n    if ((this.maskBlue >> i) & 0x01) ns[2]++;\n  }\n  ns[1] += ns[0];\n  ns[2] += ns[1];\n  ns[0] = 8 - ns[0];\n  ns[1] -= 8;\n  ns[2] -= 8;\n\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var B = this.buffer.getUint16(this.pos, true);\n      this.pos += 2;\n\n      var blue = (B & this.maskBlue) << ns[0];\n      var green = (B & this.maskGreen) >> ns[1];\n      var red = (B & this.maskRed) >> ns[2];\n\n      var location = line * this.width * 4 + x * 4;\n\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit24 = function() {\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      //Little Endian rgb\n      var blue = this.buffer.getUint8(this.pos++);\n      var green = this.buffer.getUint8(this.pos++);\n      var red = this.buffer.getUint8(this.pos++);\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += this.width % 4;\n  }\n};\n\n/**\n * add 32bit decode func\n * @author soubok\n */\nBmpDecoder.prototype.bit32 = function() {\n  //BI_BITFIELDS\n  if (this.compress == 3) {\n    this.maskRed = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskGreen = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskBlue = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.mask0 = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < this.width; x++) {\n        //Little Endian rgba\n        var alpha = this.buffer.getUint8(this.pos++);\n        var blue = this.buffer.getUint8(this.pos++);\n        var green = this.buffer.getUint8(this.pos++);\n        var red = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        this.data[location] = alpha;\n        this.data[location + 1] = blue;\n        this.data[location + 2] = green;\n        this.data[location + 3] = red;\n      }\n    }\n  } else {\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < this.width; x++) {\n        //Little Endian argb\n        var blue = this.buffer.getUint8(this.pos++);\n        var green = this.buffer.getUint8(this.pos++);\n        var red = this.buffer.getUint8(this.pos++);\n        var alpha = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        this.data[location] = alpha;\n        this.data[location + 1] = blue;\n        this.data[location + 2] = green;\n        this.data[location + 3] = red;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.getData = function() {\n  return this.data;\n};\n","import PNG from './png.js';\nimport BMP from './bmp.js';\nimport { toRGB332 } from './colour.js';\n\nconst p = 16; // 16x16 sprite\n\nconst pngSig = [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82];\n\nconst bmpSig = [66, 77];\n\nexport function decode(file) {\n  const { isPNG, isBMP } = detect(file);\n\n  if (isPNG) {\n    return png(file);\n  }\n\n  if (isBMP) {\n    return bmp(file);\n  }\n\n  return file;\n}\n\nexport function detect(file) {\n  let isPNG = true;\n  let isBMP = true;\n  for (let i = 0; i < Math.max(pngSig.length, bmpSig.length); i++) {\n    if (file[i] !== bmpSig[i]) {\n      isBMP = false;\n    }\n    if (file[i] !== pngSig[i]) {\n      isPNG = false;\n      break;\n    }\n  }\n\n  return { isPNG, isBMP };\n}\n\nexport function bmp(file) {\n  const bmp = new BMP(file);\n  const pixels = bmp.data;\n  return transform({ pixels, width: bmp.width, alphaFirst: true });\n}\n\nexport function png(file) {\n  const png = new PNG(file);\n  const pixels = png.decode();\n  return transform({ pixels, width: png.width });\n}\n\nexport function transform({ pixels, width, alphaFirst = false }) {\n  // let tmp = null;\n\n  const res = [];\n\n  let [ri, gi, bi, ai] = [0, 1, 2, 3];\n  if (alphaFirst) {\n    [ai, bi, gi, ri] = [0, 1, 2, 3];\n  }\n\n  let n = 1;\n\n  if (width / 16 === ((width / 16) | 0)) {\n    n = width / 16;\n  } else {\n    // throw new Error('unsupported dimension');\n    const d = width % 16;\n    n = (width + (16 - d)) / 16;\n  }\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    const row = ((i / 4 / p) | 0) % p;\n    const offset = (i / 4) % p;\n    const spriteIndex = (i / 4 / (p * p)) | 0;\n\n    const spriteRow = ((spriteIndex / n) | 0) * (p * p * n);\n    let dataIndex = spriteRow;\n    dataIndex += spriteIndex * p;\n    dataIndex += row * width;\n    dataIndex += offset;\n    dataIndex *= 4;\n\n    // NOTE I don't fully understand how this works, but it does after\n    // lots of testing...\n    dataIndex -= p * 4 * ((spriteIndex / n) | 0) * n;\n\n    const [r, g, b, a] = [\n      pixels[dataIndex + ri],\n      pixels[dataIndex + gi],\n      pixels[dataIndex + bi],\n      pixels[dataIndex + ai],\n    ];\n\n    if (a === 0 || r === undefined) {\n      // transparent\n      res.push(0xe3);\n    } else {\n      res.push(toRGB332(r, g, b));\n    }\n  }\n\n  return new Uint8Array(res);\n}\n","class ArrayNode extends Array {\n  constructor() {\n    super();\n\n    // allow setting any node property via proxy\n    return new Proxy(this, {\n      set(obj, prop, value) {\n        if (prop in HTMLElement.prototype) {\n          return obj.filter(el => (el[prop] = value));\n        }\n\n        const res = (this[prop] = value);\n        return res;\n      },\n    });\n  }\n\n  on(event, handler, options) {\n    return this.filter(el => el.addEventListener(event, handler, options));\n  }\n\n  emit(type, data) {\n    const event = new Event(type, { data });\n    return this.filter(el => el.dispatchEvent(event));\n  }\n}\n\nexport const $ = (s, ctx = document) => ArrayNode.from(ctx.querySelectorAll(s));\n","import { rgbFromIndex, transparent, toRGB332 } from './lib/colour.js';\n\nconst pixelLength = 256;\nconst width = 16;\n\nconst colourTable = [];\nfor (let i = 0; i < pixelLength; i++) {\n  colourTable.push(rgbFromIndex(i));\n}\n\nexport function getCoords(e) {\n  const rect = e.target.getBoundingClientRect();\n  const x = ((e.clientX - rect.left) / 16) | 0; //x position within the element.\n  const y = ((e.clientY - rect.top) / 16) | 0; //y position within the element.\n  const index = xyToIndex({ x, y });\n  return { x, y, index };\n}\n\nexport function emptyCanvas(ctx) {\n  const blankData = new Uint8ClampedArray(\n    ctx.canvas.width * ctx.canvas.height * 4\n  );\n  // blankData.fill(transparent);\n  for (let i = 0; i < blankData.length; i += 4) {\n    blankData[i + 0] = 0;\n    blankData[i + 1] = 0;\n    blankData[i + 2] = 0;\n    blankData[i + 3] = 0;\n  }\n\n  const blank = new ImageData(blankData, ctx.canvas.width, ctx.canvas.height);\n  ctx.putImageData(blank, 0, 0);\n}\n\nfunction xyToIndex({ x, y }) {\n  if (x < 0) {\n    return null;\n  }\n\n  if (x >= width) {\n    return null;\n  }\n\n  if (y >= width) {\n    return null;\n  }\n\n  return width * y + x;\n}\n\nexport class Sprite {\n  scale = 16;\n\n  /**\n   *\n   * @param {Uint8Array} pixels\n   */\n  constructor(pixels) {\n    this.pixels = pixels;\n    this.ctx = document.createElement('canvas').getContext('2d');\n    this.ctx.canvas.width = this.ctx.canvas.height = width;\n    this.render();\n  }\n\n  get canvas() {\n    return this.ctx.canvas;\n  }\n\n  pget({ index = null, x = null, y }) {\n    if (index === null) {\n      index = xyToIndex({ x, y });\n    }\n\n    return this.pixels[index];\n  }\n\n  pset({ index = null, x = null, y, value }) {\n    if (index === null) {\n      index = xyToIndex({ x, y });\n    }\n\n    this.pixels[index] = value;\n    this.render();\n  }\n\n  clear() {\n    this.pixels.fill(transparent);\n    this.render();\n  }\n\n  canvasToPixels() {\n    const imageData = this.ctx.getImageData(0, 0, width, width);\n    for (let i = 0; i < imageData.data.length / 4; i++) {\n      const [r, g, b, a] = imageData.data.slice(i * 4, i * 4 + 4);\n\n      if (a === 0) {\n        this.pixels[i] = transparent;\n      } else {\n        this.pixels[i] = toRGB332(r, g, b);\n      }\n    }\n  }\n\n  render(dx = 0, dy = 0) {\n    const pixels = this.pixels;\n\n    // imageData is the internal copy\n    const imageData = this.ctx.getImageData(0, 0, width, width);\n\n    for (let i = 0; i < pixels.length; i++) {\n      let index = pixels[i];\n      const { r, g, b, a } = colourTable[index];\n      imageData.data[i * 4 + 0] = r;\n      imageData.data[i * 4 + 1] = g;\n      imageData.data[i * 4 + 2] = b;\n      imageData.data[i * 4 + 3] = a * 255;\n    }\n\n    if (dx !== 0 || dy !== 0) {\n      emptyCanvas(this.ctx);\n    }\n\n    this.ctx.putImageData(\n      imageData,\n      dx,\n      dy,\n      0,\n      0,\n      imageData.width,\n      imageData.height\n    );\n  }\n\n  paint(ctx) {\n    // clear, set to jaggy and scale to canvas\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(\n      this.ctx.canvas,\n      0,\n      0,\n      this.ctx.canvas.width,\n      this.ctx.canvas.height,\n      0,\n      0,\n      ctx.canvas.width,\n      ctx.canvas.height\n    );\n  }\n}\n\nexport default class SpriteSheet {\n  sprites = [];\n  previewCtx = [];\n  history = [];\n  ctx = null;\n  _undoPtr = 0;\n  _current = 0;\n  length = 0;\n\n  static getCoords = getCoords;\n\n  constructor(data, ctx) {\n    this.data = new Uint8Array(pixelLength * 4 * 16);\n    this.data.set(data, 0);\n\n    for (let i = 0; i < this.data.length; i += pixelLength) {\n      const spriteData = this.data.subarray(i, i + pixelLength);\n      const sprite = new Sprite(spriteData);\n      this.sprites.push(sprite);\n\n      const ctx = document.createElement('canvas').getContext('2d');\n      ctx.canvas.width = ctx.canvas.height = width * 2;\n      this.previewCtx.push(ctx);\n      sprite.paint(ctx);\n    }\n\n    this.snapshot();\n    this.length = data.length / pixelLength;\n    this._current = 0;\n    this.ctx = ctx;\n  }\n\n  snapshot() {\n    this.history.splice(this._undoPtr + 1);\n    this.history.push(new Uint8Array(this.data));\n    this._undoPtr = this.history.length - 1;\n    console.log(`history: ${this.history.length}`);\n  }\n\n  undo() {\n    const data = this.history[this._undoPtr];\n\n    if (!data) {\n      console.log(`no undo data @ ${this._undoPtr}`);\n      return;\n    }\n    console.log(`undoing @ ${this._undoPtr}`);\n    this._undoPtr--;\n\n    this.data = data;\n    for (let i = 0; i < this.length; i++) {\n      this.rebuild(i);\n    }\n    this.paint();\n  }\n\n  rebuild(i) {\n    if (i < 0 || i > this.length) {\n      return; // noop\n    }\n    const sprite = new Sprite(\n      this.data.subarray(i * pixelLength, i * pixelLength + pixelLength)\n    );\n    this.sprites[i] = sprite;\n    sprite.paint(this.previewCtx[i]);\n  }\n\n  getPreviewElements() {\n    return this.previewCtx.map(_ => _.canvas);\n  }\n\n  canvasToPixels() {\n    this.sprites[this._current].canvasToPixels();\n  }\n\n  pset(coords, value) {\n    this.sprites[this._current].pset({ ...coords, value });\n    return true;\n  }\n\n  pget(args) {\n    return this.sprites[this._current].pget(args);\n  }\n\n  get current() {\n    return this._current;\n  }\n\n  get sprite() {\n    return this.sprites[this._current];\n  }\n\n  set current(value) {\n    this._current = value;\n    this.paint();\n  }\n\n  clear() {\n    this.snapshot();\n    this.sprites[this._current].clear();\n    // this.sprites[this._current].render();\n    this.paint();\n  }\n\n  renderPreview(i) {\n    this.sprites[i].draw(this.previewCtx[i]);\n  }\n\n  paint(i = this._current) {\n    const sprite = this.sprites[i];\n    sprite.paint(this.ctx);\n    sprite.paint(this.previewCtx[this._current]);\n\n    this.getPreviewElements().map(_ => _.classList.remove('focus'));\n    this.previewCtx[this._current].canvas.classList.add('focus');\n  }\n}\n","import { transparent } from './lib/colour.js';\n\nexport default class ColourPicker {\n  transparent = transparent;\n  _index = 0;\n  _history = [];\n\n  constructor(size, target) {\n    this.size = size;\n\n    const html = Array.from({ length: size }, (_, i) => {\n      return `<div title=\"Key ${i + 1}\" data-id=${i} id=\"picker-${i}\"></div>`;\n    }).join('');\n    target.innerHTML = html;\n\n    target.addEventListener('mousedown', e => {\n      if (e.target.dataset.id) {\n        this.index = e.target.dataset.id;\n      }\n    });\n\n    this.container = target;\n    this.history = [0, 255, this.transparent];\n    this.index = 0;\n  }\n\n  set value(index) {\n    const colour = parseInt(index, 10);\n\n    if (colour === this._history[0]) {\n      this.index = 0;\n      return;\n    }\n\n    this._history.unshift(colour);\n    this.history = this._history.slice(0, this.size);\n    this.index = 0;\n  }\n\n  set history(values) {\n    this._history = values;\n    values.forEach((value, i) => {\n      document.querySelector('#picker-' + i).className = 'c-' + value;\n    });\n  }\n\n  get value() {\n    return this._history[this._index];\n  }\n\n  set index(value) {\n    value = parseInt(value, 10);\n    this._index = value;\n    this.container.dataset.selected = value + 1;\n  }\n}\n","import { $ } from '../lib/$.js';\nimport { getCoords } from './SpriteSheet.js';\n\nexport default class Tool {\n  types = ['brush', 'fill', 'erase', 'pan'];\n  _selected = 'brush';\n  state = {\n    target: null,\n    index: null,\n  };\n\n  constructor({ type = 'brush', colour }) {\n    this.colour = colour;\n\n    $('#tool-types button').on('click', e => {\n      this.selected = e.target.dataset.action;\n    });\n\n    const shortcuts = this.types.map(_ => _[0]);\n\n    document.body.addEventListener('keydown', e => {\n      const k = e.key;\n      const i = shortcuts.indexOf(k);\n      if (i > -1) {\n        this.selected = this.types[i];\n      }\n    });\n\n    this.selected = type;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value) {\n    this._selected = value;\n    this.state = { index: null, target: null };\n\n    $('#tool-types button').className = '';\n    $(`#tool-types button[data-action=\"${value}\"]`).className = 'selected';\n    document.documentElement.dataset.tool = value;\n  }\n\n  shift(shift) {\n    this.state.index = null;\n    if (shift) {\n      if (this._last !== 'erase') this._last = this.selected;\n      this.selected = 'erase';\n    } else if (this._last) {\n      this.selected = this._last;\n      this._last = null;\n    }\n  }\n\n  pan(coords, sprites) {\n    const sprite = sprites.sprite;\n    const ctx = sprites.ctx;\n    const x = coords.x - this._coords.x;\n    const y = coords.y - this._coords.y;\n\n    sprite.render(x, y);\n    sprite.paint(ctx);\n  }\n\n  fill(sprites, coords, source, target) {\n    if (!coords || coords.index === null) return;\n\n    const value = sprites.pget(coords);\n\n    if (value !== source || value === target) {\n      return;\n    }\n\n    this.paint(sprites, coords, target);\n\n    const { x, y } = coords;\n\n    this.fill(sprites, { x: x - 1, y }, source, target);\n    this.fill(sprites, { x: x + 1, y }, source, target);\n    this.fill(sprites, { x, y: y - 1 }, source, target);\n    this.fill(sprites, { x, y: y + 1 }, source, target);\n  }\n\n  paint(sprites, coords, target) {\n    return sprites.pset(coords, target);\n  }\n\n  start(event) {\n    const coords = getCoords(event);\n    this._coords = coords;\n  }\n\n  end() {\n    // this._coords = null;\n  }\n\n  apply(event, sprites) {\n    const coords = getCoords(event);\n    let target = this.colour.value;\n\n    if (this.selected === 'erase') {\n      target = this.colour.transparent;\n    }\n\n    // if nothing has changed, don't do the work\n    if (\n      event.type === this.state.event &&\n      coords.index === this.state.index &&\n      target === this.state.target\n    ) {\n      return;\n    }\n    this.state.index = coords.index;\n    this.state.target = target;\n    this.state.event = event.type;\n\n    if (this.selected === 'pan') {\n      if (event.type === 'click' && this._coords.index !== coords.index) {\n        // this is a release\n        // read from the canvas and put into pixels\n        sprites.snapshot();\n        sprites.canvasToPixels();\n        sprites.rebuild(sprites.current);\n        sprites.paint();\n        return;\n      }\n\n      if (!this._coords) {\n        return; // noop\n      }\n\n      this.pan(coords, sprites);\n\n      return;\n    }\n\n    if (this.selected === 'fill') {\n      // now find surrounding pixels of the same colour\n      this.fill(sprites, coords, sprites.pget(coords), target);\n    } else {\n      this.paint(sprites, coords, target);\n    }\n\n    // update canvas\n    if (event.type === 'click') sprites.snapshot();\n    sprites.paint();\n  }\n}\n","import drop from '../lib/dnd.js';\nimport { rgbFromIndex, transparent } from './lib/colour.js';\nimport save from '../lib/save.js';\nimport { decode } from './lib/parser.js';\nimport { $ } from '../lib/$.js';\nimport SpriteSheet from './SpriteSheet.js';\nimport ColourPicker from './ColourPicker.js';\nimport Tool from './Tool.js';\n\nconst container = document.querySelector('#container');\nconst ctx = container.getContext('2d');\nconst spritesContainer = document.querySelector('#sprites');\nconst debug = document.querySelector('#debug');\nconst picker = document.querySelector('.picker');\nconst upload = document.querySelector('#upload input');\nconst pickerColour = document.querySelector('.pickerColour div');\n\nconst buttons = $('#tools button[data-action]');\n\nlet sprites = null;\n\nfunction newSpriteSheet(check = true) {\n  if (check) {\n    if (!confirm('Are you sure you want to create a blank new sprite sheet?')) {\n      return;\n    }\n  }\n\n  sprites = new SpriteSheet(\n    Uint8Array.from({ length: 256 * 16 * 4 }, (_, i) => {\n      if (check == false && i < 256) return i;\n      return transparent;\n    }),\n    ctx\n  );\n\n  renderSpritePreviews();\n  renderCurrentSprite();\n}\n\nconst newSprite = () => {\n  totalSprites++;\n  currentSprite = totalSprites - 1;\n  sprites = Uint8Array.from(\n    Array.from(sprites).concat(\n      Array.from({ length: 256 }).fill(colour.transparent)\n    )\n  );\n  renderSpritePreviews();\n  renderCurrentSprite();\n};\n\nconst dupeSprite = () => {\n  const offset = currentSprite;\n  console.log('dupe ' + offset);\n  const copy = Array.from(sprites.slice(offset * 256, offset * 256 + 256));\n  totalSprites++;\n  currentSprite = totalSprites - 1;\n  sprites = Uint8Array.from(Array.from(sprites).concat(copy));\n  renderSpritePreviews();\n  renderCurrentSprite();\n};\n\nfunction download() {\n  const filename = prompt('Filename:', 'untitled.spr');\n  if (filename) {\n    save(sprites.data, filename);\n  }\n}\n\nconst colour = new ColourPicker(8, pickerColour.parentNode);\nconst tool = new Tool({ colour });\n\nbuttons.on('click', e => {\n  const action = e.target.dataset.action;\n\n  if (action === 'new') {\n    newSpriteSheet(true);\n  }\n\n  if (action === 'undo') {\n    sprites.undo();\n  }\n\n  if (action === 'dupe') {\n    dupeSprite();\n  }\n\n  let currentSprite = sprites.current;\n  const totalSprites = sprites.length;\n\n  if (action.startsWith('ro')) {\n    const left = action === 'rol';\n    const right = action === 'ror';\n    if (\n      (right && currentSprite == totalSprites - 1) ||\n      (left && currentSprite === 0)\n    ) {\n      return;\n    }\n\n    sprites.snapshot();\n    const offset = 256 * currentSprite;\n    const copy = sprites.data.slice(offset, offset + 256);\n    const next = (currentSprite + (left ? -1 : 1)) * 256;\n    sprites.data.set(sprites.data.slice(next, next + 256), offset);\n    sprites.data.set(copy, next);\n    sprites.current += left ? -1 : 1;\n    sprites.rebuild(sprites.current - 1);\n    sprites.rebuild(sprites.current + 1);\n    sprites.rebuild(sprites.current);\n    sprites.paint();\n  }\n\n  if (action === 'del') {\n    const copy = Array.from(sprites);\n    copy.splice(offset, 256);\n    sprites = Uint8Array.from(copy);\n    totalSprites--;\n    if (currentSprite !== 0) {\n      currentSprite--;\n    }\n    renderSpritePreviews();\n    renderCurrentSprite();\n  }\n\n  if (action === 'clear') {\n    sprites.clear();\n  }\n\n  if (action === 'download') {\n    download();\n  }\n});\n\npicker.addEventListener('mousedown', e => {\n  colour.value = e.target.dataset.value;\n});\n\nlet down = false;\ncontainer.addEventListener(\n  'mousedown',\n  event => {\n    down = true;\n    tool.start(event);\n  },\n  true\n);\n\ncontainer.addEventListener(\n  'mouseup',\n  () => {\n    down = false;\n    tool.end();\n  },\n  true\n);\n\ncontainer.addEventListener(\n  'mousemove',\n  e => {\n    if (down) {\n      container.onclick(e);\n    }\n  },\n  true\n);\n\ncontainer.onclick = e => {\n  if (e.altKey || e.ctrlKey) {\n    colour.value = sprites.pget(SpriteSheet.getCoords(e));\n  } else {\n    tool.apply(e, sprites);\n  }\n};\n\n// main key handlers\ndocument.body.addEventListener('keyup', e => {\n  if (e.key === 'Shift') {\n    tool.shift(false);\n  }\n});\n\ndocument.body.addEventListener('keydown', e => {\n  if (e.key === 'Shift') {\n    tool.shift(true);\n  }\n\n  if (e.key >= '1' && e.key <= '8') {\n    colour.index = parseInt(e.key, 10) - 1;\n    return;\n  }\n\n  if (e.shiftKey === false && e.key === 'z' && (e.metaKey || e.ctrlKey)) {\n    sprites.undo();\n    return;\n  }\n\n  if (e.key === 'D') {\n    download();\n    return;\n  }\n\n  let current = sprites.current;\n  if (e.key === 'ArrowLeft') {\n    current--;\n  }\n  if (e.key === 'ArrowRight') {\n    current++;\n  }\n\n  if (current === sprites.length) {\n    current = 0;\n  } else if (current < 0) {\n    current = sprites.length - 1;\n  }\n\n  if (current !== sprites.current) {\n    sprites.current = current;\n  }\n});\n\nfunction buildStyleSheet() {\n  let css = '';\n  for (let i = 0; i < 256; i++) {\n    const { r, g, b, a } = rgbFromIndex(i);\n    css += `.c-${i} { background: rgba(${[r, g, b, a].join(', ')}); }`;\n  }\n  const s = document.createElement('style');\n  s.innerText = css;\n  document.head.append(s);\n}\n\nfunction renderCurrentSprite() {\n  try {\n    spritesContainer.querySelector('.focus').classList.remove('focus');\n  } catch (e) {\n    // noop\n  }\n\n  const focused = document.querySelector(\n    `#sprites > :nth-child(${sprites.current + 1})`\n  );\n  if (focused) focused.classList.add('focus');\n  sprites.paint();\n}\n\nfunction renderSpritePreviews() {\n  spritesContainer.innerHTML = '';\n  sprites.getPreviewElements().map(_ => spritesContainer.appendChild(_));\n}\n\nfunction fileHandler(file) {\n  file = decode(file);\n  sprites = new SpriteSheet(file, ctx);\n\n  renderSpritePreviews();\n  renderCurrentSprite();\n}\n\nfunction render(data, into) {\n  into.innerHTML = '';\n  for (let i = 0; i < data.length; i++) {\n    let index = data[i];\n    into.appendChild(makePixel(index, i));\n  }\n}\n\nfunction makePixel(index, dataIndex) {\n  const d = document.createElement('div');\n  d.className = 'c-' + index;\n  d.dataset.value = index;\n  d.dataset.index = dataIndex;\n  return d;\n}\n\ncontainer.onmousemove = e => {\n  let { x, y } = SpriteSheet.getCoords(e);\n  const value = sprites.pget({ x, y });\n\n  debug.innerHTML = `X:${x} Y:${y} -- ${value} 0x${value\n    .toString(16)\n    .padStart(2, '0')}`;\n};\n\ncontainer.onmouseout = () => {\n  debug.innerHTML = '&nbsp;';\n};\n\nspritesContainer.addEventListener('click', e => {\n  const node = e.target;\n  if (node.nodeName === 'CANVAS') {\n    sprites.current = Array.from(node.parentNode.childNodes).indexOf(node);\n  }\n});\n\ndrop(document.documentElement, fileHandler);\nupload.addEventListener('change', e => {\n  const droppedFile = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = event => {\n    fileHandler(new Uint8Array(event.target.result));\n  };\n  reader.readAsArrayBuffer(droppedFile);\n});\n\nnewSpriteSheet(false);\n\n// render the colour picker\nrender(\n  Uint8Array.from({ length: 256 }, (_, i) => i),\n  picker\n);\nbuildStyleSheet();\n"]}