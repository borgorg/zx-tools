{"version":3,"sources":["lib/dnd.js","scr-tools/lib/zx-colour.js","scr-tools/lib/Zoom.js","scr-tools/lib/scr.js","lib/$.js","lib/save.js","scr-tools/lib/matrices.js","scr-tools/lib/Dither.js","scr-tools/lib/image.js","scr-tools/lib/retrofy.js","scr-tools/index.js"],"names":["drop","root","callback","ondragover","ondragend","ondrop","e","preventDefault","droppedFile","dataTransfer","files","reader","FileReader","onload","event","Uint8Array","target","result","readAsArrayBuffer","brightColoursLookup","Map","set","toString","normalColoursLookup","brightColours","normalColours","getIndexForXY","width","x","y","order","Zoom","constructor","buffer","document","body","id","HTMLImageElement","img","canvas","createElement","appendChild","height","getContext","drawImage","parentNode","replaceChild","CanvasRenderingContext2D","ctx","sourceCtx","getImageData","data","toBlob","blob","url","URL","createObjectURL","style","background","clearRect","ImageData","isVisible","_last","makeVisible","className","scale","w","h","imageRendering","setProperty","put","imageData","putImageData","seeXY","key","pixel","strokeStyle","strokeRect","sourceWidth","source","Uint8ClampedArray","i","j","index","end","offset","slice","toBlink","blinkOn","block","attribute","subarray","start","pixels","ink","paper","readAttributes","ptr","byte","colour","load","fetch","arrayBuffer","sleep","ms","Promise","resolve","setTimeout","draw","third","ctr","line","bit","stream","attribs","type","blink","push","pixelsForSCR","loadBlinkAttributes","join","timer","setInterval","doBlink","stop","clearInterval","length","forEach","item","main","log","zoom","window","fillStyle","fillRect","onmousemove","bright","readFromPoint","pageX","pageY","innerHTML","padStart","onclick","values","pixelsToBytes","canvasImageData","row","putPixels","allPixels","allData","getInkFromPixel","rgb","shiftBright","get","attributesForBlock","print","inks","fill","Object","keys","count","console","Array","from","map","filter","sort","a","b","putAttributes","inkData","download","filename","click","Blob","node","href","MouseEvent","dispatchEvent","revokeObjectURL","ArrayNode","Proxy","obj","prop","value","HTMLElement","prototype","el","res","on","handler","options","addEventListener","emit","Event","$","s","querySelectorAll","fileName","isArray","oneDimensional","factor","floydSteinberg","jarvisJudiceNinke","stucki","atkinson","burkes","sierra3","sierra2","sierraLite","none","colorMap","getDistance","current","match","redDifference","greenDifference","blueDifference","defaultFindColor","shortestDistance","Number","MAX_SAFE_INTEGER","distance","defaults","step","channels","diffusionFactor","clip","findColor","matrix","matrices","Dither","dither","settings","k","ref","d","handlePixel","calculateIndex","currentColor","l","newColor","q","ref1","diffuseError","applyNewColor","channelOffset","entry","len","results","di","dx","dy","results1","m","ref2","results2","image","imageToBlob","then","fileToBinary","contrast","intercept","threshold","_","r","v","invertPotentialInk","inkCount","c","crop","destination","longest","shortest","imageToCanvas","imageToPixels","file","onloadend","all","debug","Image","crossOrigin","src","reject","onerror","bufferCtx","render","pixelData","renderFromInk","originalData","pixelsToImage","toDataURL","prompt","scrBlob","scrURL","container","scrCtx","ul","li","attribsLI","img2","inkImg","pixelImg","zoomOriginal","zoomPixel","zoomInk","zoomResult","rootCanvas","querySelector","classList","add","hover","bind","putInkForBlock","newBlock","attributes","blockBuffer","location","search","includes","basename","split","altDownload","isSCR","toUpperCase","endsWith","div","button","innerText","prepend","fileHandler","name"],"mappings":"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","file":"scr-tools.d0b3451c.js","sourceRoot":"../public","sourcesContent":["export default function drop(root, callback) {\n  root.ondragover = () => false;\n  root.ondragend = () => false;\n  root.ondrop = e => {\n    e.preventDefault();\n\n    const droppedFile = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      callback(new Uint8Array(event.target.result));\n    };\n    reader.readAsArrayBuffer(droppedFile);\n\n    return false;\n  };\n}\n","export const brightColoursLookup = new Map();\nbrightColoursLookup.set([0, 0, 0].toString(), 0b000);\nbrightColoursLookup.set([0, 0, 0xff].toString(), 0b001);\nbrightColoursLookup.set([0xff, 0, 0].toString(), 0b010);\nbrightColoursLookup.set([0xff, 0, 0xff].toString(), 0b011);\nbrightColoursLookup.set([0, 0xff, 0].toString(), 0b100);\nbrightColoursLookup.set([0, 0xff, 0xff].toString(), 0b101);\nbrightColoursLookup.set([0xff, 0xff, 0].toString(), 0b110);\nbrightColoursLookup.set([0xff, 0xff, 0xff].toString(), 0b111);\n\nexport const normalColoursLookup = new Map();\nnormalColoursLookup.set([0, 0, 0].toString(), 0b000);\nnormalColoursLookup.set([0, 0, 0xd7].toString(), 0b001);\nnormalColoursLookup.set([0xd7, 0, 0].toString(), 0b010);\nnormalColoursLookup.set([0xd7, 0, 0xd7].toString(), 0b011);\nnormalColoursLookup.set([0, 0xd7, 0].toString(), 0b100);\nnormalColoursLookup.set([0, 0xd7, 0xd7].toString(), 0b101);\nnormalColoursLookup.set([0xd7, 0xd7, 0].toString(), 0b110);\nnormalColoursLookup.set([0xd7, 0xd7, 0xd7].toString(), 0b111);\n\nexport const brightColours = {\n  0b000: [0, 0, 0],\n  0b001: [0, 0, 0xff],\n  0b010: [0xff, 0, 0],\n  0b011: [0xff, 0, 0xff],\n  0b100: [0, 0xff, 0],\n  0b101: [0, 0xff, 0xff],\n  0b110: [0xff, 0xff, 0],\n  0b111: [0xff, 0xff, 0xff],\n};\n\nexport const normalColours = {\n  0b000: [0, 0, 0],\n  0b001: [0, 0, 0xd7],\n  0b010: [0xd7, 0, 0],\n  0b011: [0xd7, 0, 0xd7],\n  0b100: [0, 0xd7, 0],\n  0b101: [0, 0xd7, 0xd7],\n  0b110: [0xd7, 0xd7, 0],\n  0b111: [0xd7, 0xd7, 0xd7],\n};\n","function getIndexForXY(width, x, y) {\n  return width * y + x;\n}\n\nlet order = 1;\n\nexport default class Zoom {\n  constructor(buffer, target = document.body, id) {\n    this.target = target;\n    this.order = order++;\n    this.id = id || `zoom-${this.order}`;\n    if (buffer instanceof HTMLImageElement) {\n      const img = buffer;\n      const canvas = document.createElement('canvas');\n      target.appendChild(canvas);\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = (buffer = canvas.getContext('2d'));\n      ctx.drawImage(img, 0, 0);\n      img.parentNode.replaceChild(canvas, img);\n    }\n\n    if (buffer instanceof CanvasRenderingContext2D) {\n      const ctx = (this.sourceCtx = buffer);\n      this.buffer = buffer.getImageData(\n        0,\n        0,\n        buffer.canvas.width,\n        buffer.canvas.height\n      ).data;\n      ctx.canvas.toBlob(blob => {\n        const url = URL.createObjectURL(blob);\n        ctx.canvas.style.background = `url(${url}) no-repeat`;\n        ctx.clearRect(0, 0, buffer.canvas.width, buffer.canvas.height);\n      });\n    } else {\n      this.buffer = buffer instanceof ImageData ? buffer.data : buffer;\n    }\n    this.isVisible = false;\n    this._last = null;\n  }\n\n  makeVisible(target = this.target) {\n    const canvas = document.createElement('canvas');\n    canvas.className = 'zoom';\n    canvas.id = this.id;\n    target.appendChild(canvas);\n    this.ctx = canvas.getContext('2d');\n\n    const scale = 20;\n    const w = (canvas.width = 8);\n    const h = (canvas.height = 8);\n    canvas.style.imageRendering = 'pixelated';\n    canvas.style.width = `${w * scale}px`;\n    canvas.style.height = `${h * scale}px`;\n    canvas.style.setProperty('--order', this.order);\n    this.isVisible = true;\n\n    return this;\n  }\n\n  put(imageData) {\n    const ctx = this.ctx;\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  seeXY(x, y) {\n    const key = `${x}x${y}`;\n    if (key === this._last) return;\n    this._last = key;\n    if (!this.isVisible) this.makeVisible();\n    const imageData = new ImageData(this.pixel(x, y), 8, 8);\n    this.ctx.putImageData(imageData, 0, 0);\n\n    if (this.sourceCtx) {\n      const ctx = this.sourceCtx;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.strokeStyle = 'white';\n      ctx.strokeRect(x * 8 + 0.5, y * 8 + 0.5, 8, 8);\n      ctx.strokeStyle = 'black';\n      ctx.strokeRect(x * 8 - 0.5, y * 8 - 0.5, 8, 8);\n    }\n  }\n\n  pixel(x = 0, y = 0) {\n    const sourceWidth = 256;\n    const width = 8;\n    const height = 8;\n    const source = this.buffer;\n\n    const data = new Uint8ClampedArray(width * height * 4);\n\n    const print = false; //x === 31 && y === 23;\n\n    for (let i = 0; i < height; i++) {\n      const j = getIndexForXY(sourceWidth, x * 8, y * 8 + i);\n      const index = j * 4;\n      const end = index + width * 4;\n      const offset = i * width * 4;\n      if (print) {\n        console.log(\n          'j: %s, index: %s, end: %s',\n          j,\n          index,\n          end,\n          x * 8,\n          i,\n          source.subarray(index, end)\n        );\n      }\n      data.set(source.slice(index, end), offset);\n    }\n\n    return data;\n  }\n}\n","import {\n  brightColours,\n  normalColours,\n  normalColoursLookup,\n  brightColoursLookup,\n} from './zx-colour.js';\n\nimport Zoom from './Zoom.js';\n\nlet toBlink = [];\nlet blinkOn = false;\n\nfunction block(\n  x = 0,\n  y = 0,\n  buffer, // expected to be 6912 long (2048 * 3 + 768)\n  attribute = buffer.subarray(2048 * 3)[y * 32 + x]\n) {\n  const start = ((y / 8) | 0) * 2048;\n  const pixels = buffer.subarray(start, start + 2048);\n\n  // reminder: paper is binary 0, ink is 1\n  const { ink, paper } = readAttributes(attribute);\n  const pixel = new Uint8ClampedArray(4 * 8 * 8);\n  y = y % 8;\n\n  for (let i = 0; i < 8; i++) {\n    const ptr = x + 256 * i + y * 32;\n    const byte = pixels[ptr];\n\n    // imageData rgba 8x1\n    for (let j = 0; j < 8; j++) {\n      // determines bit for i, based on MSb as left most pixel\n      const colour = (byte & (1 << (7 - j))) === 0 ? paper : ink;\n\n      const offset = j * 4 + 4 * 8 * i;\n      pixel[offset + 0] = colour[0];\n      pixel[offset + 1] = colour[1];\n      pixel[offset + 2] = colour[2];\n      pixel[offset + 3] = 255;\n    }\n  }\n\n  return pixel;\n}\n\nexport async function load(url) {\n  return new Uint8Array(await (await fetch(url)).arrayBuffer());\n}\n\nasync function sleep(ms) {\n  // return;\n  if (!ms) return;\n  return new Promise(resolve => setTimeout(() => resolve(), ms));\n}\n\nasync function put(ctx, imageData, x, y) {\n  ctx.putImageData(imageData, x, y);\n  await sleep(0);\n}\n\nasync function draw(ctx, third, data) {\n  const imageData = new Uint8ClampedArray(4 * 8);\n  let ctr = 0;\n  for (let offset = 0; offset < 8; offset++) {\n    for (let line = 0; line < 8; line++) {\n      for (let i = 0; i < 32; i++) {\n        let j = 0;\n        const ptr = ctr++;\n        const byte = data[ptr];\n\n        // imageData rgba 8x1\n        for (; j < 8; j++) {\n          // determines bit for i, based on MSb\n          const bit = (byte & (1 << (7 - j))) === 0 ? 0 : 255;\n\n          const offset = j * 4;\n          imageData[offset + 0] = bit;\n          imageData[offset + 1] = bit;\n          imageData[offset + 2] = bit;\n          imageData[offset + 3] = 255; // - bit; // alpha\n        }\n        const x = i * 8;\n        const y = (ctx.canvas.height / 3) * third + line * 8 + offset;\n        await put(ctx, new ImageData(imageData, 8, 1), x, y);\n      }\n    }\n  }\n}\n\n// stream individual whole bytes into the canvas\nexport async function stream(ctx, byte, index) {\n  const third = index >> 11; // 0..2047, 2048..4095, 4096..6143\n\n  if (third === 3) {\n    // colour\n    const attribs = readAttributes(byte);\n    const x = (index % 32) * 8;\n    const y = ((index >> 5) % 64) * 8;\n\n    const block = ctx.getImageData(x, y, 8, 8);\n    for (let i = 0; i < 8 * 8; i++) {\n      const type = block.data[i * 4] === 255 ? 'ink' : 'paper';\n      block.data.set(attribs[type], i * 4);\n    }\n\n    if (attribs.blink && attribs.ink !== attribs.paper) {\n      toBlink.push({\n        attribute: byte,\n        x: x / 8,\n        y: y / 8,\n      });\n    }\n\n    await put(ctx, block, x, y);\n\n    return;\n  }\n\n  const imageData = new Uint8ClampedArray(4 * 8); // 1x8 pixel array\n\n  for (let j = 7; j >= 0; j--) {\n    // determines bit for i, based on MSb\n    const bit = (byte & (1 << j)) === 0 ? 0 : 255;\n    imageData.set([bit, bit, bit, 255], (7 - j) * 4); // place the bits forward\n  }\n\n  // build the line based on the 8bit byte\n  // for (let j = 0; j < 8; j++) {\n  //   // determines bit for i, based on MSb\n  //   const bit = (byte & (1 << (7 - j))) === 0 ? 0 : 255;\n  //   imageData.set([bit, bit, bit, 255], j * 4);\n  // }\n\n  const x = index % 32;\n  const y = (((index >> 5) * 8) % 64) + third * 56; // this is the y coord\n  const offset = index >> 8;\n\n  // await\n  put(ctx, new ImageData(imageData, 8, 1), x * 8, y + offset);\n}\n\nexport function pixelsForSCR(buffer, ctx) {\n  const w = 256;\n  const h = 192;\n  const pixels = new Uint8ClampedArray(w * h * 4); // 196,608\n  for (let y = 0; y < h / 8; y++) {\n    for (let x = 0; x < w / 8; x++) {\n      const pixel = block(x, y, buffer); // returns 8x8\n      ctx.putImageData(new ImageData(pixel, 8, 8), x * 8, y * 8);\n    }\n  }\n\n  return pixels;\n}\n\nexport function loadBlinkAttributes(buffer, ctx) {\n  toBlink = [];\n\n  // 768\n  for (let i = 6144; i <= 6912; i++) {\n    const attribute = buffer[i];\n    const { ink, paper, blink } = readAttributes(attribute);\n    if (blink && ink.join('') !== paper.join('')) {\n      const x = i % 32;\n      const y = (i >> 5) % 64;\n\n      toBlink.push({\n        attribute,\n        i,\n        x,\n        y,\n      });\n    }\n  }\n\n  let timer = null;\n\n  const blink = {\n    start: () => {\n      timer = setInterval(() => doBlink(ctx, buffer), 333);\n    },\n    stop: () => {\n      return clearInterval(timer);\n    },\n  };\n\n  return blink;\n}\n\nasync function colour(ctx, buffer) {\n  const attribs = buffer.subarray(2048 * 3);\n\n  for (let i = 0; i < attribs.length; i++) {\n    const attribute = attribs[i];\n    const { ink, paper, blink } = readAttributes(attribute);\n\n    const x = i % (ctx.canvas.width / 8);\n    const y = (i / (ctx.canvas.width / 8)) | 0;\n\n    const pixel = new ImageData(block(x, y, buffer), 8, 8);\n\n    if (blink && ink.join('') !== paper.join('')) {\n      toBlink.push({\n        attribute,\n        x,\n        y,\n      });\n    }\n\n    await put(ctx, pixel, x * 8, y * 8); // replace the whole shebang\n  }\n}\n\nfunction doBlink(ctx, buffer) {\n  blinkOn = !blinkOn;\n\n  toBlink.forEach(item => {\n    const { x, y } = item;\n    let attribute = item.attribute;\n    if (blinkOn) {\n      // swap the paper and ink\n      attribute =\n        (attribute & 192) + // bright + blink\n        ((attribute & 7) << 3) + // ink moved to paper\n        ((attribute & 56) >> 3); // paper moved to ink\n    }\n    const pixel = new ImageData(block(x, y, buffer, attribute), 8, 8);\n    put(ctx, pixel, x * 8, y * 8);\n  });\n}\n\nexport default async function main(url) {\n  const buffer = await load(url || './screens/remy.scr');\n\n  const canvas = document.createElement('canvas');\n  const log = document.createElement('pre');\n\n  document.body.appendChild(canvas);\n  const zoom = new Zoom(buffer);\n  document.body.appendChild(log);\n  const ctx = canvas.getContext('2d');\n\n  window.ctx = ctx;\n\n  const scale = 2;\n  const w = (canvas.width = 256);\n  const h = (canvas.height = 192);\n  canvas.style.imageRendering = 'pixelated';\n  canvas.style.width = `${w * scale}px`;\n  canvas.style.height = `${h * scale}px`;\n  ctx.fillStyle = '#ccc';\n  ctx.fillRect(0, 0, w, h);\n\n  await draw(ctx, 0, buffer.subarray(0, 2048));\n  await draw(ctx, 1, buffer.subarray(2048, 2048 * 2));\n  await draw(ctx, 2, buffer.subarray(2048 * 2, 2048 * 3));\n\n  const attribs = buffer.subarray(2048 * 3);\n\n  await colour(ctx, buffer);\n  zoom.seeXY(0, 0);\n\n  // setInterval(() => zoom.seeXY(), 1000);\n\n  canvas.onmousemove = e => {\n    const { ptr, x, y, byte, bright, blink, ink, paper } = readFromPoint({\n      attribs,\n      scale,\n      x: e.pageX,\n      y: e.pageY,\n    });\n\n    zoom.seeXY(x / 8, y / 8);\n\n    log.innerHTML = `ptr: ${ptr}\nx: ${x} (${x / 8})\ny: ${y} (${y / 8})\nbyte: ${byte}\nink: <span style=\"color: white; text-shadow: 1px 1px 0 #000; background: rgb(${ink.join(\n      ','\n    )})\">${(byte & 7).toString(2).padStart(3, '0')}</span>\npaper: <span style=\"color: white; text-shadow: 1px 1px 0 #000; background: rgb(${paper.join(\n      ','\n    )})\">${((byte & 56) >> 3).toString(2).padStart(3, '0')}</span>\nbright: ${bright}\nblink: ${blink}\n`;\n  };\n\n  canvas.onclick = e => {\n    const { x, y, ink, paper } = readFromPoint({\n      attribs,\n      scale,\n      x: e.pageX,\n      y: e.pageY,\n    });\n\n    toBlink.push({\n      x,\n      y,\n      ink,\n      paper,\n    });\n  };\n\n  setInterval(() => doBlink(ctx, buffer), 333);\n}\n\nexport function blink(ctx, buffer) {\n  return setInterval(() => doBlink(ctx, buffer), 333);\n}\n\nexport function readAttributes(byte) {\n  const bright = !!(byte & 64);\n  const source = bright ? brightColours : normalColours;\n\n  const values = {\n    ink: byte & 7,\n    paper: (byte & 56) >> 3,\n  };\n\n  const ink = source[values.ink]; // 0b00000111\n  const paper = source[values.paper]; // 0b00111000\n  const blink = !!(byte & 128);\n\n  return {\n    values,\n    bright,\n    ink,\n    paper,\n    blink,\n  };\n}\n\nfunction readFromPoint({ x, y, scale = 1, attribs = [] }) {\n  x = (((x / scale) | 0) / 8) | 0;\n  y = (((y / scale) | 0) / 8) | 0;\n  const ptr = y * 32 + x;\n  const byte = attribs[ptr];\n\n  const { ink, paper, bright, blink } = readAttributes(byte);\n\n  return {\n    ptr,\n    x: x * 8,\n    y: y * 8,\n    byte,\n    ink,\n    paper,\n    blink,\n    bright,\n  };\n}\n\nfunction getIndexForXY(width, x, y) {\n  return width * y + x;\n}\n\n/**\n * Converts canvas image data to SCR binary format\n * @param {Number} third 0-2: the thirds of the screen data\n * @param {Uint8Array} arrayBuffer expected to be 3 * 2048 + 768 (empty)\n * @param {Uint8ClampedArray} canvasImageData canvas pixel data (expects to be filled)\n */\nexport function pixelsToBytes(third, arrayBuffer, canvasImageData) {\n  const data = arrayBuffer.subarray(third * 2048, (third + 1) * 2048);\n  const pixels = canvasImageData.subarray(\n    third * (canvasImageData.length / 3),\n    (third + 1) * (canvasImageData.length / 3)\n  );\n\n  let ptr = 0;\n\n  for (let offset = 0; offset < 8; offset++) {\n    for (let y = 0; y < 8; y++) {\n      const row = y * 8 + offset;\n\n      for (let x = 0; x < 32; x++) {\n        let byte = 0;\n\n        for (let j = 0; j < 8; j++) {\n          const index = getIndexForXY(256, x * 8 + j, row) * 4;\n          byte += (pixels[index] === 0 ? 1 : 0) << (7 - j);\n        }\n\n        data[ptr] = byte;\n        ptr++;\n      }\n    }\n  }\n}\n\n/**\n * Converts canvas image data to SCR binary format\n * @param {Number} third 0-2: the thirds of the screen data\n * @param {Uint8Array} allPixels expected to be 3 * 2048 + 768\n * @param {Uint8ClampedArray} allData canvas pixel data\n */\nexport function putPixels(third, allPixels, allData) {\n  const pixels = allPixels.subarray(third * 2048, (third + 1) * 2048);\n  const data = allData.subarray(\n    third * (allData.length / 3),\n    (third + 1) * (allData.length / 3)\n  );\n\n  let ptr = 0;\n\n  for (let offset = 0; offset < 8; offset++) {\n    for (let y = 0; y < 8; y++) {\n      const row = y * 8 + offset;\n\n      for (let x = 0; x < 32; x++) {\n        let bit = 0;\n\n        for (let j = 0; j < 8; j++) {\n          const index = getIndexForXY(256, x * 8 + j, row) * 4;\n          bit += (data[index] === 0 ? 1 : 0) << (7 - j);\n        }\n\n        pixels[ptr] = bit;\n        ptr++;\n      }\n    }\n  }\n}\n\nexport function getInkFromPixel(rgb, shiftBright = false) {\n  rgb = `${rgb[0]},${rgb[1]},${rgb[2]}`;\n  let ink = brightColoursLookup.get(rgb);\n\n  if (!ink) {\n    ink = normalColoursLookup.get(rgb);\n    if (shiftBright) ink <<= 3;\n  }\n\n  return ink;\n}\n\nexport function attributesForBlock(block, print) {\n  let attribute = 0;\n  const inks = new Uint8Array((0b111 << 3) + 1).fill(0); // container array\n\n  for (let i = 0; i < block.length / 4; i++) {\n    const ink = getInkFromPixel([...block.slice(i * 4, i * 4 + 3)], true);\n    inks[ink]++;\n  }\n\n  if (print) {\n    Object.keys(inks).forEach(\n      (ink, count) =>\n        inks[count] && console.log('ink %s (%s)', ink, inks[count])\n    );\n  }\n\n  let [{ ink: paper }, { ink } = { ink: 0 }] = Array.from(inks)\n    .map((count, ink) => ({ ink, count }))\n    .filter(({ count }) => count)\n    .sort((a, b) => a.count - b.count)\n    .slice(-2);\n\n  if (paper === null) {\n    paper = ink;\n  }\n\n  // this helps massage the colours into a better position\n  if (ink === 7 && paper !== 7) {\n    [ink, paper] = [paper, ink];\n  }\n\n  // work out the brightness based on the majority ink\n  if (ink >> 3 === 0 || paper >> 3 === 0) {\n    // if ink or paper is black, then take the brightness from the other colour\n    if (ink === 0 || paper === 0) {\n      const colour = ink === 0 ? paper : ink;\n      if (colour >>> 3 === 0) {\n        // colour is bright\n        attribute += 64;\n      } else {\n        // not bright\n      }\n    } else {\n      // we're dealing with bright\n      if (print) console.log('dealing with bright');\n      if (ink >> 3 === 0 && inks[ink] > inks[paper]) {\n        if (print) console.log('ink > paper', ink, paper);\n        attribute += 64;\n      } else if (paper >> 3 === 0 && inks[paper] > inks[ink]) {\n        if (print) console.log('paper > ink');\n        attribute += 64;\n      }\n    }\n  }\n\n  if (ink >> 3 !== 0) {\n    ink = ink >> 3;\n  }\n\n  if (paper >> 3 !== 0) {\n    paper = paper >> 3;\n  }\n\n  attribute += paper << 3;\n  attribute += ink;\n\n  return attribute;\n}\n\nexport function putAttributes(pixels, inkData) {\n  let ptr = 0;\n  const zoom = new Zoom(inkData);\n  for (let y = 0; y < 192 / 8; y++) {\n    for (let x = 0; x < 256 / 8; x++) {\n      const block = zoom.pixel(x, y);\n      const print = false; // x === 28 && y === 19;\n\n      pixels[2048 * 3 + ptr] = attributesForBlock(block, print);\n\n      ptr++;\n    }\n  }\n}\n\nexport function download(data, filename = 'image.png', type = 'image/png') {\n  const click = function(node) {\n    var event = new MouseEvent('click');\n    node.dispatchEvent(event);\n  };\n\n  const a = document.createElement('a');\n  a.download = filename;\n  const blob = new Blob([data], { type });\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  click(a);\n  URL.revokeObjectURL(url);\n}\n","class ArrayNode extends Array {\n  constructor() {\n    super();\n\n    // allow setting any node property via proxy\n    return new Proxy(this, {\n      set(obj, prop, value) {\n        if (prop in HTMLElement.prototype) {\n          return obj.filter(el => (el[prop] = value));\n        }\n\n        const res = (this[prop] = value);\n        return res;\n      },\n    });\n  }\n\n  on(event, handler, options) {\n    return this.filter(el => el.addEventListener(event, handler, options));\n  }\n\n  emit(type, data) {\n    const event = new Event(type, { data });\n    return this.filter(el => el.dispatchEvent(event));\n  }\n}\n\nexport const $ = (s, ctx = document) => ArrayNode.from(ctx.querySelectorAll(s));\n","export default (function() {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n  return function(data, fileName) {\n    let blob = null;\n\n    if (data instanceof Blob) {\n      blob = data;\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n      blob = new Blob(data, { type: 'octet/stream' });\n    }\n    const url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n})();\n","export default {\n  oneDimensional: [\n    {\n      x: 1,\n      y: 0,\n      factor: 1,\n    },\n  ],\n  floydSteinberg: [\n    {\n      x: 1,\n      y: 0,\n      factor: 7 / 16,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 3 / 16,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 5 / 16,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 1 / 16,\n    },\n  ],\n  jarvisJudiceNinke: [\n    {\n      x: 1,\n      y: 0,\n      factor: 7 / 48,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 5 / 48,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 3 / 48,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 5 / 48,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 7 / 48,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 5 / 48,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 3 / 48,\n    },\n    {\n      x: -2,\n      y: 2,\n      factor: 1 / 48,\n    },\n    {\n      x: -1,\n      y: 2,\n      factor: 3 / 48,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 5 / 48,\n    },\n    {\n      x: 1,\n      y: 2,\n      factor: 3 / 48,\n    },\n    {\n      x: 2,\n      y: 2,\n      factor: 1 / 48,\n    },\n  ],\n  stucki: [\n    {\n      x: 1,\n      y: 0,\n      factor: 8 / 42,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 4 / 42,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 2 / 42,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 4 / 42,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 8 / 42,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 4 / 42,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 2 / 42,\n    },\n    {\n      x: -2,\n      y: 2,\n      factor: 1 / 42,\n    },\n    {\n      x: -1,\n      y: 2,\n      factor: 2 / 42,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 4 / 42,\n    },\n    {\n      x: 1,\n      y: 2,\n      factor: 2 / 42,\n    },\n    {\n      x: 2,\n      y: 2,\n      factor: 1 / 42,\n    },\n  ],\n  atkinson: [\n    {\n      x: 1,\n      y: 0,\n      factor: 1 / 8,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 1 / 8,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 1 / 8,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 1 / 8,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 1 / 8,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 1 / 8,\n    },\n  ],\n  burkes: [\n    {\n      x: 1,\n      y: 0,\n      factor: 8 / 32,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 4 / 32,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 2 / 32,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 8 / 32,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 2 / 32,\n    },\n  ],\n  sierra3: [\n    {\n      x: 1,\n      y: 0,\n      factor: 5 / 32,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 3 / 32,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 2 / 32,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 5 / 32,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 2 / 32,\n    },\n    {\n      x: -1,\n      y: 2,\n      factor: 2 / 32,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 3 / 32,\n    },\n    {\n      x: 1,\n      y: 2,\n      factor: 2 / 32,\n    },\n  ],\n  sierra2: [\n    {\n      x: 1,\n      y: 0,\n      factor: 4 / 16,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 3 / 16,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 1 / 16,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 2 / 16,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 3 / 16,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 2 / 16,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 1 / 16,\n    },\n  ],\n  sierraLite: [\n    {\n      x: 1,\n      y: 0,\n      factor: 2 / 4,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 1 / 4,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 1 / 4,\n    },\n  ],\n  none: [],\n};\n","import matrices from './matrices.js';\n\nconst colorMap = [\n  [0, 0, 0xff],\n  [0xff, 0, 0],\n  [0xff, 0, 0xff],\n  [0, 0xff, 0],\n  [0, 0xff, 0xff],\n  [0xff, 0xff, 0],\n  [0xff, 0xff, 0xff],\n  [0, 0, 0],\n  [0, 0, 0xd7],\n  [0xd7, 0, 0],\n  [0xd7, 0, 0xd7],\n  [0, 0xd7, 0],\n  [0, 0xd7, 0xd7],\n  [0xd7, 0xd7, 0],\n  [0xd7, 0xd7, 0xd7],\n];\n\nfunction getDistance(current, match) {\n  const redDifference = current[0] - match[0];\n  const greenDifference = current[1] - match[1];\n  const blueDifference = current[2] - match[2];\n\n  return (\n    redDifference * redDifference +\n    greenDifference * greenDifference +\n    blueDifference * blueDifference\n  );\n}\n\n// feels expensive, but https://www.cyotek.com/blog/finding-nearest-colors-using-euclidean-distance\nfunction defaultFindColor(rgb) {\n  let shortestDistance;\n  let index;\n\n  index = -1;\n  shortestDistance = Number.MAX_SAFE_INTEGER;\n\n  for (let i = 0; i < colorMap.length; i++) {\n    const match = colorMap[i];\n    const distance = getDistance(rgb, match);\n\n    if (distance < shortestDistance) {\n      index = i;\n      shortestDistance = distance;\n    }\n  }\n\n  return [...colorMap[index], 255];\n}\n\nconst defaults = {\n  step: 4,\n  channels: 4,\n  diffusionFactor: 0.9,\n  clip: () => {},\n  findColor: defaultFindColor,\n  matrix: matrices.floydSteinberg,\n};\n\nexport default class Dither {\n  constructor(options) {\n    this.options = { ...defaults, ...options };\n  }\n\n  static get defaultFindColor() {\n    return defaultFindColor;\n  }\n\n  static get matrices() {\n    return matrices;\n  }\n\n  dither(buffer, width, settings = {}) {\n    let i, k, ref, x, y;\n    const options = { ...this.options, ...settings };\n\n    const d = [];\n    for (\n      i = k = 0, ref = buffer.length;\n      0 <= ref ? k <= ref : k >= ref;\n      i = 0 <= ref ? ++k : --k\n    ) {\n      d.push(buffer[i]);\n    }\n    const height = buffer.length / (options.channels * width);\n    const result = [];\n    y = 0;\n    while (y < height) {\n      x = 0;\n      while (x < width) {\n        this.handlePixel(x, y, d, result, width, options);\n        x += options.step;\n      }\n      y += options.step;\n    }\n    return result;\n  }\n\n  calculateIndex(x, y, width, channels) {\n    return channels * x + channels * y * width;\n  }\n\n  handlePixel(x, y, d, result, width, options) {\n    var currentColor, i, j, k, l, newColor, q, ref, ref1;\n    i = this.calculateIndex(x, y, width, options.channels);\n    currentColor = [];\n    for (\n      j = k = 0, ref = options.channels;\n      0 <= ref ? k < ref : k > ref;\n      j = 0 <= ref ? ++k : --k\n    ) {\n      currentColor.push(d[i + j]);\n    }\n    newColor = options.findColor(currentColor);\n    q = [];\n    for (\n      j = l = 0, ref1 = options.channels;\n      0 <= ref1 ? l < ref1 : l > ref1;\n      j = 0 <= ref1 ? ++l : --l\n    ) {\n      q[j] = (d[i + j] - newColor[j]) * options.diffusionFactor;\n    }\n    this.diffuseError(d, q, x, y, width, options);\n    return this.applyNewColor(result, width, newColor, i, options);\n  }\n\n  diffuseError(d, q, x, y, width, options) {\n    var channelOffset, entry, index, k, l, len, ref, ref1, results;\n    ref = options.matrix;\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      entry = ref[k];\n      index = this.calculateIndex(\n        x + options.step * entry.x,\n        y + options.step * entry.y,\n        width,\n        options.channels\n      );\n      for (\n        channelOffset = l = 0, ref1 = options.channels;\n        0 <= ref1 ? l < ref1 : l > ref1;\n        channelOffset = 0 <= ref1 ? ++l : --l\n      ) {\n        d[index + channelOffset] += entry.factor * q[channelOffset];\n      }\n      results.push(options.clip(d, index));\n    }\n    return results;\n  }\n\n  applyNewColor(buffer, width, newColor, i, options) {\n    var di, dx, dy, j, k, ref, results;\n    results = [];\n    for (\n      dx = k = 0, ref = options.step;\n      0 <= ref ? k < ref : k > ref;\n      dx = 0 <= ref ? ++k : --k\n    ) {\n      results.push(\n        (function() {\n          var l, ref1, results1;\n          results1 = [];\n          for (\n            dy = l = 0, ref1 = options.step;\n            0 <= ref1 ? l < ref1 : l > ref1;\n            dy = 0 <= ref1 ? ++l : --l\n          ) {\n            di = i + options.channels * dx + options.channels * width * dy;\n            results1.push(\n              (function() {\n                var m, ref2, results2;\n                results2 = [];\n                for (\n                  j = m = 0, ref2 = options.channels;\n                  0 <= ref2 ? m < ref2 : m > ref2;\n                  j = 0 <= ref2 ? ++m : --m\n                ) {\n                  results2.push((buffer[di + j] = newColor[j]));\n                }\n                return results2;\n              })()\n            );\n          }\n          return results1;\n        })()\n      );\n    }\n    return results;\n  }\n}\n","import Zoom from './Zoom.js';\n\nexport default function main(image) {\n  return imageToBlob(image).then(fileToBinary);\n}\n\nexport function contrast(imageData, contrast = 50) {\n  const data = imageData.data;\n  contrast = contrast / 100 + 1; //convert to decimal & shift range: [0..2]\n  const intercept = 128 * (1 - contrast);\n  for (let i = 0; i < data.length; i += 4) {\n    data[i] = data[i] * contrast + intercept;\n    data[i + 1] = data[i + 1] * contrast + intercept;\n    data[i + 2] = data[i + 2] * contrast + intercept;\n  }\n  return imageData;\n}\n\nexport function threshold(data, _, threshold = _) {\n  for (let i = 0; i < data.length; i += 4) {\n    const r = data[i];\n    const g = data[i + 1];\n    const b = data[i + 2];\n\n    const test = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n\n    const v = test >= threshold ? 255 : 0;\n    data[i] = data[i + 1] = data[i + 2] = v;\n  }\n\n  invertPotentialInk(data);\n\n  return data;\n}\n\nexport function invertPotentialInk(imageData) {\n  const zoom = new Zoom(imageData);\n  for (let y = 0; y < 192 / 8; y++) {\n    for (let x = 0; x < 256 / 8; x++) {\n      const block = zoom.pixel(x, y);\n\n      let inkCount = 0;\n      for (let i = 0; i < 8 * 8 * 4; i += 4) {\n        if (block[i] === 0) {\n          // black = ink\n          inkCount = inkCount + 1;\n        }\n      }\n\n      if (inkCount < 32) {\n        // flip\n        for (let i = 0; i < 8 * 8 * 4; i += 4) {\n          const c = block[i] === 0 ? 255 : 0;\n          block[i] = block[i + 1] = block[i + 2] = c;\n        }\n      }\n    }\n  }\n  return imageData;\n}\n\nfunction crop(\n  source = { width: 0, height: 0 },\n  destination = { width: 0, height: 0 }\n) {\n  // result:\n  let x = 0;\n  let y = 0;\n\n  // which is longest side\n  let longest = 'width';\n  let shortest = 'height';\n  if (destination.width < destination.height) {\n    [longest, shortest] = [shortest, longest];\n  }\n\n  // get divisor\n  const d = source[longest] / destination[longest]; // FIXME does this work for scaling up?\n\n  const width = (destination.width * d) | 0;\n  const height = (destination.height * d) | 0;\n\n  if (longest === 'height') {\n    x = (source[shortest] - width) / 2;\n  } else {\n    y = (source[shortest] - height) / 2;\n  }\n\n  return { x, y, width, height };\n}\n\nexport function imageToCanvas(\n  img,\n  scale = { width: img.width, height: img.height }\n) {\n  const canvas = document.createElement('canvas');\n  canvas.style.imageRendering = 'pixelated';\n  const ctx = canvas.getContext('2d');\n  canvas.width = scale.width;\n  canvas.height = scale.height;\n\n  const { x, y, height, width } = crop(img, canvas);\n\n  ctx.drawImage(img, x, y, width, height, 0, 0, canvas.width, canvas.height);\n\n  return ctx;\n}\n\nexport function imageToPixels(img, scale) {\n  const ctx = imageToCanvas(img, scale);\n  return ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nexport async function imageToBlob(img, ctx = imageToCanvas(img)) {\n  return new Promise(resolve => {\n    const canvas = ctx.canvas;\n    canvas.toBlob(file => resolve(file));\n  });\n}\n\nexport function fileToBinary(file) {\n  return new Promise(resolve => {\n    const reader = new window.FileReader();\n    reader.onloadend = () => resolve(new Uint8Array(reader.result));\n    reader.readAsArrayBuffer(file);\n  });\n}\n","import Dither from './Dither.js';\nimport Zoom from './Zoom.js';\nimport { imageToCanvas, contrast } from './image.js';\nimport {\n  attributesForBlock,\n  readAttributes,\n  pixelsForSCR,\n  putAttributes,\n  getInkFromPixel,\n  putPixels,\n} from './scr.js';\n\nexport async function dither({ url, all = false, debug = false }) {\n  const img = new Image();\n  img.crossOrigin = 'anonymous';\n  img.src = url;\n  await new Promise((resolve, reject) => {\n    img.onload = resolve;\n    img.onerror = reject;\n  });\n  if (debug) document.body.appendChild(img);\n  const ctx = imageToCanvas(img, { width: 256, height: 192 });\n  const canvas = ctx.canvas;\n  const w = canvas.width;\n  const h = canvas.height;\n\n  if (debug) document.body.appendChild(canvas);\n\n  // the buffer is used to draw into as a temp space\n  const bufferCtx = document.createElement('canvas').getContext('2d');\n  bufferCtx.canvas.width = w;\n  bufferCtx.canvas.height = h;\n\n  if (debug) document.body.appendChild(bufferCtx.canvas);\n\n  const dither = new Dither({\n    matrix: Dither.matrices.none,\n    step: 1,\n  });\n\n  const { imageData: inkData } = await render(ctx, bufferCtx, dither, {\n    diffusionFactor: 0.1,\n    matrix: Dither.matrices.atkinson,\n  });\n\n  const { imageData: pixelData } = await renderFromInk(bufferCtx, bufferCtx);\n\n  // load all the final output into SCR format - starting with binary for pixels\n  const pixels = new Uint8Array((256 * 192) / 8 + 768);\n  putPixels(0, pixels, pixelData.data);\n  putPixels(1, pixels, pixelData.data);\n  putPixels(2, pixels, pixelData.data);\n\n  // …then try to work out the attributes (bright, ink and paper)\n  putAttributes(pixels, inkData);\n\n  if (all) {\n    return {\n      pixels,\n      inkData,\n      pixelData,\n      originalData: ctx.getImageData(0, 0, w, h),\n    };\n  }\n\n  return pixels; // this is the raw binary .src format\n}\n\nasync function pixelsToImage(pixels) {\n  const ctx = document.createElement('canvas').getContext('2d');\n  const canvas = ctx.canvas;\n  canvas.width = 256;\n  canvas.height = 192;\n\n  ctx.putImageData(pixels, 0, 0);\n\n  const url = canvas.toDataURL('image/png');\n  const img = new Image();\n  img.src = url;\n  return new Promise(resolve => (img.onload = () => resolve(img)));\n}\n\nexport default async function main(\n  url = `https://twivatar.glitch.me/${prompt('Give me a twitter handle:')}`\n) {\n  // export default async function main(url = './image-manip/tap-js.png') {\n  // const username = prompt('Give me a twitter handle:');\n\n  // ctx = drawing context with our source image\n  const { pixels, inkData, pixelData, originalData } = await dither(\n    // `https://twivatar.glitch.me/${username}`,\n    url,\n    true\n  );\n\n  const scrBlob = new Blob([pixels], {\n    'content-type': 'application/binary',\n  });\n  const scrURL = URL.createObjectURL(scrBlob);\n\n  const container = document.createElement('div');\n  document.body.appendChild(container);\n\n  const scrCtx = document.createElement('canvas').getContext('2d');\n  scrCtx.canvas.width = 256;\n  scrCtx.canvas.height = 192;\n  container.appendChild(scrCtx.canvas);\n  // validate our pixels by translating the SCR binary back into a canvas\n  pixelsForSCR(pixels, scrCtx);\n\n  const ul = document.createElement('ul');\n  ul.innerHTML = `<li><a href=\"${scrURL}\" download=\"image.scr\">Download .SCR file</a></li>`;\n\n  const li = document.createElement('li');\n  ul.appendChild(li);\n  const attribsLI = document.createElement('li');\n  ul.appendChild(attribsLI);\n  document.body.appendChild(ul);\n\n  // put all the image data into imgs\n  const img2 = await pixelsToImage(originalData);\n  container.appendChild(img2);\n  const inkImg = await pixelsToImage(inkData);\n  container.appendChild(inkImg);\n  const pixelImg = await pixelsToImage(pixelData);\n  container.appendChild(pixelImg);\n\n  const zoomOriginal = new Zoom(img2);\n  const zoomPixel = new Zoom(pixelImg);\n  const zoomInk = new Zoom(inkImg);\n  const zoomResult = new Zoom(scrCtx);\n\n  const rootCanvas = document.querySelector('canvas');\n  rootCanvas.classList.add('crosshair');\n\n  let hover = true;\n\n  rootCanvas.onclick = () => {\n    hover = !hover;\n  };\n\n  rootCanvas.onmousemove = e => {\n    if (!hover) return;\n    const x = (e.pageX / 8) | 0;\n    const y = (e.pageY / 8) | 0;\n    zoomResult.seeXY(x, y);\n    zoomOriginal.seeXY(x, y);\n    zoomInk.seeXY(x, y);\n    zoomPixel.seeXY(x, y);\n    li.innerHTML = `{ x: ${x}, y: ${y} }`;\n    const block = zoomInk.pixel(x, y);\n    const byte = attributesForBlock(block);\n    window.attributesForBlock = attributesForBlock.bind(null, block);\n    const debug = y === 18 && x === 20;\n    const attribs = readAttributes(byte, debug);\n    const ink = attribs.ink.join(',');\n    const paper = attribs.paper.join(',');\n    attribsLI.innerHTML = `ink: ${ink} (${attribs.values.ink}) <span class=\"block\" style=\"background: rgb(${ink})\"></span>, paper: ${paper} (${attribs.values.paper}) <span class=\"block\" style=\"background: rgb(${paper})\"></span>`;\n  };\n}\n\nasync function render(ctx, bufferCtx, dither, options = {}) {\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  const buffer = contrast(ctx.getImageData(0, 0, w, h), 10);\n  const res = dither.dither(buffer.data, w, options);\n  const imageData = new ImageData(new Uint8ClampedArray(res), w, h);\n  bufferCtx.putImageData(imageData, 0, 0);\n\n  return { imageData };\n}\n\nfunction putInkForBlock(\n  zoom,\n  x,\n  y,\n  newBlock = new Uint8ClampedArray(8 * 8 * 4)\n) {\n  const block = zoom.pixel(x, y);\n  // 1: find how many colours we're dealing with (256 elements)\n  // 2: if 2 - switch them to majority paper (0b0) and least ink (0b1)\n  // 3: if more than two, order then select\n  const print = x === 3 && y === 1;\n  const byte = attributesForBlock(block, print);\n  const attributes = readAttributes(byte);\n\n  if (print) console.log(attributes);\n\n  for (let i = 0; i < 64; i++) {\n    const ink = getInkFromPixel([...block.slice(i * 4, i * 4 + 3)]);\n\n    if (ink === attributes.values.ink) {\n      newBlock.set([0, 0, 0, 255], i * 4);\n    } else if (ink === attributes.values.paper) {\n      newBlock.set([255, 255, 255, 255], i * 4);\n    } else {\n      newBlock.set([0, 0, 0, 255], i * 4);\n    }\n  }\n\n  return newBlock;\n}\n\nasync function renderFromInk(ctx, bufferCtx) {\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  const buffer = ctx.getImageData(0, 0, w, h);\n\n  const zoom = new Zoom(buffer.data);\n\n  const blockBuffer = new Uint8ClampedArray(8 * 8 * 4);\n\n  for (let y = 0; y < 192 / 8; y++) {\n    for (let x = 0; x < 256 / 8; x++) {\n      putInkForBlock(zoom, x, y, blockBuffer);\n\n      bufferCtx.putImageData(new ImageData(blockBuffer, 8, 8), x * 8, y * 8);\n    }\n  }\n\n  const imageData = bufferCtx.getImageData(0, 0, w, h);\n\n  return { imageData };\n}\n\nif (window.location.search.includes('retrofy')) main();\n","import drop from '../lib/dnd.js';\nimport { pixelsForSCR } from './lib/scr.js';\nimport { $ } from '../lib/$.js';\nimport save from '../lib/save.js';\nimport { dither } from './lib/retrofy.js';\n\nconst result = $('#result')[0];\n\nfunction basename(filename) {\n  return filename\n    .split('.')\n    .slice(0, -1)\n    .join('.');\n}\n\nfunction container(filename, altDownload) {\n  const isSCR = filename.toUpperCase().endsWith('.SCR');\n\n  const canvas = document.createElement('canvas');\n  canvas.width = 256;\n  canvas.height = 192;\n  const ctx = canvas.getContext('2d');\n  const div = document.createElement('div');\n  div.className = 'container';\n  div.appendChild(canvas);\n\n  const button = document.createElement('button');\n  div.appendChild(button);\n  button.onclick = async () => {\n    const file = await new Promise(resolve => canvas.toBlob(resolve));\n\n    save(file, basename(filename) + '.png');\n  };\n  button.innerText = 'Download PNG';\n\n  if (!isSCR) {\n    const button = document.createElement('button');\n    div.appendChild(button);\n    button.onclick = async () => {\n      save(altDownload, basename(filename) + '.scr');\n    };\n    button.innerText = 'Download SCR';\n  }\n\n  result.prepend(div);\n  return ctx;\n}\n\nasync function fileHandler(data, filename, type) {\n  if (filename.toUpperCase().endsWith('.SCR')) {\n    pixelsForSCR(data, container(filename));\n  } else {\n    const blob = new Blob([data], { type });\n    const url = URL.createObjectURL(blob);\n    const res = await dither({ url });\n    console.log(res);\n    pixelsForSCR(res, container(filename, res));\n    URL.revokeObjectURL(url);\n  }\n}\n\ndrop(document.body, fileHandler);\n\n$('input').on('change', event => {\n  const file = event.target.files[0];\n  const reader = new FileReader();\n  reader.onload = event =>\n    fileHandler(new Uint8Array(event.target.result), file.name, file.type);\n  reader.readAsArrayBuffer(file);\n});\n"]}