{"version":3,"sources":["lib/dnd.js","sprites/lib/colour.js","lib/save.js","sprites/lib/zlib.js","sprites/lib/png.js","sprites/lib/bmp.js","sprites/lib/parser.js","lib/$.js","sprites/SpriteSheet.js","lib/track-down.js","sprites/ImageWindow.js","sprites/ColourPicker.js","sprites/Tool.js","sprites/TileMap.js","bas/codes.js","lib/to.js","lib/unpack/lib.js","lib/unpack/pack.js","bas/txt2bas.js","lib/Tabs.js","sprites/index.js"],"names":["drop","root","callback","ondragover","ondragend","addEventListener","e","preventDefault","stopPropagation","console","log","droppedFile","dataTransfer","files","reader","FileReader","onload","event","Uint8Array","target","result","readAsArrayBuffer","rgbFromIndex","index","r","g","b","a","toRGB332","Math","floor","transparent","document","createElement","body","appendChild","style","data","fileName","blob","Blob","Array","isArray","type","url","URL","createObjectURL","href","download","click","revokeObjectURL","DecodeStream","constructor","pos","bufferLength","eof","buffer","prototype","ensureBuffer","requested","current","byteLength","size","buffer2","i","getByte","readBlock","getBytes","length","end","bufEnd","subarray","lookChar","String","fromCharCode","getChar","makeSubStream","start","dict","Stream","skip","n","reset","FlateStream","codeLenCodeMap","Uint32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","error","Error","bytes","bytesPos","cmf","flg","codeSize","codeBuf","call","Object","create","getBits","bits","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","repeat","stream","array","offset","what","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","slice","limit","code1","dist","k","blockLen","check","PNG","data1","palette","imgData","transparency","animation","text","frame","chunkSize","readUInt32","section","width","height","colorType","compressionMethod","filterMethod","interlaceMethod","numFrames","numPlays","Infinity","frames","read","push","xOffset","yOffset","delayNum","readUInt16","delayDen","delay","disposeOp","blendOp","indexed","short","grayscale","rgb","indexOf","key","apply","colors","hasAlphaChannel","includes","pixelBitlength","colorSpace","b1","decodePixels","pixelBytes","pixels","pass","x0","y0","dx","dy","singlePass","w","ceil","h","scanlineLength","row","c","byte","col","left","upper","paeth","upperLeft","p","pa","abs","pb","pc","pixelsPos","bufferPos","j","decodePalette","ret","copyToImageData","imageData","alpha","_decodedPalette","input","v","decode","BmpDecoder","is_with_alpha","DataView","bottom_up","flag","parseHeader","parseRGBA","fileSize","getUint32","reserved","headerSize","getInt32","planes","getUint16","bitPP","compress","rawSize","hr","vr","importantColors","blue","getUint8","green","red","quad","bitn","ArrayBuffer","bit1","xlen","mode","y","line","x","location","bit4","fill","lines","low_nibble","setPixelData","rgbIndex","before","after","bit8","bit15","dif_w","_1_5","parseInt","B","bit16","maskRed","maskGreen","maskBlue","mask0","ns","bit24","bit32","getData","pngSig","bmpSig","file","isPNG","isBMP","detect","png","bmp","max","BMP","transform","alphaFirst","pngNoTransformFile","res","undefined","ri","gi","bi","ai","spriteIndex","dataIndex","ArrayNode","Proxy","set","obj","prop","value","filter","el","on","handler","options","emit","Event","dispatchEvent","$","s","ctx","querySelectorAll","warn","from","pixelLength","colourTable","_","getCoords","rect","getBoundingClientRect","clientX","clientY","top","xyToIndex","emptyCanvas","blankData","Uint8ClampedArray","canvas","blank","ImageData","putImageData","Sprite","getContext","render","pget","pset","clear","canvasToPixels","getImageData","paint","clearRect","imageSmoothingEnabled","drawImage","SpriteSheet","scale","spriteData","sprite","sprites","previewCtx","snapshot","_current","window","hook","hooks","trigger","forEach","copy","clipboard","paste","rebuild","history","splice","_undoPtr","undo","getPreviewElements","map","coords","args","get","renderPreview","draw","classList","remove","add","noop","trackDown","move","down","ImageWindow","__ctx","parent","parentNode","status","pan","zoom","zoomFactor","preZoomDelta","zoomDelta","dataset","delta","pxScale","dragging","_coords","curX","curY","shiftX","neg","shiftY","oncopy","localCords","innerHTML","ColourPicker","html","join","id","container","colour","_history","unshift","values","querySelector","className","_index","selected","Tool","action","shortcuts","types","_selected","state","documentElement","tool","shift","_last","source","dummySpriteSheet","sizes","Map","bank","TileMap","maxWidth","cancel","_tmp","hover","clearHover","active","checked","_sprites","getXY","toBinary","reverse","toString","padStart","toHex","toUpperCase","floatToZX","sign","out","mantissa","zxToFloat","view","exp","frac","pow","toFixed","pattern","typeMap","fn","Int8Array","C","A","Int16Array","S","Uint16Array","Int32Array","I","l","L","little","N","f","Float32Array","d","Float64Array","TextDecoder","encode","TextEncoder","pack","template","isView","re","RegExp","m","bytePtr","firstChr","defaultLittle","templateCounter","dataLength","exec","isNaN","setUint8","calculateXORChecksum","of","reduce","checksum","item","opTable","entries","acc","str","GOTO","tapHeader","basic","filename","autostart","headerLength","flagByte","p1","p2","asTap","header","tapData","setUint16","plus3DOSHeader","opts","hType","hOffset","sig","issue","version","hFileLength","hLine","curr","Lexer","buf","bufLen","split","inLiteral","lineNumber","tokens","token","name","_processComment","_processBinary","numeric","_skipNonTokens","charAt","_next","op","_isAlpha","_processIdentifier","_isStartOfComment","_isLiteralNumeric","_isDigit","_processNumber","_isLiteralReset","_isStatementSep","_isSymbol","keys","find","_processQuote","_isNumericSymbol","_isBinary","_isNewLine","_isAlphaNum","_processLiteralNumber","endPos","needsClose","tok","substring","parseFloat","trim","_isOpCode","ignorePeek","next","_peekToken","peeked","tmp","end_index","Tab","hide","display","show","setAttribute","Tabs","selector","panels","ids","tabNav","panel","innerText","title","li","tabs","hash","pushState","spritesContainer","debug","picker","upload","pickerColour","buttons","tileDownloads","newSpriteSheet","confirm","tileMap","renderSpritePreviews","renderCurrentSprite","prompt","imageWindow","fileToImageWindow","importMask","borderColor","currentSprite","totalSprites","startsWith","right","buildStyleSheet","css","head","append","focused","fileHandler","into","makePixel","onclick","altKey","ctrlKey","shiftKey","metaKey","onmousemove","onmouseout","node","nodeName","childNodes","ondrop","Promise","all","resolve","onpaste","items","clipboardData","originalEvent","kind","getAsFile"],"mappings":"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SAAoCC,EAAOT,EAAQU,GAEzD,IADHT,IAAAA,EAAMQ,EAAQT,EACX,KAAKd,cAAgBe,IAAQ,KAAKd,KAAK,KAAKW,YAC5C,OAAA,IAAIa,OAAO,KAAKvB,OAAQqB,EAAOT,EAAQU,IAEhDE,KAAM,SAA2BC,GAC1BA,IAAGA,EAAI,GACP5B,KAAAA,KAAO4B,GAEdC,MAAO,WACA7B,KAAAA,IAAM,IAIRD,EA7EoB,GAgFtB,QAAA,aAAA,EAAA,MAAM+B,EAAe,WACtBC,IAAAA,EAAiB,IAAIC,YAAY,CACnC,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,KAGEC,EAAe,IAAID,YAAY,CACjC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,MAGEE,EAAa,IAAIF,YAAY,CAC/B,EACA,EACA,EACA,EACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGEG,EAAkB,CACpB,IAAIH,YAAY,CACdmB,CACrB,IAAIJ,YAAY,CACd,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IAEF,GAGOK,SAAAA,EAAMpF,GACP,MAAA,IAAIqF,MAAMrF,GAGT8C,SAAAA,EAAYwC,GAEfC,IAAAA,EAAW,EAEXC,EAAMF,EAAMC,KACZE,EAAMH,EAAMC,MACJ,GAARC,IAAqB,GAARC,GAAWL,EAAM,kCACd,IAAT,GAANI,IACHJ,EAAM,gDACFI,GAAO,GAAKC,GAAO,IAAM,GAAGL,EAAM,8BAC9B,GAANK,GAAYL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","file":"sprites.58ea5be1.js","sourceRoot":"../public","sourcesContent":["export default function drop(root, callback) {\n  root.ondragover = () => false;\n  root.ondragend = () => false;\n  root.addEventListener(\n    'drop',\n    e => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log('on ', root);\n\n      const droppedFile = e.dataTransfer.files[0];\n      const reader = new FileReader();\n      reader.onload = event => {\n        callback(new Uint8Array(event.target.result));\n      };\n      reader.readAsArrayBuffer(droppedFile);\n    },\n    false\n  );\n}\n","export function rgbFromIndex(index) {\n  if (index === 0xe3) {\n    return { r: 0, g: 0, b: 0, a: 0 };\n  }\n\n  let r = (index >> 5) & 0x7;\n  let g = (index >> 2) & 0x7;\n  let b = (index >> 0) & 0x3;\n\n  //make a pure RGB332 colour\n  return {\n    r: (r * 255.0) / 7.0,\n    g: (g * 255.0) / 7.0,\n    b: (b * 255.0) / 3.0,\n    a: 255,\n  };\n}\n\nexport function toRGB332(r, g, b) {\n  return (\n    (Math.floor(r / 32) << 5) + (Math.floor(g / 32) << 2) + Math.floor(b / 64)\n  );\n}\n\nexport const transparent = 0xe3;\n","export default (function() {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n  return function(data, fileName) {\n    let blob = null;\n\n    if (data instanceof Blob) {\n      blob = data;\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n      blob = new Blob(data, { type: 'octet/stream' });\n    }\n    const url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n})();\n","/*\n * Extracted from pdf.js\n * https://github.com/andreasgal/pdf.js\n *\n * Copyright (c) 2011 Mozilla Foundation\n *\n * Contributors: Andreas Gal <gal@mozilla.com>\n *               Chris G Jones <cjones@mozilla.com>\n *               Shaon Barman <shaon.barman@gmail.com>\n *               Vivien Nicolas <21@vingtetun.org>\n *               Justin D'Arcangelo <justindarc@gmail.com>\n *               Yury Delendik\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nexport const DecodeStream = (function() {\n  function constructor() {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = null;\n  }\n\n  constructor.prototype = {\n    ensureBuffer: function decodestream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      var current = buffer ? buffer.byteLength : 0;\n      if (requested < current) return buffer;\n      var size = 512;\n      while (size < requested) size <<= 1;\n      var buffer2 = new Uint8Array(size);\n      for (var i = 0; i < current; ++i) buffer2[i] = buffer[i];\n      return (this.buffer = buffer2);\n    },\n    getByte: function decodestream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) return null;\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getBytes: function decodestream_getBytes(length) {\n      var pos = this.pos;\n\n      if (length) {\n        this.ensureBuffer(pos + length);\n        var end = pos + length;\n\n        while (!this.eof && this.bufferLength < end) this.readBlock();\n\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) end = bufEnd;\n      } else {\n        while (!this.eof) this.readBlock();\n\n        var end = this.bufferLength;\n      }\n\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    lookChar: function decodestream_lookChar() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) return null;\n        this.readBlock();\n      }\n      return String.fromCharCode(this.buffer[this.pos]);\n    },\n    getChar: function decodestream_getChar() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) return null;\n        this.readBlock();\n      }\n      return String.fromCharCode(this.buffer[this.pos++]);\n    },\n    makeSubStream: function decodestream_makeSubstream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) this.readBlock();\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function decodestream_skip(n) {\n      if (!n) n = 1;\n      this.pos += n;\n    },\n    reset: function decodestream_reset() {\n      this.pos = 0;\n    }\n  };\n\n  return constructor;\n})();\n\nexport const FlateStream = (function() {\n  var codeLenCodeMap = new Uint32Array([\n    16,\n    17,\n    18,\n    0,\n    8,\n    7,\n    9,\n    6,\n    10,\n    5,\n    11,\n    4,\n    12,\n    3,\n    13,\n    2,\n    14,\n    1,\n    15\n  ]);\n\n  var lengthDecode = new Uint32Array([\n    0x00003,\n    0x00004,\n    0x00005,\n    0x00006,\n    0x00007,\n    0x00008,\n    0x00009,\n    0x0000a,\n    0x1000b,\n    0x1000d,\n    0x1000f,\n    0x10011,\n    0x20013,\n    0x20017,\n    0x2001b,\n    0x2001f,\n    0x30023,\n    0x3002b,\n    0x30033,\n    0x3003b,\n    0x40043,\n    0x40053,\n    0x40063,\n    0x40073,\n    0x50083,\n    0x500a3,\n    0x500c3,\n    0x500e3,\n    0x00102,\n    0x00102,\n    0x00102\n  ]);\n\n  var distDecode = new Uint32Array([\n    0x00001,\n    0x00002,\n    0x00003,\n    0x00004,\n    0x10005,\n    0x10007,\n    0x20009,\n    0x2000d,\n    0x30011,\n    0x30019,\n    0x40021,\n    0x40031,\n    0x50041,\n    0x50061,\n    0x60081,\n    0x600c1,\n    0x70101,\n    0x70181,\n    0x80201,\n    0x80301,\n    0x90401,\n    0x90601,\n    0xa0801,\n    0xa0c01,\n    0xb1001,\n    0xb1801,\n    0xc2001,\n    0xc3001,\n    0xd4001,\n    0xd6001\n  ]);\n\n  var fixedLitCodeTab = [\n    new Uint32Array([\n      0x70100,\n      0x80050,\n      0x80010,\n      0x80118,\n      0x70110,\n      0x80070,\n      0x80030,\n      0x900c0,\n      0x70108,\n      0x80060,\n      0x80020,\n      0x900a0,\n      0x80000,\n      0x80080,\n      0x80040,\n      0x900e0,\n      0x70104,\n      0x80058,\n      0x80018,\n      0x90090,\n      0x70114,\n      0x80078,\n      0x80038,\n      0x900d0,\n      0x7010c,\n      0x80068,\n      0x80028,\n      0x900b0,\n      0x80008,\n      0x80088,\n      0x80048,\n      0x900f0,\n      0x70102,\n      0x80054,\n      0x80014,\n      0x8011c,\n      0x70112,\n      0x80074,\n      0x80034,\n      0x900c8,\n      0x7010a,\n      0x80064,\n      0x80024,\n      0x900a8,\n      0x80004,\n      0x80084,\n      0x80044,\n      0x900e8,\n      0x70106,\n      0x8005c,\n      0x8001c,\n      0x90098,\n      0x70116,\n      0x8007c,\n      0x8003c,\n      0x900d8,\n      0x7010e,\n      0x8006c,\n      0x8002c,\n      0x900b8,\n      0x8000c,\n      0x8008c,\n      0x8004c,\n      0x900f8,\n      0x70101,\n      0x80052,\n      0x80012,\n      0x8011a,\n      0x70111,\n      0x80072,\n      0x80032,\n      0x900c4,\n      0x70109,\n      0x80062,\n      0x80022,\n      0x900a4,\n      0x80002,\n      0x80082,\n      0x80042,\n      0x900e4,\n      0x70105,\n      0x8005a,\n      0x8001a,\n      0x90094,\n      0x70115,\n      0x8007a,\n      0x8003a,\n      0x900d4,\n      0x7010d,\n      0x8006a,\n      0x8002a,\n      0x900b4,\n      0x8000a,\n      0x8008a,\n      0x8004a,\n      0x900f4,\n      0x70103,\n      0x80056,\n      0x80016,\n      0x8011e,\n      0x70113,\n      0x80076,\n      0x80036,\n      0x900cc,\n      0x7010b,\n      0x80066,\n      0x80026,\n      0x900ac,\n      0x80006,\n      0x80086,\n      0x80046,\n      0x900ec,\n      0x70107,\n      0x8005e,\n      0x8001e,\n      0x9009c,\n      0x70117,\n      0x8007e,\n      0x8003e,\n      0x900dc,\n      0x7010f,\n      0x8006e,\n      0x8002e,\n      0x900bc,\n      0x8000e,\n      0x8008e,\n      0x8004e,\n      0x900fc,\n      0x70100,\n      0x80051,\n      0x80011,\n      0x80119,\n      0x70110,\n      0x80071,\n      0x80031,\n      0x900c2,\n      0x70108,\n      0x80061,\n      0x80021,\n      0x900a2,\n      0x80001,\n      0x80081,\n      0x80041,\n      0x900e2,\n      0x70104,\n      0x80059,\n      0x80019,\n      0x90092,\n      0x70114,\n      0x80079,\n      0x80039,\n      0x900d2,\n      0x7010c,\n      0x80069,\n      0x80029,\n      0x900b2,\n      0x80009,\n      0x80089,\n      0x80049,\n      0x900f2,\n      0x70102,\n      0x80055,\n      0x80015,\n      0x8011d,\n      0x70112,\n      0x80075,\n      0x80035,\n      0x900ca,\n      0x7010a,\n      0x80065,\n      0x80025,\n      0x900aa,\n      0x80005,\n      0x80085,\n      0x80045,\n      0x900ea,\n      0x70106,\n      0x8005d,\n      0x8001d,\n      0x9009a,\n      0x70116,\n      0x8007d,\n      0x8003d,\n      0x900da,\n      0x7010e,\n      0x8006d,\n      0x8002d,\n      0x900ba,\n      0x8000d,\n      0x8008d,\n      0x8004d,\n      0x900fa,\n      0x70101,\n      0x80053,\n      0x80013,\n      0x8011b,\n      0x70111,\n      0x80073,\n      0x80033,\n      0x900c6,\n      0x70109,\n      0x80063,\n      0x80023,\n      0x900a6,\n      0x80003,\n      0x80083,\n      0x80043,\n      0x900e6,\n      0x70105,\n      0x8005b,\n      0x8001b,\n      0x90096,\n      0x70115,\n      0x8007b,\n      0x8003b,\n      0x900d6,\n      0x7010d,\n      0x8006b,\n      0x8002b,\n      0x900b6,\n      0x8000b,\n      0x8008b,\n      0x8004b,\n      0x900f6,\n      0x70103,\n      0x80057,\n      0x80017,\n      0x8011f,\n      0x70113,\n      0x80077,\n      0x80037,\n      0x900ce,\n      0x7010b,\n      0x80067,\n      0x80027,\n      0x900ae,\n      0x80007,\n      0x80087,\n      0x80047,\n      0x900ee,\n      0x70107,\n      0x8005f,\n      0x8001f,\n      0x9009e,\n      0x70117,\n      0x8007f,\n      0x8003f,\n      0x900de,\n      0x7010f,\n      0x8006f,\n      0x8002f,\n      0x900be,\n      0x8000f,\n      0x8008f,\n      0x8004f,\n      0x900fe,\n      0x70100,\n      0x80050,\n      0x80010,\n      0x80118,\n      0x70110,\n      0x80070,\n      0x80030,\n      0x900c1,\n      0x70108,\n      0x80060,\n      0x80020,\n      0x900a1,\n      0x80000,\n      0x80080,\n      0x80040,\n      0x900e1,\n      0x70104,\n      0x80058,\n      0x80018,\n      0x90091,\n      0x70114,\n      0x80078,\n      0x80038,\n      0x900d1,\n      0x7010c,\n      0x80068,\n      0x80028,\n      0x900b1,\n      0x80008,\n      0x80088,\n      0x80048,\n      0x900f1,\n      0x70102,\n      0x80054,\n      0x80014,\n      0x8011c,\n      0x70112,\n      0x80074,\n      0x80034,\n      0x900c9,\n      0x7010a,\n      0x80064,\n      0x80024,\n      0x900a9,\n      0x80004,\n      0x80084,\n      0x80044,\n      0x900e9,\n      0x70106,\n      0x8005c,\n      0x8001c,\n      0x90099,\n      0x70116,\n      0x8007c,\n      0x8003c,\n      0x900d9,\n      0x7010e,\n      0x8006c,\n      0x8002c,\n      0x900b9,\n      0x8000c,\n      0x8008c,\n      0x8004c,\n      0x900f9,\n      0x70101,\n      0x80052,\n      0x80012,\n      0x8011a,\n      0x70111,\n      0x80072,\n      0x80032,\n      0x900c5,\n      0x70109,\n      0x80062,\n      0x80022,\n      0x900a5,\n      0x80002,\n      0x80082,\n      0x80042,\n      0x900e5,\n      0x70105,\n      0x8005a,\n      0x8001a,\n      0x90095,\n      0x70115,\n      0x8007a,\n      0x8003a,\n      0x900d5,\n      0x7010d,\n      0x8006a,\n      0x8002a,\n      0x900b5,\n      0x8000a,\n      0x8008a,\n      0x8004a,\n      0x900f5,\n      0x70103,\n      0x80056,\n      0x80016,\n      0x8011e,\n      0x70113,\n      0x80076,\n      0x80036,\n      0x900cd,\n      0x7010b,\n      0x80066,\n      0x80026,\n      0x900ad,\n      0x80006,\n      0x80086,\n      0x80046,\n      0x900ed,\n      0x70107,\n      0x8005e,\n      0x8001e,\n      0x9009d,\n      0x70117,\n      0x8007e,\n      0x8003e,\n      0x900dd,\n      0x7010f,\n      0x8006e,\n      0x8002e,\n      0x900bd,\n      0x8000e,\n      0x8008e,\n      0x8004e,\n      0x900fd,\n      0x70100,\n      0x80051,\n      0x80011,\n      0x80119,\n      0x70110,\n      0x80071,\n      0x80031,\n      0x900c3,\n      0x70108,\n      0x80061,\n      0x80021,\n      0x900a3,\n      0x80001,\n      0x80081,\n      0x80041,\n      0x900e3,\n      0x70104,\n      0x80059,\n      0x80019,\n      0x90093,\n      0x70114,\n      0x80079,\n      0x80039,\n      0x900d3,\n      0x7010c,\n      0x80069,\n      0x80029,\n      0x900b3,\n      0x80009,\n      0x80089,\n      0x80049,\n      0x900f3,\n      0x70102,\n      0x80055,\n      0x80015,\n      0x8011d,\n      0x70112,\n      0x80075,\n      0x80035,\n      0x900cb,\n      0x7010a,\n      0x80065,\n      0x80025,\n      0x900ab,\n      0x80005,\n      0x80085,\n      0x80045,\n      0x900eb,\n      0x70106,\n      0x8005d,\n      0x8001d,\n      0x9009b,\n      0x70116,\n      0x8007d,\n      0x8003d,\n      0x900db,\n      0x7010e,\n      0x8006d,\n      0x8002d,\n      0x900bb,\n      0x8000d,\n      0x8008d,\n      0x8004d,\n      0x900fb,\n      0x70101,\n      0x80053,\n      0x80013,\n      0x8011b,\n      0x70111,\n      0x80073,\n      0x80033,\n      0x900c7,\n      0x70109,\n      0x80063,\n      0x80023,\n      0x900a7,\n      0x80003,\n      0x80083,\n      0x80043,\n      0x900e7,\n      0x70105,\n      0x8005b,\n      0x8001b,\n      0x90097,\n      0x70115,\n      0x8007b,\n      0x8003b,\n      0x900d7,\n      0x7010d,\n      0x8006b,\n      0x8002b,\n      0x900b7,\n      0x8000b,\n      0x8008b,\n      0x8004b,\n      0x900f7,\n      0x70103,\n      0x80057,\n      0x80017,\n      0x8011f,\n      0x70113,\n      0x80077,\n      0x80037,\n      0x900cf,\n      0x7010b,\n      0x80067,\n      0x80027,\n      0x900af,\n      0x80007,\n      0x80087,\n      0x80047,\n      0x900ef,\n      0x70107,\n      0x8005f,\n      0x8001f,\n      0x9009f,\n      0x70117,\n      0x8007f,\n      0x8003f,\n      0x900df,\n      0x7010f,\n      0x8006f,\n      0x8002f,\n      0x900bf,\n      0x8000f,\n      0x8008f,\n      0x8004f,\n      0x900ff\n    ]),\n    9\n  ];\n\n  var fixedDistCodeTab = [\n    new Uint32Array([\n      0x50000,\n      0x50010,\n      0x50008,\n      0x50018,\n      0x50004,\n      0x50014,\n      0x5000c,\n      0x5001c,\n      0x50002,\n      0x50012,\n      0x5000a,\n      0x5001a,\n      0x50006,\n      0x50016,\n      0x5000e,\n      0x00000,\n      0x50001,\n      0x50011,\n      0x50009,\n      0x50019,\n      0x50005,\n      0x50015,\n      0x5000d,\n      0x5001d,\n      0x50003,\n      0x50013,\n      0x5000b,\n      0x5001b,\n      0x50007,\n      0x50017,\n      0x5000f,\n      0x00000\n    ]),\n    5\n  ];\n\n  function error(e) {\n    throw new Error(e);\n  }\n\n  function constructor(bytes) {\n    //var bytes = stream.getBytes();\n    var bytesPos = 0;\n\n    var cmf = bytes[bytesPos++];\n    var flg = bytes[bytesPos++];\n    if (cmf == -1 || flg == -1) error(\"Invalid header in flate stream\");\n    if ((cmf & 0x0f) != 0x08)\n      error(\"Unknown compression method in flate stream\");\n    if (((cmf << 8) + flg) % 31 != 0) error(\"Bad FCHECK in flate stream\");\n    if (flg & 0x20) error(\"FDICT bit set in flate stream\");\n\n    this.bytes = bytes;\n    this.bytesPos = bytesPos;\n\n    this.codeSize = 0;\n    this.codeBuf = 0;\n\n    DecodeStream.call(this);\n  }\n\n  constructor.prototype = Object.create(DecodeStream.prototype);\n\n  constructor.prototype.getBits = function(bits) {\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var bytes = this.bytes;\n    var bytesPos = this.bytesPos;\n\n    var b;\n    while (codeSize < bits) {\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad encoding in flate stream\");\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & ((1 << bits) - 1);\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    this.bytesPos = bytesPos;\n    return b;\n  };\n\n  constructor.prototype.getCode = function(table) {\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var bytes = this.bytes;\n    var bytesPos = this.bytesPos;\n\n    while (codeSize < maxLen) {\n      var b;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad encoding in flate stream\");\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & ((1 << maxLen) - 1)];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeSize == 0 || codeSize < codeLen || codeLen == 0)\n      error(\"Bad encoding in flate stream\");\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    this.bytesPos = bytesPos;\n    return codeVal;\n  };\n\n  constructor.prototype.generateHuffmanTable = function(lengths) {\n    var n = lengths.length;\n\n    // find max code length\n    var maxLen = 0;\n    for (var i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) maxLen = lengths[i];\n    }\n\n    // build the table\n    var size = 1 << maxLen;\n    var codes = new Uint32Array(size);\n    for (\n      var len = 1, code = 0, skip = 2;\n      len <= maxLen;\n      ++len, code <<= 1, skip <<= 1\n    ) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] == len) {\n          // bit-reverse the code\n          var code2 = 0;\n          var t = code;\n          for (var i = 0; i < len; ++i) {\n            code2 = (code2 << 1) | (t & 1);\n            t >>= 1;\n          }\n\n          // fill the table entries\n          for (var i = code2; i < size; i += skip) codes[i] = (len << 16) | val;\n\n          ++code;\n        }\n      }\n    }\n\n    return [codes, maxLen];\n  };\n\n  constructor.prototype.readBlock = function() {\n    function repeat(stream, array, len, offset, what) {\n      var repeat = stream.getBits(len) + offset;\n      while (repeat-- > 0) array[i++] = what;\n    }\n\n    // read block header\n    var hdr = this.getBits(3);\n    if (hdr & 1) this.eof = true;\n    hdr >>= 1;\n\n    if (hdr == 0) {\n      // uncompressed block\n      var bytes = this.bytes;\n      var bytesPos = this.bytesPos;\n      var b;\n\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      var blockLen = b;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      blockLen |= b << 8;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      var check = b;\n      if (typeof (b = bytes[bytesPos++]) == \"undefined\")\n        error(\"Bad block header in flate stream\");\n      check |= b << 8;\n      if (check != (~blockLen & 0xffff))\n        error(\"Bad uncompressed block length in flate stream\");\n\n      this.codeBuf = 0;\n      this.codeSize = 0;\n\n      var bufferLength = this.bufferLength;\n      var buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      for (var n = bufferLength; n < end; ++n) {\n        if (typeof (b = bytes[bytesPos++]) == \"undefined\") {\n          this.eof = true;\n          break;\n        }\n        buffer[n] = b;\n      }\n      this.bytesPos = bytesPos;\n      return;\n    }\n\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr == 1) {\n      // compressed block, fixed codes\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr == 2) {\n      // compressed block, dynamic codes\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n\n      // build the code lengths code table\n      var codeLenCodeLengths = Array(codeLenCodeMap.length);\n      var i = 0;\n      while (i < numCodeLenCodes)\n        codeLenCodeLengths[codeLenCodeMap[i++]] = this.getBits(3);\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\n      // build the literal and distance code tables\n      var len = 0;\n      var i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Array(codes);\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code == 16) {\n          repeat(this, codeLengths, 2, 3, len);\n        } else if (code == 17) {\n          repeat(this, codeLengths, 3, 3, (len = 0));\n        } else if (code == 18) {\n          repeat(this, codeLengths, 7, 11, (len = 0));\n        } else {\n          codeLengths[i++] = len = code;\n        }\n      }\n\n      litCodeTable = this.generateHuffmanTable(\n        codeLengths.slice(0, numLitCodes)\n      );\n      distCodeTable = this.generateHuffmanTable(\n        codeLengths.slice(numLitCodes, codes)\n      );\n    } else {\n      error(\"Unknown block type in flate stream\");\n    }\n\n    var buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 == 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) code2 = this.getBits(code2);\n      var len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) code2 = this.getBits(code2);\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) buffer[pos] = buffer[pos - dist];\n    }\n  };\n\n  return constructor;\n})();\n","/*\n * MIT LICENSE\n * Copyright (c) 2011 Devon Govett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n * to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { FlateStream } from './zlib.js';\n\nexport default class PNG {\n  constructor(data1) {\n    let i;\n    this.data = data1;\n    this.pos = 8; // Skip the default header\n\n    this.palette = [];\n    this.imgData = [];\n    this.transparency = {};\n    this.animation = null;\n    this.text = {};\n    let frame = null;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var data;\n      let chunkSize = this.readUInt32();\n      let section = '';\n      for (i = 0; i < 4; i++) {\n        section += String.fromCharCode(this.data[this.pos++]);\n      }\n\n      switch (section) {\n        case 'IHDR':\n          // we can grab  interesting values from here (like width, height, etc)\n          this.width = this.readUInt32();\n          this.height = this.readUInt32();\n          this.bits = this.data[this.pos++];\n          this.colorType = this.data[this.pos++];\n          this.compressionMethod = this.data[this.pos++];\n          this.filterMethod = this.data[this.pos++];\n          this.interlaceMethod = this.data[this.pos++];\n          break;\n\n        case 'acTL':\n          // we have an animated PNG\n          this.animation = {\n            numFrames: this.readUInt32(),\n            numPlays: this.readUInt32() || Infinity,\n            frames: [],\n          };\n          break;\n\n        case 'PLTE':\n          this.palette = this.read(chunkSize);\n          break;\n\n        case 'fcTL':\n          if (frame) {\n            this.animation.frames.push(frame);\n          }\n\n          this.pos += 4; // skip sequence number\n          frame = {\n            width: this.readUInt32(),\n            height: this.readUInt32(),\n            xOffset: this.readUInt32(),\n            yOffset: this.readUInt32(),\n          };\n\n          var delayNum = this.readUInt16();\n          var delayDen = this.readUInt16() || 100;\n          frame.delay = (1000 * delayNum) / delayDen;\n\n          frame.disposeOp = this.data[this.pos++];\n          frame.blendOp = this.data[this.pos++];\n          frame.data = [];\n          break;\n\n        case 'IDAT':\n        case 'fdAT':\n          if (section === 'fdAT') {\n            this.pos += 4; // skip sequence number\n            chunkSize -= 4;\n          }\n\n          data = (frame && frame.data) || this.imgData;\n          for (i = 0; i < chunkSize; i++) {\n            data.push(this.data[this.pos++]);\n          }\n          break;\n\n        case 'tRNS':\n          // This chunk can only occur once and it must occur after the\n          // PLTE chunk and before the IDAT chunk.\n          this.transparency = {};\n          switch (this.colorType) {\n            case 3:\n              // Indexed color, RGB. Each byte in this chunk is an alpha for\n              // the palette index in the PLTE (\"palette\") chunk up until the\n              // last non-opaque entry. Set up an array, stretching over all\n              // palette entries which will be 0 (opaque) or 1 (transparent).\n              this.transparency.indexed = this.read(chunkSize);\n              var short = 255 - this.transparency.indexed.length;\n              if (short > 0) {\n                for (i = 0; i < short; i++) {\n                  this.transparency.indexed.push(255);\n                }\n              }\n              break;\n            case 0:\n              // Greyscale. Corresponding to entries in the PLTE chunk.\n              // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1\n              this.transparency.grayscale = this.read(chunkSize)[0];\n              break;\n            case 2:\n              // True color with proper alpha channel.\n              this.transparency.rgb = this.read(chunkSize);\n              break;\n          }\n          break;\n\n        case 'tEXt':\n          var text = this.read(chunkSize);\n          var index = text.indexOf(0);\n          var key = String.fromCharCode.apply(String, text.slice(0, index));\n          this.text[key] = String.fromCharCode.apply(\n            String,\n            text.slice(index + 1)\n          );\n          break;\n\n        case 'IEND':\n          if (frame) {\n            this.animation.frames.push(frame);\n          }\n\n          // we've got everything we need!\n          switch (this.colorType) {\n            case 0:\n            case 3:\n            case 4:\n              this.colors = 1;\n              break;\n            case 2:\n            case 6:\n              this.colors = 3;\n              break;\n          }\n\n          this.hasAlphaChannel = [4, 6].includes(this.colorType);\n          var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n          this.pixelBitlength = this.bits * colors;\n\n          switch (this.colors) {\n            case 1:\n              this.colorSpace = 'DeviceGray';\n              break;\n            case 3:\n              this.colorSpace = 'DeviceRGB';\n              break;\n          }\n\n          this.imgData = new Uint8Array(this.imgData);\n          return;\n\n        default:\n          // unknown (or unimportant) section, skip it\n          this.pos += chunkSize;\n      }\n\n      this.pos += 4; // Skip the CRC\n\n      if (this.pos > this.data.length) {\n        throw new Error('Incomplete or corrupt PNG file');\n      }\n    }\n  }\n\n  read(bytes) {\n    const result = new Array(bytes);\n    for (let i = 0; i < bytes; i++) {\n      result[i] = this.data[this.pos++];\n    }\n    return result;\n  }\n\n  readUInt32() {\n    const b1 = this.data[this.pos++] << 24;\n    const b2 = this.data[this.pos++] << 16;\n    const b3 = this.data[this.pos++] << 8;\n    const b4 = this.data[this.pos++];\n    return b1 | b2 | b3 | b4;\n  }\n\n  readUInt16() {\n    const b1 = this.data[this.pos++] << 8;\n    const b2 = this.data[this.pos++];\n    return b1 | b2;\n  }\n\n  decodePixels(data) {\n    if (data == null) {\n      data = this.imgData;\n    }\n    if (data.length === 0) {\n      return new Uint8Array(0);\n    }\n\n    data = new FlateStream(data);\n    data = data.getBytes();\n\n    const { width, height } = this;\n    const pixelBytes = this.pixelBitlength / 8;\n\n    const pixels = new Uint8Array(width * height * pixelBytes);\n    const { length } = data;\n    let pos = 0;\n\n    function pass(x0, y0, dx, dy, singlePass = false) {\n      const w = Math.ceil((width - x0) / dx);\n      const h = Math.ceil((height - y0) / dy);\n      const scanlineLength = pixelBytes * w;\n      const buffer = singlePass ? pixels : new Uint8Array(scanlineLength * h);\n      let row = 0;\n      let c = 0;\n      while (row < h && pos < length) {\n        var byte, col, i, left, upper;\n        switch (data[pos++]) {\n          case 0: // None\n            for (i = 0; i < scanlineLength; i++) {\n              buffer[c++] = data[pos++];\n            }\n            break;\n\n          case 1: // Sub\n            for (i = 0; i < scanlineLength; i++) {\n              byte = data[pos++];\n              left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n              buffer[c++] = (byte + left) % 256;\n            }\n            break;\n\n          case 2: // Up\n            for (i = 0; i < scanlineLength; i++) {\n              byte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              upper =\n                row &&\n                buffer[\n                  (row - 1) * scanlineLength +\n                    col * pixelBytes +\n                    (i % pixelBytes)\n                ];\n              buffer[c++] = (upper + byte) % 256;\n            }\n            break;\n\n          case 3: // Average\n            for (i = 0; i < scanlineLength; i++) {\n              byte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n              upper =\n                row &&\n                buffer[\n                  (row - 1) * scanlineLength +\n                    col * pixelBytes +\n                    (i % pixelBytes)\n                ];\n              buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n            }\n            break;\n\n          case 4: // Paeth\n            for (i = 0; i < scanlineLength; i++) {\n              var paeth, upperLeft;\n              byte = data[pos++];\n              col = (i - (i % pixelBytes)) / pixelBytes;\n              left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n\n              if (row === 0) {\n                upper = upperLeft = 0;\n              } else {\n                upper =\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                upperLeft =\n                  col &&\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      (col - 1) * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n              }\n\n              const p = left + upper - upperLeft;\n              const pa = Math.abs(p - left);\n              const pb = Math.abs(p - upper);\n              const pc = Math.abs(p - upperLeft);\n\n              if (pa <= pb && pa <= pc) {\n                paeth = left;\n              } else if (pb <= pc) {\n                paeth = upper;\n              } else {\n                paeth = upperLeft;\n              }\n\n              buffer[c++] = (byte + paeth) % 256;\n            }\n            break;\n\n          default:\n            throw new Error(`Invalid filter algorithm: ${data[pos - 1]}`);\n        }\n\n        if (!singlePass) {\n          let pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;\n          let bufferPos = row * scanlineLength;\n          for (i = 0; i < w; i++) {\n            for (let j = 0; j < pixelBytes; j++)\n              pixels[pixelsPos++] = buffer[bufferPos++];\n            pixelsPos += (dx - 1) * pixelBytes;\n          }\n        }\n\n        row++;\n      }\n    }\n\n    if (this.interlaceMethod === 1) {\n      /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */\n      pass(0, 0, 8, 8); // 1\n      pass(4, 0, 8, 8); // 2\n      pass(0, 4, 4, 8); // 3\n      pass(2, 0, 4, 4); // 4\n      pass(0, 2, 2, 4); // 5\n      pass(1, 0, 2, 2); // 6\n      pass(0, 1, 1, 2); // 7\n    } else {\n      pass(0, 0, 1, 1, true);\n    }\n\n    return pixels;\n  }\n\n  decodePalette() {\n    const { palette } = this;\n    const { length } = palette;\n    const transparency = this.transparency.indexed || [];\n    const ret = new Uint8Array((transparency.length || 0) + length);\n    let pos = 0;\n    let c = 0;\n\n    for (let i = 0; i < length; i += 3) {\n      var left;\n      ret[pos++] = palette[i];\n      ret[pos++] = palette[i + 1];\n      ret[pos++] = palette[i + 2];\n      ret[pos++] = (left = transparency[c++]) != null ? left : 255;\n    }\n\n    return ret;\n  }\n\n  copyToImageData(imageData, pixels) {\n    let j, k;\n    let { colors } = this;\n    let palette = null;\n    let alpha = this.hasAlphaChannel;\n\n    if (this.palette.length) {\n      palette =\n        this._decodedPalette || (this._decodedPalette = this.decodePalette());\n      colors = 4;\n      alpha = true;\n    }\n\n    const data = imageData.data || imageData;\n    const { length } = data;\n    const input = palette || pixels;\n    let i = (j = 0);\n\n    if (colors === 1) {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        const v = input[k++];\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    } else {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    }\n  }\n\n  decode() {\n    const ret = new Uint8Array(this.width * this.height * 4);\n    this.copyToImageData(ret, this.decodePixels());\n    return ret;\n  }\n}\n","/**\n * @author shaozilee\n *\n * Bmp format decoder,support 1bit 4bit 8bit 24bit bmp\n *\n */\n\nexport default function BmpDecoder(buffer, is_with_alpha) {\n  this.pos = 2;\n  this.buffer = new DataView(buffer.buffer);\n  this.is_with_alpha = !!is_with_alpha;\n  this.bottom_up = true;\n  this.flag = buffer.slice(0, 2);\n\n  if (this.flag[0] !== 66 || this.flag[1] !== 77)\n    throw new Error('Invalid BMP File');\n  this.parseHeader();\n  this.parseRGBA();\n}\n\nBmpDecoder.prototype.parseHeader = function() {\n  this.fileSize = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.reserved = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.offset = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.headerSize = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.width = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.height = this.buffer.getInt32(this.pos, true);\n  this.pos += 4;\n  this.planes = this.buffer.getUint16(this.pos, true);\n  this.pos += 2;\n  this.bitPP = this.buffer.getUint16(this.pos, true);\n  this.pos += 2;\n  this.compress = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.rawSize = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.hr = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.vr = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.colors = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n  this.importantColors = this.buffer.getUint32(this.pos, true);\n  this.pos += 4;\n\n  if (this.bitPP === 16 && this.is_with_alpha) {\n    this.bitPP = 15;\n  }\n  if (this.bitPP < 15) {\n    var len = this.colors === 0 ? 1 << this.bitPP : this.colors;\n    this.palette = new Array(len);\n    for (var i = 0; i < len; i++) {\n      var blue = this.buffer.getUint8(this.pos++);\n      var green = this.buffer.getUint8(this.pos++);\n      var red = this.buffer.getUint8(this.pos++);\n      var quad = this.buffer.getUint8(this.pos++);\n      this.palette[i] = {\n        red: red,\n        green: green,\n        blue: blue,\n        quad: quad,\n      };\n    }\n  }\n  if (this.height < 0) {\n    this.height *= -1;\n    this.bottom_up = false;\n  }\n};\n\nBmpDecoder.prototype.parseRGBA = function() {\n  var bitn = 'bit' + this.bitPP;\n  var len = this.width * this.height * 4;\n  this.data = new ArrayBuffer(len);\n  this[bitn]();\n};\n\nBmpDecoder.prototype.bit1 = function() {\n  var xlen = Math.ceil(this.width / 8);\n  var mode = xlen % 4;\n  var y = this.height >= 0 ? this.height - 1 : -this.height;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < xlen; x++) {\n      var b = this.buffer.getUint8(this.pos++);\n      var location = line * this.width * 4 + x * 8 * 4;\n      for (var i = 0; i < 8; i++) {\n        if (x * 8 + i < this.width) {\n          var rgb = this.palette[(b >> (7 - i)) & 0x1];\n\n          this.data[location + i * 4] = 0;\n          this.data[location + i * 4 + 1] = rgb.blue;\n          this.data[location + i * 4 + 2] = rgb.green;\n          this.data[location + i * 4 + 3] = rgb.red;\n        } else {\n          break;\n        }\n      }\n    }\n\n    if (mode != 0) {\n      this.pos += 4 - mode;\n    }\n  }\n};\n\nBmpDecoder.prototype.bit4 = function() {\n  //RLE-4\n  if (this.compress == 2) {\n    this.data.fill(0xff);\n\n    var location = 0;\n    var lines = this.bottom_up ? this.height - 1 : 0;\n    var low_nibble = false; //for all count of pixel\n\n    while (location < this.data.length) {\n      var a = this.buffer.getUint8(this.pos++);\n      var b = this.buffer.getUint8(this.pos++);\n      //absolute mode\n      if (a == 0) {\n        if (b == 0) {\n          //line end\n          if (this.bottom_up) {\n            lines--;\n          } else {\n            lines++;\n          }\n          location = lines * this.width * 4;\n          low_nibble = false;\n          continue;\n        } else if (b == 1) {\n          //image end\n          break;\n        } else if (b == 2) {\n          //offset x,y\n          var x = this.buffer.getUint8(this.pos++);\n          var y = this.buffer.getUint8(this.pos++);\n          if (this.bottom_up) {\n            lines -= y;\n          } else {\n            lines += y;\n          }\n\n          location += y * this.width * 4 + x * 4;\n        } else {\n          var c = this.buffer.getUint8(this.pos++);\n          for (var i = 0; i < b; i++) {\n            if (low_nibble) {\n              setPixelData.call(this, c & 0x0f);\n            } else {\n              setPixelData.call(this, (c & 0xf0) >> 4);\n            }\n\n            if (i & 1 && i + 1 < b) {\n              c = this.buffer.getUint8(this.pos++);\n            }\n\n            low_nibble = !low_nibble;\n          }\n\n          if ((((b + 1) >> 1) & 1) == 1) {\n            this.pos++;\n          }\n        }\n      } else {\n        //encoded mode\n        for (var i = 0; i < a; i++) {\n          if (low_nibble) {\n            setPixelData.call(this, b & 0x0f);\n          } else {\n            setPixelData.call(this, (b & 0xf0) >> 4);\n          }\n          low_nibble = !low_nibble;\n        }\n      }\n    }\n\n    function setPixelData(rgbIndex) {\n      var rgb = this.palette[rgbIndex];\n      this.data[location] = 0;\n      this.data[location + 1] = rgb.blue;\n      this.data[location + 2] = rgb.green;\n      this.data[location + 3] = rgb.red;\n      location += 4;\n    }\n  } else {\n    var xlen = Math.ceil(this.width / 2);\n    var mode = xlen % 4;\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < xlen; x++) {\n        var b = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 2 * 4;\n\n        var before = b >> 4;\n        var after = b & 0x0f;\n\n        var rgb = this.palette[before];\n        this.data[location] = 0;\n        this.data[location + 1] = rgb.blue;\n        this.data[location + 2] = rgb.green;\n        this.data[location + 3] = rgb.red;\n\n        if (x * 2 + 1 >= this.width) break;\n\n        rgb = this.palette[after];\n\n        this.data[location + 4] = 0;\n        this.data[location + 4 + 1] = rgb.blue;\n        this.data[location + 4 + 2] = rgb.green;\n        this.data[location + 4 + 3] = rgb.red;\n      }\n\n      if (mode != 0) {\n        this.pos += 4 - mode;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.bit8 = function() {\n  //RLE-8\n  if (this.compress == 1) {\n    this.data.fill(0xff);\n\n    var location = 0;\n    var lines = this.bottom_up ? this.height - 1 : 0;\n\n    while (location < this.data.length) {\n      var a = this.buffer.getUint8(this.pos++);\n      var b = this.buffer.getUint8(this.pos++);\n      //absolute mode\n      if (a == 0) {\n        if (b == 0) {\n          //line end\n          if (this.bottom_up) {\n            lines--;\n          } else {\n            lines++;\n          }\n          location = lines * this.width * 4;\n          continue;\n        } else if (b == 1) {\n          //image end\n          break;\n        } else if (b == 2) {\n          //offset x,y\n          var x = this.buffer.getUint8(this.pos++);\n          var y = this.buffer.getUint8(this.pos++);\n          if (this.bottom_up) {\n            lines -= y;\n          } else {\n            lines += y;\n          }\n\n          location += y * this.width * 4 + x * 4;\n        } else {\n          for (var i = 0; i < b; i++) {\n            var c = this.buffer.getUint8(this.pos++);\n            setPixelData.call(this, c);\n          }\n          if (b & (1 == 1)) {\n            this.pos++;\n          }\n        }\n      } else {\n        //encoded mode\n        for (var i = 0; i < a; i++) {\n          setPixelData.call(this, b);\n        }\n      }\n    }\n\n    function setPixelData(rgbIndex) {\n      var rgb = this.palette[rgbIndex];\n      this.data[location] = 0;\n      this.data[location + 1] = rgb.blue;\n      this.data[location + 2] = rgb.green;\n      this.data[location + 3] = rgb.red;\n      location += 4;\n    }\n  } else {\n    var mode = this.width % 4;\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < this.width; x++) {\n        var b = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        if (b < this.palette.length) {\n          var rgb = this.palette[b];\n\n          this.data[location] = 0;\n          this.data[location + 1] = rgb.blue;\n          this.data[location + 2] = rgb.green;\n          this.data[location + 3] = rgb.red;\n        } else {\n          this.data[location] = 0;\n          this.data[location + 1] = 0xff;\n          this.data[location + 2] = 0xff;\n          this.data[location + 3] = 0xff;\n        }\n      }\n      if (mode != 0) {\n        this.pos += 4 - mode;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.bit15 = function() {\n  var dif_w = this.width % 3;\n  var _11111 = parseInt('11111', 2),\n    _1_5 = _11111;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var B = this.buffer.getUint16(this.pos, true);\n      this.pos += 2;\n      var blue = (((B & _1_5) / _1_5) * 255) | 0;\n      var green = ((((B >> 5) & _1_5) / _1_5) * 255) | 0;\n      var red = ((((B >> 10) & _1_5) / _1_5) * 255) | 0;\n      var alpha = B >> 15 ? 0xff : 0x00;\n\n      var location = line * this.width * 4 + x * 4;\n\n      this.data[location] = alpha;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit16 = function() {\n  var dif_w = (this.width % 2) * 2;\n  //default xrgb555\n  this.maskRed = 0x7c00;\n  this.maskGreen = 0x3e0;\n  this.maskBlue = 0x1f;\n  this.mask0 = 0;\n\n  if (this.compress == 3) {\n    this.maskRed = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskGreen = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskBlue = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.mask0 = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n  }\n\n  var ns = [0, 0, 0];\n  for (var i = 0; i < 16; i++) {\n    if ((this.maskRed >> i) & 0x01) ns[0]++;\n    if ((this.maskGreen >> i) & 0x01) ns[1]++;\n    if ((this.maskBlue >> i) & 0x01) ns[2]++;\n  }\n  ns[1] += ns[0];\n  ns[2] += ns[1];\n  ns[0] = 8 - ns[0];\n  ns[1] -= 8;\n  ns[2] -= 8;\n\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      var B = this.buffer.getUint16(this.pos, true);\n      this.pos += 2;\n\n      var blue = (B & this.maskBlue) << ns[0];\n      var green = (B & this.maskGreen) >> ns[1];\n      var red = (B & this.maskRed) >> ns[2];\n\n      var location = line * this.width * 4 + x * 4;\n\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit24 = function() {\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n      //Little Endian rgb\n      var blue = this.buffer.getUint8(this.pos++);\n      var green = this.buffer.getUint8(this.pos++);\n      var red = this.buffer.getUint8(this.pos++);\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += this.width % 4;\n  }\n};\n\n/**\n * add 32bit decode func\n * @author soubok\n */\nBmpDecoder.prototype.bit32 = function() {\n  //BI_BITFIELDS\n  if (this.compress == 3) {\n    this.maskRed = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskGreen = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.maskBlue = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    this.mask0 = this.buffer.getUint32(this.pos, true);\n    this.pos += 4;\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < this.width; x++) {\n        //Little Endian rgba\n        var alpha = this.buffer.getUint8(this.pos++);\n        var blue = this.buffer.getUint8(this.pos++);\n        var green = this.buffer.getUint8(this.pos++);\n        var red = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        this.data[location] = alpha;\n        this.data[location + 1] = blue;\n        this.data[location + 2] = green;\n        this.data[location + 3] = red;\n      }\n    }\n  } else {\n    for (var y = this.height - 1; y >= 0; y--) {\n      var line = this.bottom_up ? y : this.height - 1 - y;\n      for (var x = 0; x < this.width; x++) {\n        //Little Endian argb\n        var blue = this.buffer.getUint8(this.pos++);\n        var green = this.buffer.getUint8(this.pos++);\n        var red = this.buffer.getUint8(this.pos++);\n        var alpha = this.buffer.getUint8(this.pos++);\n        var location = line * this.width * 4 + x * 4;\n        this.data[location] = alpha;\n        this.data[location + 1] = blue;\n        this.data[location + 2] = green;\n        this.data[location + 3] = red;\n      }\n    }\n  }\n};\n\nBmpDecoder.prototype.getData = function() {\n  return this.data;\n};\n","import PNG from './png.js';\nimport BMP from './bmp.js';\nimport { toRGB332 } from './colour.js';\n\nconst p = 16; // 16x16 sprite\n\nconst pngSig = [137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82];\n\nconst bmpSig = [66, 77];\n\nexport function decode(file) {\n  const { isPNG, isBMP } = detect(file);\n\n  if (isPNG) {\n    return png(file);\n  }\n\n  if (isBMP) {\n    return bmp(file);\n  }\n\n  return file;\n}\n\nexport function detect(file) {\n  let isPNG = true;\n  let isBMP = true;\n  for (let i = 0; i < Math.max(pngSig.length, bmpSig.length); i++) {\n    if (file[i] !== bmpSig[i]) {\n      isBMP = false;\n    }\n    if (file[i] !== pngSig[i]) {\n      isPNG = false;\n      break;\n    }\n  }\n\n  return { isPNG, isBMP };\n}\n\nexport function bmp(file) {\n  const bmp = new BMP(file);\n  const pixels = bmp.data;\n  return transform({ pixels, width: bmp.width, alphaFirst: true });\n}\n\nexport function pngNoTransformFile(file) {\n  const png = new PNG(file);\n  const pixels = png.decode();\n  const res = [];\n  for (let i = 0; i < pixels.length; i += 4) {\n    const [r, g, b, a] = [\n      pixels[i + 0],\n      pixels[i + 1],\n      pixels[i + 2],\n      pixels[i + 3],\n    ];\n\n    if (a === 0 || r === undefined) {\n      // transparent\n      res.push(0xe3);\n    } else {\n      res.push(toRGB332(r, g, b));\n    }\n  }\n\n  return { data: new Uint8Array(res), png };\n}\n\nexport function png(file) {\n  const png = new PNG(file);\n  const pixels = png.decode();\n  return transform({ pixels, width: png.width });\n}\n\nexport function transform({ pixels, width, alphaFirst = false }) {\n  // let tmp = null;\n\n  const res = [];\n\n  let [ri, gi, bi, ai] = [0, 1, 2, 3];\n  if (alphaFirst) {\n    [ai, bi, gi, ri] = [0, 1, 2, 3];\n  }\n\n  let n = 1;\n\n  if (width / 16 === ((width / 16) | 0)) {\n    n = width / 16;\n  } else {\n    // throw new Error('unsupported dimension');\n    const d = width % 16;\n    n = (width + (16 - d)) / 16;\n  }\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    const row = ((i / 4 / p) | 0) % p;\n    const offset = (i / 4) % p;\n    const spriteIndex = (i / 4 / (p * p)) | 0;\n\n    const spriteRow = ((spriteIndex / n) | 0) * (p * p * n);\n    let dataIndex = spriteRow;\n    dataIndex += spriteIndex * p;\n    dataIndex += row * width;\n    dataIndex += offset;\n    dataIndex *= 4;\n\n    // NOTE I don't fully understand how this works, but it does after\n    // lots of testing...\n    dataIndex -= p * 4 * ((spriteIndex / n) | 0) * n;\n\n    const [r, g, b, a] = [\n      pixels[dataIndex + ri],\n      pixels[dataIndex + gi],\n      pixels[dataIndex + bi],\n      pixels[dataIndex + ai],\n    ];\n\n    if (a === 0 || r === undefined) {\n      // transparent\n      res.push(0xe3);\n    } else {\n      res.push(toRGB332(r, g, b));\n    }\n  }\n\n  return new Uint8Array(res);\n}\n","class ArrayNode extends Array {\n  constructor() {\n    super();\n\n    // allow setting any node property via proxy\n    return new Proxy(this, {\n      set(obj, prop, value) {\n        const type = obj[0];\n\n        if (type && prop in type) {\n          return obj.filter(el => (el[prop] = value));\n        }\n\n        const res = (this[prop] = value);\n        return res;\n      },\n    });\n  }\n\n  on(event, handler, options) {\n    return this.filter(el => el.addEventListener(event, handler, options));\n  }\n\n  emit(type, data) {\n    const event = new Event(type, { data });\n    return this.filter(el => el.dispatchEvent(event));\n  }\n}\n\nexport const $ = (s, ctx = document) => {\n  const res = ctx.querySelectorAll(s);\n\n  if (res.length === 0) {\n    console.warn(`${s} zero results`);\n  }\n\n  return ArrayNode.from(res);\n};\n","import { rgbFromIndex, transparent, toRGB332 } from './lib/colour.js';\n\nconst pixelLength = 256;\nconst width = 16;\n\nexport const colourTable = Array.from({ length: pixelLength }, (_, i) => {\n  return rgbFromIndex(i);\n});\n\nexport function getCoords(e, w = width, h = w) {\n  const rect = e.target.getBoundingClientRect();\n  const x = ((e.clientX - rect.left) / w) | 0; //x position within the element.\n  const y = ((e.clientY - rect.top) / h) | 0; //y position within the element.\n  const index = xyToIndex({ x, y, w: 16 });\n  return { x, y, index };\n}\n\nexport function emptyCanvas(ctx) {\n  const blankData = new Uint8ClampedArray(\n    ctx.canvas.width * ctx.canvas.height * 4\n  );\n  // blankData.fill(transparent);\n  for (let i = 0; i < blankData.length; i += 4) {\n    blankData[i + 0] = 0;\n    blankData[i + 1] = 0;\n    blankData[i + 2] = 0;\n    blankData[i + 3] = 0;\n  }\n\n  const blank = new ImageData(blankData, ctx.canvas.width, ctx.canvas.height);\n  ctx.putImageData(blank, 0, 0);\n}\n\nexport function xyToIndex({ x, y, w = width }) {\n  if (x < 0) {\n    return null;\n  }\n\n  if (x >= w) {\n    return null;\n  }\n\n  if (y >= w) {\n    return null;\n  }\n\n  return w * y + x;\n}\n\nexport class Sprite {\n  scale = 16;\n\n  /**\n   *\n   * @param {Uint8Array} pixels\n   */\n  constructor(pixels) {\n    this.pixels = pixels;\n    this.ctx = document.createElement('canvas').getContext('2d');\n    this.ctx.canvas.width = this.ctx.canvas.height = width;\n    this.render();\n  }\n\n  get canvas() {\n    return this.ctx.canvas;\n  }\n\n  pget({ index = null, x = null, y }) {\n    if (index === null) {\n      index = xyToIndex({ x, y });\n    }\n\n    return this.pixels[index];\n  }\n\n  pset({ index = null, x = null, y, value }) {\n    if (index === null) {\n      index = xyToIndex({ x, y });\n    }\n\n    this.pixels[index] = value;\n    this.render();\n  }\n\n  clear() {\n    this.pixels.fill(transparent);\n    this.render();\n  }\n\n  canvasToPixels() {\n    const imageData = this.ctx.getImageData(0, 0, width, width);\n    for (let i = 0; i < imageData.data.length / 4; i++) {\n      const [r, g, b, a] = imageData.data.slice(i * 4, i * 4 + 4);\n\n      if (a === 0) {\n        this.pixels[i] = transparent;\n      } else {\n        this.pixels[i] = toRGB332(r, g, b);\n      }\n    }\n  }\n\n  render(dx = 0, dy = 0) {\n    const pixels = this.pixels;\n\n    // imageData is the internal copy\n    const imageData = this.ctx.getImageData(0, 0, width, width);\n\n    for (let i = 0; i < pixels.length; i++) {\n      let index = pixels[i];\n      const { r, g, b, a } = colourTable[index];\n      imageData.data[i * 4 + 0] = r;\n      imageData.data[i * 4 + 1] = g;\n      imageData.data[i * 4 + 2] = b;\n      imageData.data[i * 4 + 3] = a * 255;\n    }\n\n    if (dx !== 0 || dy !== 0) {\n      emptyCanvas(this.ctx);\n    }\n\n    this.ctx.putImageData(\n      imageData,\n      dx,\n      dy,\n      0,\n      0,\n      imageData.width,\n      imageData.height\n    );\n  }\n\n  // we always paint square…\n  paint(ctx, dx = 0, dy = 0, w = null) {\n    if (w === null) {\n      w = ctx.canvas.width;\n    }\n    // clear, set to jaggy and scale to canvas\n    ctx.clearRect(dx, dy, w, w);\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(\n      this.ctx.canvas,\n      0,\n      0,\n      this.ctx.canvas.width,\n      this.ctx.canvas.height,\n      dx,\n      dy,\n      w,\n      w\n    );\n  }\n}\n\nexport default class SpriteSheet {\n  sprites = [];\n  previewCtx = [];\n  history = [];\n  ctx = null;\n  _undoPtr = 0;\n  _current = 0;\n  length = 0;\n  clipboard = null;\n  hooks = [];\n\n  constructor(data, ctx, scale = 2) {\n    this.data = new Uint8Array(pixelLength * 4 * 16);\n    this.data.set(data.slice(0, pixelLength * 4 * 16), 0);\n\n    for (let i = 0; i < this.data.length; i += pixelLength) {\n      const spriteData = this.data.subarray(i, i + pixelLength);\n      const sprite = new Sprite(spriteData);\n      this.sprites.push(sprite);\n\n      const ctx = document.createElement('canvas').getContext('2d');\n      ctx.canvas.width = ctx.canvas.height = width * scale;\n      this.previewCtx.push(ctx);\n      sprite.paint(ctx);\n    }\n\n    this.snapshot();\n    this.length = data.length / pixelLength;\n    this._current = 0;\n    this.scale = scale;\n    this.ctx = ctx;\n\n    window.sprites = this;\n  }\n\n  getCoords(e) {\n    return getCoords(e, this.scale * 16);\n  }\n\n  hook(callback) {\n    this.hooks.push(callback);\n  }\n\n  trigger() {\n    this.hooks.forEach(callback => callback());\n  }\n\n  copy() {\n    // FIXME support partial copy/clip //{ x = 0, y = 0, w = width, h = width }\n    this.clipboard = new Sprite(new Uint8Array(this.sprite.pixels));\n  }\n\n  paste() {\n    if (this.clipboard.pixels) this.set(this.clipboard.pixels);\n  }\n\n  set(data) {\n    // FIXME support partial paste\n    this.snapshot();\n    this.data.set(data, this._current * pixelLength);\n    this.rebuild(this._current);\n    this.paint();\n  }\n\n  snapshot() {\n    this.history.splice(this._undoPtr + 1);\n    this.history.push(new Uint8Array(this.data));\n    this._undoPtr = this.history.length - 1;\n    console.log(`history: ${this.history.length}`);\n  }\n\n  undo() {\n    const data = this.history[this._undoPtr];\n\n    if (!data) {\n      return;\n    }\n    this._undoPtr--;\n\n    this.data = data;\n    for (let i = 0; i < this.length; i++) {\n      this.rebuild(i);\n    }\n    this.paint();\n  }\n\n  rebuild(i) {\n    if (i < 0 || i > this.length) {\n      return; // noop\n    }\n    const sprite = new Sprite(\n      this.data.subarray(i * pixelLength, i * pixelLength + pixelLength)\n    );\n    this.sprites[i] = sprite;\n    sprite.paint(this.previewCtx[i]);\n    this.trigger();\n  }\n\n  getPreviewElements() {\n    return this.previewCtx.map(_ => _.canvas);\n  }\n\n  canvasToPixels() {\n    this.sprites[this._current].canvasToPixels();\n  }\n\n  pset(coords, value) {\n    this.sprites[this._current].pset({ ...coords, value });\n    this.trigger();\n    return true;\n  }\n\n  pget(args) {\n    return this.sprites[this._current].pget(args);\n  }\n\n  get current() {\n    return this._current;\n  }\n\n  get sprite() {\n    return this.sprites[this._current];\n  }\n\n  set current(value) {\n    this._current = value;\n    this.paint();\n  }\n\n  get(index) {\n    return this.sprites[index];\n  }\n\n  clear() {\n    this.snapshot();\n    this.sprites[this._current].clear();\n    this.trigger();\n    this.paint();\n  }\n\n  renderPreview(i) {\n    this.sprites[i].draw(this.previewCtx[i]);\n  }\n\n  paint(i = this._current) {\n    const sprite = this.sprites[i];\n    sprite.paint(this.ctx);\n    sprite.paint(this.previewCtx[this._current]);\n\n    this.getPreviewElements().map(_ => _.classList.remove('focus'));\n    this.previewCtx[this._current].canvas.classList.add('focus');\n  }\n}\n","const noop = () => {};\n\nexport default function trackDown(\n  el,\n  { handler = noop, move = noop, start = noop, end = noop }\n) {\n  let down = false;\n\n  el.addEventListener('mouseout', () => (down = false));\n  el.addEventListener('click', handler);\n  el.addEventListener(\n    'mousedown',\n    e => {\n      start(e);\n      down = true;\n    },\n    true\n  );\n  el.addEventListener(\n    'mouseup',\n    e => {\n      down = false;\n      end(e);\n    },\n    true\n  );\n  el.addEventListener(\n    'mousemove',\n    e => {\n      if (down) {\n        handler(e);\n      } else {\n        move(e);\n      }\n    },\n    true\n  );\n\n  return () => {\n    down = false;\n  };\n}\n","import { $ } from '../lib/$.js';\nimport { colourTable, emptyCanvas, getCoords } from './SpriteSheet.js';\nimport trackDown from '../lib/track-down.js';\nimport { toRGB332 } from './lib/colour.js';\n\nexport default class ImageWindow {\n  zoomFactor = 0;\n  x = 0;\n  y = 0;\n\n  constructor(data, ctx, width, height) {\n    this.ctx = ctx;\n    this.__ctx = document.createElement('canvas').getContext('2d');\n    this.__ctx.canvas.width = width;\n    this.__ctx.canvas.height = height;\n    this.parent = ctx.canvas.parentNode;\n    this.status = $('#png-status');\n\n    trackDown(ctx.canvas, {\n      start: (e) => this.start(e),\n      handler: (e) => this.pan(e),\n      end: (e) => this.end(e),\n    });\n\n    this.render(this.__ctx, data);\n    this.zoom = 0;\n  }\n\n  get zoom() {\n    return this.zoomFactor;\n  }\n\n  set zoom(value) {\n    const preZoomDelta = this.zoomDelta;\n    this.zoomFactor = value;\n    if (this.zoomFactor > 4) {\n      this.zoomFactor = 4;\n    }\n\n    if (this.zoomFactor < -3) {\n      this.zoomFactor = -3;\n    }\n\n    this.parent.dataset.zoom = this.zoomFactor;\n\n    const delta = this.zoomDelta - preZoomDelta;\n    this.x += delta;\n    this.y += delta;\n\n    this.paint();\n  }\n\n  get pxScale() {\n    if (this.zoomFactor >= 3) {\n      return 1;\n    }\n    return 16 / (this.zoomFactor + 1) / 2;\n  }\n\n  get zoomDelta() {\n    return (0xff >> (this.zoomFactor + 3)) << 3;\n  }\n\n  coords(x = this.x, y = this.y) {\n    const delta = this.zoomDelta;\n    return {\n      x: Math.abs(x - delta),\n      y: Math.abs(y - delta),\n    };\n  }\n\n  start(event) {\n    const coords = getCoords(event, this.pxScale);\n    this.parent.dataset.dragging = true;\n    this._coords = {\n      x: coords.x,\n      y: coords.y,\n      curX: this.x,\n      curY: this.y,\n    };\n  }\n\n  end(event) {\n    this.parent.dataset.dragging = false;\n    const scale = this.pxScale;\n    const coords = getCoords(event, scale);\n    this.x = (this._coords.curX + (coords.x - this._coords.x) * scale) | 0;\n    this.y = (this._coords.curY + (coords.y - this._coords.y) * scale) | 0;\n\n    this.paint();\n  }\n\n  shiftX(neg = false, n = 1) {\n    this.x += neg ? -n : n;\n    this.paint();\n  }\n\n  shiftY(neg = false, n = 1) {\n    this.y += neg ? -n : n;\n    this.paint();\n  }\n\n  pan(event) {\n    if (event.type === 'click') {\n      return;\n    }\n    const scale = this.pxScale;\n    const coords = getCoords(event, scale);\n    const x = this.x + (coords.x - this._coords.x) * scale;\n    const y = this.y + (coords.y - this._coords.y) * scale;\n    this.paint(x | 0, y | 0);\n  }\n\n  copy() {\n    const data = new Uint8Array(16 * 16);\n    const ctx = this.__ctx;\n\n    const { x, y } = this.coords();\n\n    const imageData = ctx.getImageData(x, y, 16, 16);\n\n    for (let i = 0; i < data.length; i++) {\n      const [r, g, b, a] = imageData.data.slice(i * 4, i * 4 + 4);\n      const index = toRGB332(r, g, b);\n      if (index === 0xe3 || a === 0) {\n        data[i] = 0xe3;\n      } else {\n        data[i] = index;\n      }\n    }\n\n    if (this.oncopy) this.oncopy(data);\n  }\n\n  paint(x = this.x, y = this.y) {\n    const zoom =\n      this.zoomFactor < 0\n        ? 512 << (this.zoomFactor * -1)\n        : 512 >> this.zoomFactor;\n\n    const localCords = this.coords(x, y);\n    this.status.innerHTML = `Zoom: ${5 - this.zoomFactor}:1<br>X/Y: ${\n      localCords.x\n    }/${localCords.y}`;\n    const ctx = this.ctx;\n    emptyCanvas(ctx);\n    const w = ctx.canvas.width;\n    ctx.clearRect(0, 0, w, w);\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(this.__ctx.canvas, -x, -y, zoom, zoom, 0, 0, w, w);\n  }\n\n  render(ctx = this.ctx, pixels) {\n    const imageData = ctx.getImageData(\n      0,\n      0,\n      ctx.canvas.width,\n      ctx.canvas.height\n    );\n\n    for (let i = 0; i < imageData.data.length / 4; i++) {\n      let index = pixels[i];\n      const { r, g, b, a } = colourTable[index];\n\n      imageData.data[i * 4 + 0] = r;\n      imageData.data[i * 4 + 1] = g;\n      imageData.data[i * 4 + 2] = b;\n      imageData.data[i * 4 + 3] = a * 255;\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n  }\n}\n","import { transparent } from './lib/colour.js';\n\nexport default class ColourPicker {\n  transparent = transparent;\n  _index = 0;\n  _history = [];\n\n  constructor(size, target) {\n    this.size = size;\n\n    const html = Array.from({ length: size }, (_, i) => {\n      return `<div title=\"Key ${i + 1}\" data-id=${i} id=\"picker-${i}\"></div>`;\n    }).join('');\n    target.innerHTML = html;\n\n    target.addEventListener('mousedown', e => {\n      if (e.target.dataset.id) {\n        this.index = e.target.dataset.id;\n      }\n    });\n\n    this.container = target;\n    this.history = [0, 255, this.transparent];\n    this.index = 0;\n  }\n\n  set value(index) {\n    const colour = parseInt(index, 10);\n\n    if (colour === this._history[0]) {\n      this.index = 0;\n      return;\n    }\n\n    this._history.unshift(colour);\n    this.history = this._history.slice(0, this.size);\n    this.index = 0;\n  }\n\n  set history(values) {\n    this._history = values;\n    values.forEach((value, i) => {\n      document.querySelector('#picker-' + i).className = 'c-' + value;\n    });\n  }\n\n  get value() {\n    return this._history[this._index];\n  }\n\n  set index(value) {\n    value = parseInt(value, 10);\n    this._index = value;\n    this.container.dataset.selected = value + 1;\n  }\n}\n","import { $ } from '../lib/$.js';\nimport { getCoords } from './SpriteSheet.js';\n\nexport default class Tool {\n  types = ['brush', 'fill', 'erase', 'pan'];\n  _selected = 'brush';\n  state = {\n    target: null,\n    index: null,\n  };\n\n  constructor({ type = 'brush', colour }) {\n    this.colour = colour;\n\n    $('#tool-types button').on('click', e => {\n      this.selected = e.target.dataset.action;\n    });\n\n    const shortcuts = this.types.map(_ => _[0]);\n\n    document.body.addEventListener('keydown', e => {\n      const k = e.key;\n      const i = shortcuts.indexOf(k);\n      if (i > -1) {\n        this.selected = this.types[i];\n      }\n    });\n\n    this.selected = type;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(value) {\n    this._selected = value;\n    this.state = { index: null, target: null };\n\n    $('#tool-types button').className = '';\n    $(`#tool-types button[data-action=\"${value}\"]`).className = 'selected';\n    document.documentElement.dataset.tool = value;\n  }\n\n  shift(shift) {\n    this.state.index = null;\n    if (shift) {\n      if (this._last !== 'erase') this._last = this.selected;\n      this.selected = 'erase';\n    } else if (this._last) {\n      this.selected = this._last;\n      this._last = null;\n    }\n  }\n\n  pan(coords, sprites) {\n    const sprite = sprites.sprite;\n    const ctx = sprites.ctx;\n    const x = coords.x - this._coords.x;\n    const y = coords.y - this._coords.y;\n\n    sprite.render(x, y);\n    sprite.paint(ctx);\n  }\n\n  fill(sprites, coords, source, target) {\n    if (!coords || coords.index === null) return;\n\n    const value = sprites.pget(coords);\n\n    if (value !== source || value === target) {\n      return;\n    }\n\n    this.paint(sprites, coords, target);\n\n    const { x, y } = coords;\n\n    this.fill(sprites, { x: x - 1, y }, source, target);\n    this.fill(sprites, { x: x + 1, y }, source, target);\n    this.fill(sprites, { x, y: y - 1 }, source, target);\n    this.fill(sprites, { x, y: y + 1 }, source, target);\n  }\n\n  paint(sprites, coords, target) {\n    return sprites.pset(coords, target);\n  }\n\n  start(event) {\n    const coords = getCoords(event);\n    this._coords = coords;\n  }\n\n  end() {\n    // this._coords = null;\n  }\n\n  apply(event, sprites) {\n    const coords = getCoords(event, 32, 32);\n    let target = this.colour.value;\n\n    if (this.selected === 'erase') {\n      target = this.colour.transparent;\n    }\n\n    // if nothing has changed, don't do the work\n    if (\n      event.type === this.state.event &&\n      coords.index === this.state.index &&\n      target === this.state.target\n    ) {\n      return;\n    }\n    this.state.index = coords.index;\n    this.state.target = target;\n    this.state.event = event.type;\n\n    if (this.selected === 'pan') {\n      if (event.type === 'click' && this._coords.index !== coords.index) {\n        // this is a release\n        // read from the canvas and put into pixels\n        sprites.snapshot();\n        sprites.canvasToPixels();\n        sprites.rebuild(sprites.current);\n        sprites.paint();\n        return;\n      }\n\n      if (!this._coords) {\n        return; // noop\n      }\n\n      this.pan(coords, sprites);\n\n      return;\n    }\n\n    if (this.selected === 'fill') {\n      // now find surrounding pixels of the same colour\n      this.fill(sprites, coords, sprites.pget(coords), target);\n    } else {\n      this.paint(sprites, coords, target);\n    }\n\n    // update canvas\n    if (event.type === 'click') sprites.snapshot();\n    sprites.paint();\n  }\n}\n","// import { rgbFromIndex, transparent, toRGB332 } from './lib/colour.js';\nimport { xyToIndex } from './SpriteSheet.js';\nimport { $ } from '../lib/$.js';\nimport trackDown from '../lib/track-down.js';\n\nconst dummySpriteSheet = {\n  get() {\n    return dummySpriteSheet;\n  },\n\n  paint() {},\n};\n\nexport function getCoords(e, w, size) {\n  const rect = e.target.getBoundingClientRect();\n  const x = ((e.clientX - rect.left) / size) | 0; //x position within the element.\n  const y = ((e.clientY - rect.top) / size) | 0; //y position within the element.\n  const index = xyToIndex({ x, y, w });\n  return { x, y, index };\n}\n\nconst sizes = new Map([\n  [16, { bank: 16 * 12, w: 16, h: 12 }],\n  [8, { bank: 32 * 24, w: 32, h: 24 }],\n]);\n\nexport default class TileMap {\n  scale = 3;\n  _sprites = null;\n  _tmp = null;\n\n  constructor({ size = 16, sprites }) {\n    const scale = this.scale;\n    this.size = size;\n    const { bank, w, h } = sizes.get(size);\n    this.width = w;\n    this.height = h;\n\n    this.bank = new Uint8Array(bank);\n    this.bank.fill(1024 / size - 1);\n\n    this.ctx = document.createElement('canvas').getContext('2d');\n\n    const el = this.ctx.canvas;\n    el.style.maxWidth = `${w * size * scale}px`;\n\n    el.width = w * size * scale;\n    el.height = h * size * scale;\n\n    const cancel = trackDown(el, {\n      handler: e => {\n        const { index } = getCoords(e, this.width, this.size * this.scale);\n        this.set(index);\n        this._tmp = null;\n        this.paint();\n      },\n      end: e => this.hover(e),\n    });\n\n    el.addEventListener('mouseout', () => {\n      cancel();\n      this.clearHover();\n    });\n\n    this.sprites = sprites;\n    this.active = true;\n  }\n\n  set active(value) {\n    $(`.tile-controls input[name=\"size\"][value=\"${this.size}\"]`).checked = true;\n    $(`.tile-controls input[name=\"width\"]`).value = this.width;\n    $(`.tile-controls input[name=\"height\"]`).value = this.height;\n  }\n\n  set sprites(sprites) {\n    this._sprites = sprites || dummySpriteSheet;\n    if (sprites) sprites.hook(() => this.paint());\n    this.paint();\n  }\n\n  get sprites() {\n    return this._sprites;\n  }\n\n  getXY = i => {\n    const x = i % this.width;\n    const y = (i / this.width) | 0;\n\n    return { x, y };\n  };\n\n  set(index) {\n    this.bank[index] = this.sprites.current;\n  }\n\n  clearHover() {\n    if (this._tmp !== null) {\n      const index = this._tmp;\n      const { x, y } = this.getXY(index);\n      // if (this.bank[index] === -1) {\n      //   this.ctx.clearRect(\n      //     x * this.size * this.scale,\n      //     y * this.size * this.scale,\n      //     this.size * this.scale,\n      //     this.size * this.scale\n      //   );\n      // } else {\n      const sprite = this.sprites.get(this.bank[index]);\n\n      sprite.paint(\n        this.ctx,\n        x * this.size * this.scale,\n        y * this.size * this.scale,\n        this.size * this.scale,\n        false\n      );\n      // }\n      this._tmp = null;\n    }\n  }\n\n  hover(e) {\n    const { index, x, y } = getCoords(e, this.width, this.size * this.scale);\n\n    if (this._tmp === index) {\n      return;\n    }\n\n    this.clearHover();\n\n    this._tmp = index;\n    this.sprites.sprite.paint(\n      this.ctx,\n      x * this.size * this.scale,\n      y * this.size * this.scale,\n      this.size * this.scale,\n      false\n    );\n  }\n\n  paint() {\n    for (let i = 0; i < this.bank.length; i++) {\n      // if (this.bank[i] > -1) {\n      const { x, y } = this.getXY(i);\n      const sprite = this.sprites.get(this.bank[i]);\n      sprite.paint(\n        this.ctx,\n        x * this.size * this.scale,\n        y * this.size * this.scale,\n        this.size * this.scale,\n        false\n      );\n      // }\n    }\n  }\n}\n","// https://en.wikipedia.org/wiki/ZX_Spectrum_character_set\nexport default {\n  // 0x3a: ':',\n  // 0x2a: '*',\n  0x87: 'PEEK$',\n  0x88: 'REG',\n  0x89: 'DPOKE',\n  0x8a: 'DPEEK',\n  0x8b: 'MOD',\n  0x8c: '<<',\n  0x8d: '>>',\n  0x8e: 'UNTIL',\n  0x8f: 'ERROR',\n  0x90: 'ON',\n  0x91: 'DEFPROC',\n  0x92: 'ENDPROC',\n  0x93: 'PROC',\n  0x94: 'LOCAL',\n  0x95: 'DRIVER',\n  0x96: 'WHILE',\n  0x97: 'REPEAT',\n  0x98: 'ELSE',\n  0x99: 'REMOUNT',\n  0x9a: 'BANK',\n  0x9b: 'TILE',\n  0x9c: 'LAYER',\n  0x9d: 'PALETTE',\n  0x9e: 'SPRITE',\n  0x9f: 'PWD',\n  0xa0: 'CD',\n  0xa1: 'MKDIR',\n  0xa2: 'RMDIR',\n  0xa3: 'SPECTRUM',\n  0xa4: 'PLAY',\n  0xa5: 'RND',\n  0xa6: 'INKEY$',\n  0xa7: 'PI',\n  0xa8: 'FN',\n  0xa9: 'POINT',\n  0xaa: 'SCREEN$',\n  0xab: 'ATTR',\n  0xac: 'AT',\n  0xad: 'TAB',\n  0xae: 'VAL$',\n  0xaf: 'CODE',\n  0xb0: 'VAL',\n  0xb1: 'LEN',\n  0xb2: 'SIN',\n  0xb3: 'COS',\n  0xb4: 'TAN',\n  0xb5: 'ASN',\n  0xb6: 'ACS',\n  0xb7: 'ATN',\n  0xb8: 'LN',\n  0xb9: 'EXP',\n  0xba: 'INT',\n  0xbb: 'SQR',\n  0xbc: 'SGN',\n  0xbd: 'ANS',\n  0xbe: 'PEEK',\n  0xbf: 'IN',\n  0xc0: 'USR',\n  0xc1: 'STR$',\n  0xc2: 'CHR$',\n  0xc3: 'NOT',\n  0xc4: 'BIN',\n  0xc5: 'OR',\n  0xc6: 'AND',\n  0xc7: '<=',\n  0xc8: '>=',\n  0xc9: '<>',\n  0xca: 'LINE',\n  0xcb: 'THEN',\n  0xcc: 'TO',\n  0xcd: 'STEP',\n  0xce: 'DEF FN',\n  0xcf: 'CAT',\n  0xd0: 'FORMAT',\n  0xd1: 'MOVE',\n  0xd2: 'ERASE',\n  0xd3: 'OPEN#',\n  0xd4: 'CLOSE#',\n  0xd5: 'MERGE',\n  0xd6: 'VERIFY',\n  0xd7: 'BEEP',\n  0xd8: 'CIRCLE',\n  0xd9: 'INK',\n  0xda: 'PAPER',\n  0xdb: 'FLASH',\n  0xdc: 'BRIGHT',\n  0xdd: 'INVERSE',\n  0xde: 'OVER',\n  0xdf: 'OUT',\n  0xe0: 'LPRINT',\n  0xe1: 'LLIST',\n  0xe2: 'STOP',\n  0xe3: 'READ',\n  0xe4: 'DATA',\n  0xe5: 'RESTORE',\n  0xe6: 'NEW',\n  0xe7: 'BORDER',\n  0xe8: 'CONTINUE',\n  0xe9: 'DIM',\n  0xea: 'REM',\n  0xeb: 'FOR',\n  0xec: 'GO TO',\n  0xed: 'GO SUB',\n  0xee: 'INPUT',\n  0xef: 'LOAD',\n  0xf0: 'LIST',\n  0xf1: 'LET',\n  0xf2: 'PAUSE',\n  0xf3: 'NEXT',\n  0xf4: 'POKE',\n  0xf5: 'PRINT',\n  0xf6: 'PLOT',\n  0xf7: 'RUN',\n  0xf8: 'SAVE',\n  0xf9: 'RANDOMIZE',\n  0xfa: 'IF',\n  0xfb: 'CLS',\n  0xfc: 'DRAW',\n  0xfd: 'CLEAR',\n  0xfe: 'RETURN',\n  0xff: 'COPY',\n};\n","export const toBinary = (n, size = 8) => {\n  if (n < 0) {\n    return Array.from({ length: size }, (_, i) => {\n      return ((n >> i) & 1) === 1 ? 1 : 0;\n    })\n      .reverse()\n      .join('');\n  }\n  return n.toString(2).padStart(size, 0);\n};\n\nexport const toHex = (n, size = 8) => {\n  if (n < 0) {\n    n = parseInt(toBinary(n, size), 2);\n  }\n  return n\n    .toString(16)\n    .padStart(size / (8 / 2), 0)\n    .toUpperCase();\n};\n\n// https://www.facebook.com/groups/ZXNextBasic/permalink/792585537934454/?comment_id=792727721253569\n// by Daniel A. Nagy originally in C, bless his socks\nexport const floatToZX = input => {\n  const sign = input < 0;\n  const out = new Uint8Array(5);\n\n  if (sign) input = -input;\n\n  out[0] = 0x80;\n  while (input < 0.5) {\n    input *= 2;\n    out[0]--;\n  }\n\n  while (input >= 1) {\n    input *= 0.5;\n    out[0]++;\n  }\n\n  input *= 0x100000000;\n  input += 0.5;\n\n  let mantissa = input;\n\n  out[1] = mantissa >> 24;\n  mantissa &= 0xffffff;\n  out[2] = mantissa >> 16;\n  mantissa &= 0xffff;\n  out[3] = mantissa >> 8;\n  mantissa &= 0xff;\n  out[4] = mantissa;\n  if (!sign) out[1] &= 0x7f;\n\n  return out;\n};\n\nexport const zxToFloat = source => {\n  const view = new DataView(source.buffer);\n  const exp = view.getUint8(0) - 128;\n  let mantissa = view.getUint32(1, false);\n  let sign = mantissa >>> 31 ? -1 : 1;\n\n  mantissa = mantissa | 0x80000000;\n  let frac = 0;\n  for (let i = 0; i < 32; i++) {\n    if ((mantissa >> i) & 1) {\n      const v = Math.pow(2, -(32 - i));\n      frac += v;\n    }\n  }\n\n  frac = frac.toFixed(8);\n\n  const value = frac * Math.pow(2, exp);\n  return value * sign;\n};\n","export const pattern =\n  '([aAZbBhHcCWqQnNvVuUx@]|[sSlLiI][\\\\!><]?)(?:([\\\\d*]+)|(?:\\\\[(.*)\\\\]))?(?:\\\\$([a-zA-Z0-9_]+)\\\\b)?';\nexport const typeMap = {\n  x: { length: 1 },\n  b: { length: 1 },\n  //B: { length: 1, fn: 'Uint8', little: true }, // bit\n  // h: { length: 2, fn: 'Uint16' },\n  // H: { length: 2, fn: 'Uint16', little: true }, // nibble\n  c: { length: 1, fn: 'Int8', array: Int8Array }, // char == byte\n  C: { length: 1, fn: 'Uint8', array: Uint8Array },\n  a: { length: 1, fn: 'Uint8' }, // string with arbitrary, null padded\n  A: { length: 1, fn: 'Uint8' }, // string with arbitrary, space padded\n  s: { length: 2, fn: 'Int16', array: Int16Array },\n  S: { length: 2, fn: 'Uint16', array: Uint16Array },\n  i: { length: 4, fn: 'Int32', array: Int32Array },\n  I: { length: 4, fn: 'Uint32', array: Uint32Array },\n  l: { length: 8, fn: 'Int64' },\n  L: { length: 8, fn: 'Uint64' },\n  n: { length: 2, fn: 'Uint16', little: false },\n  N: { length: 4, fn: 'Uint32', little: false },\n  f: { length: 4, fn: 'Float32', array: Float32Array },\n  d: { length: 8, fn: 'Float64', array: Float64Array },\n};\n\nexport const decode = a => new TextDecoder().decode(a);\nexport const encode = a => new TextEncoder().encode(a);\n","import { encode, pattern, typeMap } from './lib.js';\n\nexport default function pack(template, data, offset = 0) {\n  if (ArrayBuffer.isView(data)) {\n    data = data.buffer;\n  }\n\n  const re = new RegExp(pattern, 'g');\n  let m = [];\n  let bytePtr = 0;\n  let little = false;\n\n  const firstChr = template[0];\n  const defaultLittle = firstChr === '<' ? true : false;\n\n  let templateCounter = -1;\n\n  let dataLength = 0;\n\n  while ((m = re.exec(template))) {\n    let length = null;\n    if (typeMap[m[2]]) {\n      length = typeMap[m[2]].length;\n    } else {\n      length = parseInt(m[2] || 1);\n    }\n\n    let c = m[1];\n\n    if (c.length === 2) {\n      little = c[1] === '<';\n      c = c[0];\n    }\n\n    const type = typeMap[c];\n\n    if (!type) {\n      throw new Error(`unsupported type \"${c}\"`);\n    }\n\n    const size = type.length;\n    let end = c === 'b' ? length / 8 : size * length;\n\n    if (isNaN(length)) {\n      end = data.byteLength - offset;\n    }\n\n    dataLength += end; // ?\n  }\n\n  const result = new DataView(new ArrayBuffer(dataLength));\n\n  while ((m = re.exec(template))) {\n    templateCounter++;\n    const index = m[4] || templateCounter;\n    let little = defaultLittle;\n    let length = null;\n    if (typeMap[m[2]]) {\n      length = typeMap[m[2]].length;\n    } else {\n      length = parseInt(m[2] || 1);\n    }\n\n    let c = m[1];\n\n    if (c.length === 2) {\n      little = c[1] === '<';\n      c = c[0];\n    }\n\n    const type = typeMap[c];\n\n    if (!type) {\n      throw new Error(`unsupported type \"${c}\"`);\n    }\n\n    // forced endianness\n    if (type.little !== undefined) {\n      little = type.little;\n    }\n\n    const size = type.length;\n    let end = c === 'b' ? 1 : size * length;\n\n    if (isNaN(length)) {\n      end = data.byteLength - offset;\n    }\n\n    if (offset + end > data.byteLength) {\n      // return result;\n      break;\n    }\n\n    if (c !== 'b') {\n      // reset the byte counter\n      bytePtr = 0;\n    }\n\n    switch (c) {\n      case 'b':\n        result.setUint8(\n          offset,\n          result.getUint8(offset) | (data[index] << (8 - bytePtr - length))\n        );\n\n        bytePtr += length;\n        if (bytePtr > 7) {\n          offset++;\n          bytePtr = 0;\n        }\n\n        break;\n      case 'x':\n        // x is skipped null bytes\n        templateCounter--;\n        offset += end;\n        result.setUint8(offset, 0x00);\n        break;\n      case 'a':\n      case 'A':\n        new Uint8Array(result.buffer, offset, end).set(encode(data[index]));\n        offset += end;\n        break;\n      default:\n        if (length > 1) {\n          for (let i = index; i < index + length; i++) {\n            result[`set${type.fn}`](offset, data[i], little);\n            templateCounter++;\n            offset += type.length;\n          }\n        } else {\n          result[`set${type.fn}`](offset, data[index], little);\n        }\n        offset += end;\n        break;\n    }\n  }\n\n  return new Uint8Array(result.buffer);\n}\n","import codes from './codes.js';\nimport { floatToZX } from '../lib/to.js';\nimport pack from '../lib/unpack/pack.js';\n\nexport const encode = (a) => new TextEncoder().encode(a);\n\nexport const calculateXORChecksum = (array) =>\n  Uint8Array.of(array.reduce((checksum, item) => checksum ^ item, 0))[0];\n\nconst opTable = Object.entries(codes).reduce(\n  (acc, [code, str]) => {\n    acc[str] = parseInt(code);\n    return acc;\n  },\n  {\n    GOTO: 0xec,\n  }\n);\n\n/*\nheader unpack template:\n<S$headerLength\nC$flagByte\nC$type\nA10$filename\nS$length\nS$autostart\nS$varStart\nC$checksum\n\nS$nextBlockLength\n\nC$blockType\nC……$data\nC$blockChecksum\n*/\n\nexport const tapHeader = (basic, filename = 'BASIC') => {\n  const autostart = new DataView(basic.buffer).getUint16(0, false);\n  const res = pack(\n    '<S$headerLength C$flagByte C$type A10$filename S$length S$p1 S$p2 C$checksum',\n    {\n      headerLength: 19,\n      flagByte: 0x0, // header\n      type: 0x00, // program\n      filename: filename.slice(0, 10), // 10 chrs max\n      length: basic.length,\n      p1: autostart,\n      p2: basic.length,\n      checksum: 0, // solved later\n    }\n  );\n\n  const checksum = calculateXORChecksum(res.slice(2, 20));\n\n  res[res.length - 1] = checksum;\n\n  return res;\n};\n\nexport const asTap = (basic, filename = 'tap dot js') => {\n  const header = tapHeader(basic, filename);\n  const dataType = 0xff;\n  const checksum = calculateXORChecksum(Array.from([dataType, ...basic]));\n  const tapData = new Uint8Array(header.length + basic.length + 2 + 2); // ? [header.length, basic.length]\n  tapData.set(header, 0); // put header in tap\n  new DataView(tapData.buffer).setUint16(header.length, basic.length + 2, true); // set follow block length (plus 2 for flag + checksum)\n\n  tapData[header.length + 2] = dataType; // data follows\n  tapData.set(basic, header.length + 3); // put basic binary in tap\n  tapData[tapData.length - 1] = checksum; // finish with 8bit checksum\n\n  return tapData;\n};\n\nexport const plus3DOSHeader = (\n  basic,\n  opts = { hType: 0, hOffset: basic.length - 128 }\n) => {\n  const { hType, hOffset } = opts;\n  const res = pack(\n    '< A8$sig C$eof C$issue C$version I$length C$hType S$hFileLength n$hLine S$hOffset',\n    {\n      sig: 'PLUS3DOS',\n      eof: 26,\n      issue: 1,\n      version: 0,\n      length: basic.length,\n      hType,\n      hFileLength: basic.length - 128,\n      hLine: 128,\n      hOffset,\n    }\n  );\n\n  const checksum = Array.from(res).reduce((acc, curr) => (acc += curr), 0);\n\n  const result = new Uint8Array(128);\n  result.set(res, 0);\n  result[127] = checksum;\n\n  return result;\n};\n\n// Based on (with huge mods) https://eli.thegreenplace.net/2013/07/16/hand-written-lexer-in-javascript-compared-to-the-regex-based-ones\nexport default class Lexer {\n  pos = 0;\n  buf = null;\n  bufLen = 0;\n\n  // Operator table, mapping operator -> token name\n  opTable = opTable;\n\n  // Initialize the Lexer's buffer. This resets the lexer's internal\n  // state and subsequent tokens will be returned starting with the\n  // beginning of the new buffer.\n  input(buf) {\n    this.pos = 0;\n    this.buf = buf;\n    this.bufLen = buf.length;\n  }\n\n  lines(lines) {\n    const data = lines.split('\\n').map((line) => this.line(line).basic);\n    const len = data.reduce((acc, curr) => (acc += curr.length), 0);\n    const res = new Uint8Array(len);\n    let offset = 0;\n    data.forEach((line) => {\n      res.set(line, offset);\n      offset += line.length;\n    });\n    return res;\n  }\n\n  // TODO arrays\n  line(line) {\n    this.input(line);\n    this.inLiteral = false;\n    let lineNumber = null;\n    let tokens = [];\n    let length = 0;\n\n    let token = null;\n    while ((token = this.token())) {\n      const { name, value } = token;\n      if (!lineNumber && name === 'NUMBER') {\n        lineNumber = parseInt(value, 10);\n        continue;\n      }\n\n      if (name === 'KEYWORD') {\n        length++;\n        tokens.push(token);\n        if (codes[value] === 'REM') {\n          token = this._processComment();\n          length += token.value.length;\n          tokens.push(token);\n        }\n        if (codes[value] === 'BIN') {\n          token = this._processBinary(); // ?\n          length += token.value.length;\n          tokens.push(token);\n        }\n      } else if (name === 'NUMBER') {\n        length += value.toString().length;\n        const { numeric } = token;\n        tokens.push(token);\n\n        if (\n          (numeric | 0) === numeric &&\n          numeric >= -65535 &&\n          numeric <= 65535\n        ) {\n          const view = new DataView(new ArrayBuffer(6));\n          view.setUint8(0, 0x0e);\n          view.setUint8(1, 0x00);\n          view.setUint8(2, numeric < 0 ? 0xff : 0x00);\n          view.setUint16(3, numeric, true);\n          tokens.push({\n            name: 'NUMBER_DATA',\n            value: new Uint8Array(view.buffer),\n          });\n          length += 6;\n        } else {\n          const value = new Uint8Array(6);\n          value[0] = 0x0e;\n          value.set(floatToZX(numeric), 1);\n          tokens.push({\n            name: 'NUMBER_DATA',\n            value,\n          });\n          length += 6;\n        }\n      } else {\n        length += value.toString().length;\n        tokens.push(token);\n      }\n    }\n\n    // add the end of carriage to the line\n    tokens.push({ name: 'KEYWORD', value: 0x0d });\n    length++;\n\n    const buffer = new DataView(new ArrayBuffer(length + 4));\n\n    buffer.setUint16(0, lineNumber, false); // line number is stored as big endian\n    buffer.setUint16(2, length, true);\n\n    let offset = 4;\n\n    tokens.forEach(({ name, value }) => {\n      if (name === 'KEYWORD') {\n        buffer.setUint8(offset, value);\n        offset++;\n      } else if (name === 'NUMBER_DATA') {\n        const view = new Uint8Array(buffer.buffer);\n        view.set(value, offset);\n        offset += value.length;\n      } else {\n        const v = value.toString();\n        const view = new Uint8Array(buffer.buffer);\n        view.set(encode(v), offset);\n        offset += v.length;\n      }\n    });\n\n    // console.log(tokens);\n\n    return {\n      basic: new Uint8Array(buffer.buffer),\n      lineNumber,\n      tokens,\n      length,\n    };\n  }\n\n  // Get the next token from the current buffer. A token is an object with\n  // the following properties:\n  // - name: name of the pattern that this token matched (taken from rules).\n  // - value: actual string value of the token.\n  // - pos: offset in the current buffer where the token starts.\n  //\n  // If there are no more tokens in the buffer, returns null. In case of\n  // an error throws Error.\n  token() {\n    this._skipNonTokens();\n    if (this.pos >= this.bufLen) {\n      return null;\n    }\n\n    // The char at this.pos is part of a real token. Figure out which.\n    var c = this.buf.charAt(this.pos);\n    const _next = this.buf.charAt(this.pos + 1);\n\n    // comments are slurped elsewhere\n\n    // Look it up in the table of operators\n    var op = this.opTable[c];\n    if (op !== undefined) {\n      return { name: 'KEYWORD', value: op, pos: this.pos++ };\n    } else {\n      // Not an operator - so it's the beginning of another token.\n      // if alpha or starts with 0 (which can only be binary)\n      if (\n        Lexer._isAlpha(c) ||\n        c === '' ||\n        (c === '.' && Lexer._isAlpha(_next))\n      ) {\n        return this._processIdentifier();\n      } else if (Lexer._isStartOfComment(c)) {\n        return this._processComment();\n      } else if (Lexer._isLiteralNumeric(c)) {\n        this.inLiteral = true;\n        return { name: 'SYMBOL', value: c, pos: this.pos++ };\n      } else if (c === '.' && Lexer._isDigit(_next)) {\n        return this._processNumber();\n      } else if (Lexer._isDigit(c)) {\n        return this._processNumber();\n      } else if (Lexer._isLiteralReset(c)) {\n        this.inLiteral = false;\n        return { name: 'SYMBOL', value: c, pos: this.pos++ };\n      } else if (Lexer._isStatementSep(c)) {\n        this.inLiteral = false;\n        return { name: 'SYMBOL', value: c, pos: this.pos++ };\n      } else if (Lexer._isSymbol(c)) {\n        if (c === '<' || c === '>') {\n          // check if the next is a symbol\n          const value = this.opTable[\n            Object.keys(opTable).find((_) => _ === c + _next)\n          ];\n          if (value) {\n            return {\n              name: 'KEYWORD',\n              value,\n              pos: (this.pos += 2),\n            };\n          }\n        }\n        return { name: 'SYMBOL', value: c, pos: this.pos++ };\n      } else if (c === '\"') {\n        return this._processQuote();\n      } else if (Lexer._isNumericSymbol(c)) {\n        return { name: 'SYMBOL', value: c, pos: this.pos++ };\n      } else {\n        throw Error(`Token error at ${this.pos} (${c})\\n${this.buf}`);\n      }\n    }\n  }\n\n  static _isNumericSymbol(c) {\n    return c === '@' || c === '$';\n  }\n\n  static _isLiteralNumeric(c) {\n    return c === '%';\n  }\n\n  static _isBinary(c) {\n    return c === '1' || c === '0';\n  }\n\n  static _isNewLine(c) {\n    return c === '\\r' || c === '\\n';\n  }\n\n  static _isDigit(c) {\n    return c >= '0' && c <= '9';\n  }\n\n  static _isStatementSep(c) {\n    return c === ':';\n  }\n\n  static _isLiteralReset(c) {\n    return c === '=' || c === ',';\n  }\n\n  static _isSymbol(c) {\n    return '!,;-+/*^()<>#%${}[]'.includes(c);\n  }\n\n  static _isAlpha(c) {\n    return (\n      (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '_' || c === '$'\n    );\n  }\n\n  static _isStartOfComment(c) {\n    return c === ';';\n  }\n\n  static _isAlphaNum(c) {\n    return (\n      (c >= 'a' && c <= 'z') ||\n      (c >= 'A' && c <= 'Z') ||\n      (c >= '0' && c <= '9') ||\n      c === '_'\n    );\n  }\n\n  _processLiteralNumber() {\n    var endPos = this.pos + 1;\n    let needsClose = false;\n    while (\n      (endPos < this.bufLen &&\n        (Lexer._isDigit(this.buf.charAt(endPos)) ||\n          this.buf.charAt(endPos) === '(' ||\n          this.buf.charAt(endPos) === '!')) ||\n      (needsClose && this.buf.charAt(endPos) === ')')\n    ) {\n      if (this.buf.charAt(endPos) === '(') {\n        needsClose = true; // only allow this once\n      }\n      endPos++;\n    }\n\n    const value = this.buf.substring(this.pos, endPos);\n\n    var tok = {\n      name: 'LITERAL_NUMBER',\n      value,\n      pos: this.pos,\n    };\n    this.pos = endPos;\n    return tok;\n  }\n\n  _processNumber() {\n    var endPos = this.pos + 1;\n    let exp = false;\n    while (\n      (endPos < this.bufLen &&\n        (Lexer._isDigit(this.buf.charAt(endPos)) ||\n          this.buf.charAt(endPos) === '.' ||\n          this.buf.charAt(endPos) === 'e')) ||\n      (exp && this.buf.charAt(endPos) === '-')\n    ) {\n      if (this.buf.charAt(endPos) === 'e') {\n        exp = true; // only allow this once\n      } else {\n        exp = false;\n      }\n      endPos++;\n    }\n\n    const value = this.buf.substring(this.pos, endPos);\n    let numeric = 0;\n\n    if (value.includes('.')) {\n      numeric = parseFloat(value);\n    } else {\n      numeric = parseInt(value, 10);\n    }\n\n    let name = 'NUMBER';\n    if (this.inLiteral) {\n      name = 'LITERAL_NUMBER';\n    }\n\n    var tok = {\n      name,\n      value,\n      numeric,\n      pos: this.pos,\n    };\n    this.pos = endPos;\n    return tok;\n  }\n\n  _processBinary(start = '') {\n    this._skipNonTokens();\n\n    if (start.length) {\n      this.pos += start.length;\n    }\n\n    var endPos = this.pos;\n\n    while (endPos < this.bufLen && Lexer._isBinary(this.buf.charAt(endPos))) {\n      endPos++;\n    }\n\n    var tok = {\n      name: 'BINARY',\n      value: start + this.buf.substring(this.pos, endPos).trim(),\n      pos: this.pos,\n    };\n    this.pos = endPos;\n    return tok;\n  }\n\n  _processComment() {\n    var endPos = this.pos;\n    // Skip until the end of the line\n    while (endPos < this.bufLen && !Lexer._isNewLine(this.buf.charAt(endPos))) {\n      endPos++;\n    }\n\n    var tok = {\n      name: 'COMMENT',\n      value: this.buf.substring(this.pos, endPos).trim(),\n      pos: this.pos,\n    };\n    this.pos = endPos + 1;\n    return tok;\n  }\n\n  _isOpCode(endPos) {\n    let curr = this.buf.substring(this.pos, endPos).toUpperCase();\n\n    const _next = this.buf.charAt(endPos, endPos + 1);\n\n    let ignorePeek = false;\n    if (_next == ' ' && curr === 'GO') {\n      // check if the next is \"SUB\" or \"TO\"\n      const next = this._peekToken(1).toUpperCase();\n      if (next === 'SUB' || next === 'TO') {\n        endPos = endPos + 1 + next.length;\n        curr = curr + ' ' + next;\n        ignorePeek = true;\n      }\n    }\n\n    if (this.opTable[curr] !== undefined) {\n      const peeked = this._peekToken(-1).toUpperCase();\n      if (ignorePeek === false && curr !== peeked) {\n        return false;\n      }\n      this.pos = endPos;\n\n      return {\n        name: 'KEYWORD',\n        value: this.opTable[curr],\n        pos: this.pos,\n      };\n    }\n    return false;\n  }\n\n  _peekToken(offset = 0) {\n    const tmp = this.pos;\n    this.pos += offset + 1;\n    this._skipNonTokens();\n    let endPos = this.pos + 1;\n    while (endPos < this.bufLen && Lexer._isAlphaNum(this.buf.charAt(endPos))) {\n      endPos++;\n    }\n\n    const value = this.buf.substring(this.pos, endPos);\n\n    this.pos = tmp;\n\n    return value;\n  }\n\n  _processIdentifier() {\n    var endPos = this.pos + 1;\n    while (endPos < this.bufLen && Lexer._isAlphaNum(this.buf.charAt(endPos))) {\n      let tok = this._isOpCode(endPos);\n\n      if (tok) {\n        return tok;\n      }\n      endPos++;\n    }\n\n    let tok = this._isOpCode(endPos);\n\n    if (tok) {\n      return tok;\n    }\n\n    // special case for GO<space>[TO|SUB]\n    let value = this.buf.substring(this.pos, endPos);\n\n    tok = {\n      name: 'IDENTIFIER',\n      value,\n      pos: this.pos,\n    };\n    this.pos = endPos;\n    return tok;\n  }\n\n  _processQuote() {\n    // this.pos points at the opening quote. Find the ending quote.\n    var end_index = this.buf.indexOf('\"', this.pos + 1);\n\n    if (end_index === -1) {\n      throw Error('Unterminated quote at ' + this.pos);\n    } else {\n      var tok = {\n        name: 'QUOTE',\n        value: this.buf.substring(this.pos, end_index + 1),\n        pos: this.pos,\n      };\n      this.pos = end_index + 1;\n      return tok;\n    }\n  }\n\n  _skipNonTokens() {\n    while (this.pos < this.bufLen) {\n      var c = this.buf.charAt(this.pos);\n      if (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\n        this.pos++;\n      } else {\n        break;\n      }\n    }\n  }\n}\n\n// const l = new Lexer();\n// const res = l.line(\n//   `\n// 5 let b=@01111100\n\n// `.trim()\n// ); // ?\n\n// bas2txtLines(res.basic); // ?\n","import { $ } from './$.js';\n\nexport class Tab {\n  constructor(parent, root) {\n    this.root = root;\n    this.id = root.id;\n  }\n\n  hide() {\n    this.root.style.display = 'none';\n  }\n\n  show() {\n    this.root.setAttribute('style', '');\n  }\n}\n\nexport default class Tabs {\n  constructor(selector) {\n    this.root = document.querySelector(selector);\n\n    const panels = $(selector + ' > section:not([hidden])');\n    this.panels = panels.map(el => new Tab(this, el));\n    const ids = panels.map(_ => _.id);\n\n    const tabNav = document.querySelector(selector + ' > .tabs ul');\n    panels.map(panel => {\n      const a = document.createElement('a');\n      a.href = '#' + panel.id;\n\n      a.innerText = panel.dataset.title;\n      const li = document.createElement('li');\n      li.appendChild(a);\n      tabNav.appendChild(li);\n    });\n\n    this.tabs = $(selector + ' > .tabs a');\n\n    this.tabs.on('click', e => {\n      e.preventDefault();\n      this.show(e.target.hash.substring(1));\n      window.history.pushState(null, '', e.target.hash);\n    });\n\n    this.show(window.location.hash.substring(1) || this.panels[0].id);\n\n    window.addEventListener('hashchange', () => {\n      const id = window.location.hash.substring(1);\n      if (!ids.includes(id)) return; // ignore this\n      this.show(id);\n    });\n  }\n\n  show(id) {\n    this.hide();\n    this.panels.find(_ => _.id === id).show();\n    this.tabs.find(_ => _.hash === '#' + id).className = 'selected';\n  }\n\n  hide() {\n    this.tabs.className = '';\n    this.panels.forEach(_ => _.hide());\n  }\n}\n","import drop from '../lib/dnd.js';\nimport { rgbFromIndex, transparent } from './lib/colour.js';\nimport save from '../lib/save.js';\nimport { decode, pngNoTransformFile } from './lib/parser.js';\nimport ImageWindow from './ImageWindow.js';\nimport { $ } from '../lib/$.js';\nimport SpriteSheet from './SpriteSheet.js';\nimport ColourPicker from './ColourPicker.js';\nimport Tool from './Tool.js';\nimport TileMap from './TileMap.js';\nimport { plus3DOSHeader } from '../bas/txt2bas.js';\nimport Tabs from '../lib/Tabs.js';\n\nconst container = document.querySelector('#container');\nconst ctx = container.getContext('2d');\nconst spritesContainer = document.querySelector('#sprites');\nconst debug = document.querySelector('#debug');\nconst picker = document.querySelector('.picker');\nconst upload = document.querySelector('#upload input');\nconst pickerColour = document.querySelector('.pickerColour div');\nconst buttons = $('#tools button[data-action]');\nconst tileDownloads = $('#tiles button');\n\nlet sprites = null;\n\nfunction newSpriteSheet(check = true) {\n  if (check) {\n    if (!confirm('Are you sure you want to create a blank new sprite sheet?')) {\n      return;\n    }\n  }\n\n  sprites = new SpriteSheet(\n    Uint8Array.from({ length: 256 * 16 * 4 }, (_, i) => {\n      if (check == false && i < 256) return i;\n      return transparent;\n    }),\n    ctx\n  );\n\n  // FIXME not quite right…\n  tileMap.sprites = sprites;\n  tileMap.paint();\n\n  renderSpritePreviews();\n  renderCurrentSprite();\n}\n\nfunction download() {\n  const filename = prompt('Filename:', 'untitled.spr');\n  if (filename) {\n    save(sprites.data, filename);\n  }\n}\n\nnew Tabs('.tabbed');\nconst colour = new ColourPicker(8, pickerColour.parentNode);\nconst tool = new Tool({ colour });\nconst tileMap = new TileMap({ size: 16, sprites });\nlet imageWindow = null;\nwindow.tileMap = tileMap;\ndocument.querySelector('#tile-map-container').appendChild(tileMap.ctx.canvas);\n\nfunction fileToImageWindow(file) {\n  const res = pngNoTransformFile(file);\n  const ctx = document\n    .querySelector('#png-importer canvas.png')\n    .getContext('2d');\n  imageWindow = new ImageWindow(res.data, ctx, res.png.width, res.png.height);\n  imageWindow.oncopy = (data) => sprites.set(data);\n  window.imageWindow = imageWindow;\n  imageWindow.paint();\n}\n\ndrop(document.querySelector('#png-importer'), fileToImageWindow);\n\nconst importMask = document.querySelector('#png-container .focus');\n$('#png-import-tools input[type=range]').on('input', (e) => {\n  const v = parseInt(e.target.value);\n  importMask.style.borderColor = `rgba(127, 127, 127, ${v / 100})`;\n});\n\n$('#png-import-tools button').on('click', (e) => {\n  const action = e.target.dataset.action;\n  if (action === 'zoom-in') {\n    imageWindow.zoom++;\n  }\n\n  if (action === 'zoom-out') {\n    imageWindow.zoom--;\n  }\n\n  if (action === 'copy') {\n    imageWindow.copy();\n  }\n});\n\nbuttons.on('click', (e) => {\n  const action = e.target.dataset.action;\n\n  if (action === 'new') {\n    newSpriteSheet(true);\n  }\n\n  if (action === 'undo') {\n    sprites.undo();\n  }\n\n  let currentSprite = sprites.current;\n  const totalSprites = sprites.length;\n\n  if (action.startsWith('ro')) {\n    const left = action === 'rol';\n    const right = action === 'ror';\n    if (\n      (right && currentSprite == totalSprites - 1) ||\n      (left && currentSprite === 0)\n    ) {\n      return;\n    }\n\n    sprites.snapshot();\n    const offset = 256 * currentSprite;\n    const copy = sprites.data.slice(offset, offset + 256);\n    const next = (currentSprite + (left ? -1 : 1)) * 256;\n    sprites.data.set(sprites.data.slice(next, next + 256), offset);\n    sprites.data.set(copy, next);\n    sprites.current += left ? -1 : 1;\n    sprites.rebuild(sprites.current - 1);\n    sprites.rebuild(sprites.current + 1);\n    sprites.rebuild(sprites.current);\n    sprites.paint();\n  }\n\n  if (action === 'copy') {\n    sprites.copy();\n  }\n\n  if (action === 'paste') {\n    sprites.paste();\n  }\n\n  if (action === 'clear') {\n    sprites.clear();\n  }\n\n  if (action === 'download') {\n    download();\n  }\n});\n\npicker.addEventListener('mousedown', (e) => {\n  colour.value = e.target.dataset.value;\n});\n\nlet down = false;\ncontainer.addEventListener(\n  'mousedown',\n  (event) => {\n    down = true;\n    tool.start(event);\n  },\n  true\n);\n\ncontainer.addEventListener(\n  'mouseup',\n  () => {\n    down = false;\n    tool.end();\n  },\n  true\n);\n\ncontainer.addEventListener(\n  'mousemove',\n  (e) => {\n    if (down) {\n      container.onclick(e);\n    }\n  },\n  true\n);\n\ncontainer.onclick = (e) => {\n  if (e.altKey || e.ctrlKey) {\n    colour.value = sprites.pget(sprites.getCoords(e));\n  } else {\n    tool.apply(e, sprites);\n  }\n};\n\n// main key handlers\ndocument.body.addEventListener('keyup', (e) => {\n  if (e.key === 'Shift') {\n    tool.shift(false);\n  }\n});\n\ndocument.body.addEventListener('keydown', (e) => {\n  if (e.key === 'Shift') {\n    tool.shift(true);\n  }\n\n  if (e.shiftKey && e.key === 'ArrowLeft') {\n    imageWindow.shiftX(true, e.ctrlKey ? 8 : 1);\n  }\n  if (e.shiftKey && e.key === 'ArrowRight') {\n    imageWindow.shiftX(false, e.ctrlKey ? 8 : 1);\n  }\n  if (e.shiftKey && e.key === 'ArrowUp') {\n    imageWindow.shiftY(true, e.ctrlKey ? 8 : 1);\n  }\n  if (e.shiftKey && e.key === 'ArrowDown') {\n    imageWindow.shiftY(false, e.ctrlKey ? 8 : 1);\n  }\n\n  if (e.key >= '1' && e.key <= '8') {\n    colour.index = parseInt(e.key, 10) - 1;\n    return;\n  }\n\n  if (e.shiftKey === false && e.key === 'z' && (e.metaKey || e.ctrlKey)) {\n    sprites.undo();\n    return;\n  }\n\n  if (e.key === 'D') {\n    download();\n    return;\n  }\n\n  if (!e.shiftKey) {\n    let current = sprites.current;\n    if (e.key === 'ArrowLeft') {\n      current--;\n    }\n    if (e.key === 'ArrowRight') {\n      current++;\n    }\n\n    if (current === sprites.length) {\n      current = 0;\n    } else if (current < 0) {\n      current = sprites.length - 1;\n    }\n\n    if (current !== sprites.current) {\n      sprites.current = current;\n    }\n  }\n});\n\nfunction buildStyleSheet() {\n  let css = '';\n  for (let i = 0; i < 256; i++) {\n    const { r, g, b, a } = rgbFromIndex(i);\n    css += `.c-${i} { background: rgba(${[r, g, b, a].join(', ')}); }`;\n  }\n  const s = document.createElement('style');\n  s.innerText = css;\n  document.head.append(s);\n}\n\nfunction renderCurrentSprite() {\n  try {\n    spritesContainer.querySelector('.focus').classList.remove('focus');\n  } catch (e) {\n    // noop\n  }\n\n  const focused = document.querySelector(\n    `#sprites > :nth-child(${sprites.current + 1})`\n  );\n  if (focused) focused.classList.add('focus');\n  sprites.paint();\n}\n\nfunction renderSpritePreviews() {\n  spritesContainer.innerHTML = '';\n  sprites.getPreviewElements().map((_) => spritesContainer.appendChild(_));\n}\n\nfunction fileHandler(file) {\n  file = decode(file);\n  sprites = new SpriteSheet(file, ctx);\n  tileMap.sprites = sprites;\n  tileMap.paint();\n\n  renderSpritePreviews();\n  renderCurrentSprite();\n}\n\nfunction render(data, into) {\n  into.innerHTML = '';\n  for (let i = 0; i < data.length; i++) {\n    let index = data[i];\n    into.appendChild(makePixel(index, i));\n  }\n}\n\nfunction makePixel(index, dataIndex) {\n  const d = document.createElement('div');\n  d.className = 'c-' + index;\n  d.dataset.value = index;\n  d.dataset.index = dataIndex;\n  d.title = `${index} -- 0x${index.toString(16).padStart(2, '0')}`;\n  return d;\n}\n\ncontainer.onmousemove = (e) => {\n  let { x, y } = sprites.getCoords(e);\n  const value = sprites.pget({ x, y });\n\n  debug.innerHTML = `X:${x} Y:${y} -- ${value} 0x${value\n    .toString(16)\n    .padStart(2, '0')}`;\n};\n\ncontainer.onmouseout = () => {\n  debug.innerHTML = '&nbsp;';\n};\n\nspritesContainer.addEventListener('click', (e) => {\n  const node = e.target;\n  if (node.nodeName === 'CANVAS') {\n    sprites.current = Array.from(node.parentNode.childNodes).indexOf(node);\n  }\n});\n\ndrop(document.documentElement, fileHandler);\n\ndocument.documentElement.ondrop = async (e) => {\n  e.preventDefault();\n  const files = e.dataTransfer.files;\n\n  console.log('file length', files.length);\n\n  if (files.length === 1) {\n    const droppedFile = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      fileHandler(new Uint8Array(event.target.result));\n    };\n    reader.readAsArrayBuffer(droppedFile);\n  } else {\n    let id = sprites.current + 1;\n    await Promise.all(\n      Array.from(files).map((file) => {\n        const reader = new FileReader();\n        return new Promise((resolve) => {\n          reader.onload = (event) => {\n            const res = decode(new Uint8Array(event.target.result));\n            sprites.current = id;\n            sprites.set(res);\n            id++;\n            resolve();\n          }; // data url!\n          reader.readAsArrayBuffer(file);\n        });\n      })\n    );\n    renderSpritePreviews();\n    renderCurrentSprite();\n  }\n};\n\nupload.addEventListener('change', (e) => {\n  const droppedFile = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = (event) => {\n    fileHandler(new Uint8Array(event.target.result));\n  };\n  reader.readAsArrayBuffer(droppedFile);\n});\n\n$('input[name=\"transparency\"]').on('change', (e) => {\n  document.documentElement.dataset.transparency = e.target.value;\n});\n\ntileDownloads.on('click', (e) => {\n  console.log(e.target.dataset.type);\n  const filename = prompt('Filename:', 'untitled.map');\n  if (filename) {\n    const data = new Uint8Array(tileMap.bank.length + 128);\n    data.set(plus3DOSHeader(data, { hType: 3, hOffset: 0x8000 }));\n    data.set(tileMap.bank, 128);\n    save(data, filename);\n  }\n});\n\n// support native paste of pngs\ndocument.onpaste = async (event) => {\n  const items = (event.clipboardData || event.originalEvent.clipboardData)\n    .items;\n  const files = [];\n  for (let index in items) {\n    const item = items[index];\n    if (item.kind === 'file' && item.type === 'image/png') {\n      files.push(item);\n    }\n  } // will only ever be 1 file :(\n\n  let id = sprites.current;\n\n  await Promise.all(\n    files.map((item) => {\n      const blob = item.getAsFile();\n      const reader = new FileReader();\n      return new Promise((resolve) => {\n        reader.onload = (event) => {\n          const res = decode(new Uint8Array(event.target.result));\n          sprites.current = id;\n          sprites.set(res);\n          id++;\n          resolve();\n        }; // data url!\n        reader.readAsArrayBuffer(blob);\n      });\n    })\n  );\n\n  renderSpritePreviews();\n  renderCurrentSprite();\n};\n\nnewSpriteSheet(false);\n\n// render the colour picker\nrender(\n  Uint8Array.from({ length: 256 }, (_, i) => i),\n  picker\n);\nbuildStyleSheet();\n"]}