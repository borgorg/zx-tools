{"version":3,"sources":["lib/dnd.js","scr-tools/lib/zx-colour.js","scr-tools/lib/Zoom.js","scr-tools/lib/scr.js","lib/$.js","lib/save.js","scr-tools/lib/matrices.js","scr-tools/lib/Dither.js","scr-tools/lib/image.js","scr-tools/lib/retrofy.js","scr-tools/index.js"],"names":["drop","root","callback","ondragover","ondragend","ondrop","e","preventDefault","droppedFile","dataTransfer","files","reader","FileReader","onload","event","Uint8Array","target","result","readAsArrayBuffer","brightColoursLookup","Map","set","toString","normalColoursLookup","brightColours","normalColours","getIndexForXY","width","x","y","order","Zoom","constructor","buffer","document","body","id","HTMLImageElement","img","canvas","createElement","appendChild","height","ctx","getContext","drawImage","parentNode","replaceChild","CanvasRenderingContext2D","sourceCtx","getImageData","data","toBlob","blob","url","URL","createObjectURL","style","background","clearRect","ImageData","isVisible","_last","makeVisible","className","scale","w","h","imageRendering","setProperty","put","imageData","putImageData","seeXY","key","pixel","strokeStyle","strokeRect","sourceWidth","source","Uint8ClampedArray","print","i","j","index","end","offset","console","log","subarray","slice","toBlink","blinkOn","block","attribute","start","pixels","ink","paper","readAttributes","ptr","byte","colour","load","fetch","arrayBuffer","sleep","ms","Promise","resolve","setTimeout","draw","third","ctr","line","bit","stream","attribs","type","blink","push","pixelsForSCR","loadBlinkAttributes","join","timer","setInterval","doBlink","stop","clearInterval","length","forEach","item","main","zoom","window","fillStyle","fillRect","onmousemove","bright","readFromPoint","pageX","pageY","innerHTML","padStart","onclick","values","pixelsToBytes","canvasImageData","row","putPixels","allPixels","allData","getInkFromPixel","rgb","shiftBright","get","attributesForBlock","inks","fill","Object","keys","count","Array","from","map","filter","sort","a","b","putAttributes","inkData","download","filename","click","node","MouseEvent","dispatchEvent","Blob","href","revokeObjectURL","ArrayNode","Proxy","obj","prop","value","HTMLElement","prototype","el","res","on","handler","options","addEventListener","emit","Event","$","s","querySelectorAll","fileName","isArray","oneDimensional","factor","floydSteinberg","jarvisJudiceNinke","stucki","atkinson","burkes","sierra3","sierra2","sierraLite","none","colorMap","getDistance","current","match","redDifference","greenDifference","blueDifference","defaultFindColor","shortestDistance","Number","MAX_SAFE_INTEGER","distance","defaults","step","channels","diffusionFactor","clip","findColor","matrix","matrices","Dither","dither","settings","k","ref","d","handlePixel","calculateIndex","currentColor","l","newColor","q","ref1","diffuseError","applyNewColor","channelOffset","entry","len","results","di","dx","dy","results1","m","ref2","results2","image","imageToBlob","then","fileToBinary","contrast","intercept","threshold","_","r","g","test","v","invertPotentialInk","inkCount","c","crop","destination","longest","shortest","imageToCanvas","imageToPixels","file","onloadend","all","debug","Image","crossOrigin","src","reject","onerror","bufferCtx","render","pixelData","renderFromInk","originalData","pixelsToImage","toDataURL","prompt","scrBlob","scrURL","container","scrCtx","ul","li","attribsLI","img2","inkImg","pixelImg","zoomOriginal","zoomPixel","zoomInk","zoomResult","rootCanvas","querySelector","classList","add","hover","bind","putInkForBlock","newBlock","attributes","blockBuffer","location","search","includes","basename","split","altDownload","isSCR","toUpperCase","endsWith","div","button","innerText","prepend","fileHandler","name"],"mappings":";;AUAA;;AACA;;AACA,ATFO,MAAMmB,SKAE,ULAiB,GAAG,IAAIC,GAAJ,EAA5B;AGAP,AJAe,AOAf,ALAA,AICEoL,EAAAA,IFDIpB,GJAkBpL,AEAf0B,IFAM,CAAczB,CIA7B,ACAgB,CCCA,ENDD,AMCG,CACd,CNF+BC,EEAnC,CAAuByB,CEACuI,GCAG,CLAZ,AEAf,CEAA,CAA8B,AJAe,AEAftI,CAA9B,EAAiCC,CAAjC,EAAoC;AEClCG,AJAA/B,AKAA,AKEF,ARFE,AIEI2B,AGHN,ARCAT,EGAEa,AJAA/B,EMEI2B,CAAC,CNFD,AKAA2I,CLACpK,AKAA,ACEE,CADL,CJDKwB,CGACO,GDAG,CFAC,EEAE,CJAd,AEAeL,CGAC,AHAT,CGAUW,AJAA,CDAC,ACAAnB,CCACO,CAAnB,CDAF,CAAwB,CAAC,CDAC,ACAF,EAAI,CAAJ,EDAtB,ACA6B,CIArB,AJAc,CIAS,CJACN,EIAxB,CAAR,KJAsB,EAAxB,EAA8C,KAA9C;AGCI,ACAFY,AHAD,AIEKL,ALFNV,EIAEe,ECEIL,CAAC,EAAE,CAFL,EDAM,CAACM,CDDK,CAGZ,ECFF,CAAcM,GJAG,CAACpB,GAApB,CAAwB,CAAC,CAAD,CIAtB,CAA0BkJ,AJAA,CIA1B,AJAsB,EAAO,IAAP,EAAajJ,QAAb,EAAxB,EAAiD,KAAjD;ADAErB,AKCAsK,AKCF,AJCMkC,AGJN,AREAtL,EDDElB,AKCAsK,CAAC,CAAC9G,ACEEgJ,ENHA,CAACrM,EKCL,CCEU,EDFA,ACEE,INHZ,GAAiB,ACCA,CAACiB,GAApB,CAAwB,CDDC,ACCA,EIAvB,EJAsB,CDDtB,CCC6B,CAAP,EAAU,CAAV,EAAaC,QAAb,EAAxB,EAAiD,KAAjD;AGEI,ACDF,AEFF,ALEA,AIFI,ALEJH,GKHkB,CJGdW,AIJW,ECETqL,GFEG,AHAA,EECE,CFDC,CAAZ,CKFc,CHGC9B,EGHE,CACf,CFCgBlI,AEDf,ANCgB,CGCR,AGFT,ANCkB9B,CGCC,CGFf,CFCG,AEDP,ANCF,CAAwB,CGCb,ACDaiL,AEDf,ANCgB,EGCE,EGFzB,ANCsB,CMFP,CNEc,CMA7B,ANAsB,CIAf,AEAN,CNA+B,CIAA,EEAhC,CNAsB,CMAf,CAAP,ANAsChL,EMA5B,CAAV,CAFe,EAGf,CAAC,CNDqB,EAAxB,CMCE,CNDkD,CMC3C,CAAP,EAAU,CNDZ,GMCE,CAHe,EAIf,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAV,CAJe,EAKf,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,CALe,EAMf,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,CANe,EAOf,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAPe,EAQf,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARe,EASf,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CATe,EAUf,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,CAVe,EAWf,CAAC,IAAD,EAAO,CAAP,EAAU,IAAV,CAXe,EAYf,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAV,CAZe,EAaf,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,CAbe,EAcf,CAAC,IAAD,EAAO,IAAP,EAAa,CAAb,CAde,EAef,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAfe,CAAjB;AHIMD,AJHJpB,AKEE,ACGFyM,AGNF,ARGAvL,EDFElB,AMKAyM,IFFIrL,AJHA,CAAChB,CKECgD,CDCC,CAACiI,ECDE,CDCH,AJHP,EIGaC,ACDA,CLFCjL,AMKA,CNLC,CMKC,CFFT,ACDL,ACIA,ALJe,CAACe,CGCCmK,AJHA,ECErB,CAAwB,CAAC,CGChB,AHDe,EGCI,AHDA,IAAJ,EAAU,CAAV,EAAalK,QAAb,EAAxB,EAAiD,KAAjD;AGEQ,AJHJhB,AOgBJ,ALde,AIITsB,ALJNT,IDFIb,AMMEsB,CNND,AMME,CNNDrB,AEEewB,CIIZ,CADL,CCWKqL,CLdM,CAAW,CECd7B,IAAI,GHDG,CGCCE,AJHhB,AOgBJ,ANdoBpK,CMcCgM,ENdrB,CAAwB,CAAC,CAAD,EMcxB,ANd4B,EMcEC,CHbC,CAAC5B,AHDR,EAAU,CMclC,EAAqC,CNdb,EAAgBpK,CGChC,EAAmC,KHDnB,EAAxB,EAAoD,KAApD;AGEU,AJFN,AKCA,AKDJ,AHeE,ALdAU,AMPF,AFWMH,AGRN,ARIAV,ECAEa,EIIIH,CAAC,CILDZ,CJKG,CDJDkC,AEcAoK,ADZJ,ENHM/M,EKCE,AKDA,CRCC,CAACyB,CQDC,ENEEqJ,EHDE,CGCC,AFDP,ADAOjK,CGCCgJ,AJFA,AOeA,CLdCrJ,CDAtB,CDDwBV,AKCA2K,AEcAoC,ANdA,CDDC,AUAR,ATCQ,CDDC5M,CIET,CAAWkL,ACDxB,AHAwB,CDAJ,CGCM,ACDA,CEcC,ALdAzJ,ADAA,CMcC,CAAD,CHbIyJ,AMFpB,AHeS,CNdA,CGCa,AMFT,CNEUJ,AMFvB,AHesB+B,ANdA,CDDb,AUAxB,ATCwB,CDDe5M,AECA,CAACyB,ADAAb,CGCH,CAAF,AGaO,CAAC,CPfnB,AOekB,ALd7B,CECiCkK,AJFD,AOe3C,CPfsB,AECsBpJ,CFD1C,CECS,ADAW,EGCP,AFDiC,ADAlD,CGCU,CHD0C,KAApD;AGES,AJFL,AKCEiB,AEcJ,ALdE,AIIEoJ,ALJNtL,IKIMsL,EDJApJ,EEcEmK,CLdCxM,CFDCL,AKCA,ACIE,EAAE,CDJDwC,EHAT,CFDY,AMKE,CDJZ,CHAYnC,CFDC,ACCA,CAACK,GDDGT,AOeA,ANdvB,CCAI,ADAoB,CAAC,CMcCyM,GNdF,EAAO,EDDZ,AOec,CAAC,CPf9B,AOe6B,ANdT,CMcE,CNdW,EMcEC,ENdf,EAAmBhM,CMcC,CAAC,CAAD,CAA1C,INdsB,EAAxB,EAAuD,KAAvD;AICK,AKDL,AHeE,ALdE,AIAA,ALCG,GKFW,EDDd,ACOA,CLJSC,EMaLkM,CGfCyG,ARCApS,EGAE,GHAP,GQDJ,ARCiBA,CQDC8I,IHeI,ALdA,EAAlB,CKcqByC,ANbO,CSFhC,EAA4B,ATEO,IMaH,ANbOjM,CMaN,CAAD,CAAP,ANbU,EAA5B,CMa+BkM,KAAK,CAAC,CAAD,CAAzC;AHZM,AJHJ3M,AKEE,AKDJ,AHgBA,ALfE,AIKEiB,INPFjB,AMOEiB,CAAC,EAAE,CAAC,CINDgJ,AHiBL2C,ALhBKnL,AIIL,CNNM,AKEA,CLFCvB,AKEAqJ,AHAP,GECU0B,AFDAxJ,EGAE,AHAA,CECC,AJHb,AKEamK,AKDA,CACZ4H,ENCgB,AJHDrT,AEEC,EKgBJ,CGjBR,CLCE,AKAA,CNCeyK,AJHD,AKEApI,AEgBLoK,EGjBX,CRCmB,CECP,AJHQ,AKElB,AKCN7H,CLDC,EAA0B,CDCE8F,AFDD1J,CQDxB,CAEE,CAFF,ENED,AMAM,AHeV,ALhBmC,CQCxB,CAFN,ARCL,CKiBA0L,CGfC7F,IAHI,CAGC,GAHD,CAAP,KHkBiB,GAAG6F,eADlB,GAEAC,cAAc,GAAGA,cAHnB;AHbM,AJHFvN,AKEEiD,AKEP,AHiBA,AC5Bc,AFcTtB,AGJC,ARDPN,EMqBA,EDhBMM,CAAC,CNPD3B,CMOG,CDLDiD,ACGJ,CEZoBiF,GHSZ,CGTG,CROD,AQPe6H,CJUdrE,AJHA,AKEA,AICO4C,CJDNrL,EDCR,CJHWpC,AQPJ,APSI,CIAJ,AJAKM,CIAZ,AGT4B,ACU7B,CAAsB,CRD7B,CAAwB,CAAC,CAAD,EAAI,CDFb,ACES,CDFMP,CCEC,CAAP,EAAUQ,CDFC,CAACN,MAAN,ACEN,CDFmBC,CCE3C,EAA8C,GDF/B,CAAD,CAAR,ACEN;AGEO,AJHF,AKEE,AHDH,AMRF,AFcIwL,AGLyBnJ,ANZ/B,AFYA/B,EQA+B+B,EHKzBmJ,CNTF,ASIyB,GPDrBxK,CMRCiO,CFcG,EAAE,EJNA,EIMI,GLLC,COTC,APSA7O,COTC4O,EPSrB,CAAwB,CAAC,CCDC5N,AMRN,APSI,COTf,CAAmB8N,APSA,CAAJ,EAAO,COTtB,CAAwBC,EPST,EAAa9O,KCDjC,EAAwC,CMRnC,APSe,COTtB,CPSF,EAAiD,KAAjD;ASGA,ARHM,AMRL,AFUG,AGFgCkQ,ARCpCjQ,EQDoCiQ,CHJlB,EAWd,AGPmC,GAAG,CCGjCiB,GRHGnQ,COAiB,EPAd,GQGf,ARHkBL,CQGC2I,ATFA,CAACvJ,GAApB,CCDM,ADCkB,CAAC,ESEzB,EAA6B+S,ATFL,EAAO,CAAP,EAAU,CAAV,EAAa9S,GSErC,EAA0C,GTFlB,EAAxB,EAAiD,KAAjD;AGR2B,AJMvBX,AKEE0C,AKGJ,AHiBF,ALpBM,AIOAzB,AGR2C6P,ANLjD,AFOAlQ,EQFiDkQ,ETD7C9Q,AMSEiB,CFfK,AEeJ,CFfH,ACQEyB,CCOG,AGR6C,CCI9CgR,AJGJ,CCcK3G,CPtBC,AKEA,AID+C,CTD9CxM,CEECqB,CGAC,AKGA,GAAGqI,CLHCK,CHAC,CDCC,CAAC5J,CIDP,AHAQa,CGACiB,CJCtB,CSEwB,ATFA,CSECmR,AHiBzB,ANnByB,CIDZ,AEoBa7K,EPtBtB,AKEwB,CLFCjJ,AOsB7B,ALpB6B,ADCL,CCDMgC,CKoBC,ANnBA,CAAP,EAAU,ESElB,ETFQ,CSEe+R,CVLnC,ACGoCjT,GCDnB,CAAuB,GQG5B,CAAgC,ATFxB,EAAxB,ECDqB,ADC+B,CCD9C,CQGU,CAAd,ETFF;AGCG,AJFC,AKA0BgG,AKK5B,AHgBA,ALpBItG,AMRC,AFeDa,AGTuB,ARG7BN,CQHO,EAA2D,CHS5DM,CAAC,CCaD8L,ALpBA3M,CIOG,CDRqBsG,AKKtB/E,AJCJ,CEbY8N,EROL,CKAuB,AHCtB,CAAC5N,CGDuB,AKKtB,EVLV,CUKaP,AFZV,CAAkBqC,CPSN,CAAClD,EMmBlB,CNnBF,CCDM,ADCkB,CSGC,ARJAkB,ADCA,CSGCC,ATHF,COTjB,CPSqB,COTQ6N,ENQ9B,CDCkB,EAAU,CAAV,EOToB,APSP/O,ESGpB,CAAuB,AFZO,EAAxC,EAA4C,CPS3B,EAAxB,CSGiB,CAAf,ATH+C,KAAjD;ADDG,AKDyB,AKM1BiB,AHgBA,ALpBIA,AMRJ,AFeIkK,AGTJ,ARGFlL,ESGEgB,CVhBA,CMmBIkK,ECaArH,ALpBA7C,CGFO,CAAP,AKME,AFZAY,ACMAb,CCMCX,CJGG,CCaV,AEtBS,CPEC,AMRA,AFeE,CJPDA,CQIX,ADNY,CDNC4C,CFeG,CIHD,CRJX,AOFYmN,CRGC,CSGjB,ATHkBrQ,CCDCiB,EOFP,ARGd,CCDwB,AMRA,APSA,CCDCX,AMRAwB,ACMvB,ARGuB,CAAD,EAAI,COT1B,CNQI,EDCkB,EAAU,IAAV,EAAgB7B,QAAhB,EAAxB,EAAoD,KAApD;AGCEuK,AJFD,AKDI,AKMHtJ,AHiBA6C,ALrBI7C,AMRJ8N,AFWE,AGLF/N,ARGFf,EGAEsK,AMGAtJ,AHiBA6C,AC7BAiL,ACMA/N,CHNgB,CFSd,CAACxB,AEOD,AGVC,CPECyB,AOFAoP,CFuBC,CGjBC,CAACjP,CNHL,AGoBM,AC7BA,CD6BC,CHpBCoJ,AGoBV,ALrBU,CAACpJ,AMRA2N,EEYX,EDNA,CCMgB,CNHd,AFDE,ADCa,CQHC,ARGAhP,CGAC0K,AMGnB,AFZmB,CNQCzJ,CDCtB,COTwB,APSA,CCDC,ADCA,CCDCI,CMRb,CJST,CHAoB,CGAM,AITA,CAA5B,ACMA,ARG6B,CCDzB,AMV6C,CAElB,EPST,EAAa,CAAb,EAAgBpB,QAAhB,EAAxB,EAAoD,KAApD;AGCI,AMGF,AHiBAqM,ALrBI,AIQA/L,AGVJU,ANNF,AFSAf,EMoBEoM,AEvBArL,EHUIV,AHhBF+D,CGgBG,AGVF,CAACiM,CHUG,CIJDjP,AJGJ,CGTF,ELGS,AMGA,APZA,CDQCA,AOFAW,ECMEf,APZA,CDQC,AOFb,CLGc8H,ADThB,EI6BkB,ALrBCpI,CDCA,CSGC,ATHAZ,CSGCuB,AHiBAgL,CHpBV,CAAYjC,AHAvB,CCDyB,ADCD,CGAC,AHAA,EMoBE,ALrBCpJ,CKqBAsL,CHpBClC,AHAL,EGAO,AMGjB,ATHiB,CGACK,AMGA,CRJE,CAACpJ,CDCX,CSGV,CAAZ,ATHmC,IAAb,EAAmBtB,CMoBzC,ALrB0B,CAAkB,GECjB,CAAoBR,AFDrB,CAAtB,CDCkB,EAAxB,CGA6B,CHA0B,CGACgL,IHAxD,GGA6B,EAAoCC,OAApC,CAAlB,CAAP;AACD,ACJC,AKOF,ARJIpJ,AMTJ,AFiBId,AGVJ,ANNF,AFUO,IKMDA,AHhBF+D,CGgBG,CJRDjD,ADEOnB,CKMJ,CIJDgT,AFbAlE,AFeJ,AGRI,CPEC,CGHChN,AHGAT,CQIC,APZA,CMMC+D,CJDC,CKOC1E,APZA,EEKEqB,CGNC,EHME,AHGb,AOFE,ANNR,AFU0B,CILNC,AHGAlB,AMTA,ACOA,CAACuE,CCMC,ATFO,CSENrE,ARJjB,EAAmB,CAAnB,CMTqB,CNSC,AOFR,CPEd,COFwBqP,CDPCxB,IHMf,CAAoBhN,AKOtB,ADNM,CCMiB,EFbjB,CHMJ,AGNd,CHME,AICqC,CCM3B,CAAZ;ALNEkH,AKOFiK,AHiBA,ALrBIlS,AIQAmK,AGVFnK,ARIF,ESEAkS,ELPEjK,ACWEkC,AGVFnK,CJDC,AKOA,CLPC4I,AKOAlH,ARJA1B,CKqBC,AEvBA,CAACzB,CPEC,ADEA,CILL,AHGMiC,AIQE,ALNF,CMmBCoC,ANnBF,CMmBG,ADbE,CDXD5B,AJKA,CQJT,ARIK,CSEP,AHiBa,CFxBX,AEwBF,ADbgB,ALNF,CQJCuD,ARIR,CSES,AHiBA3B,ANpBW,CMoBV,CLrBb,CAAenC,CKqBCoK,EEvBlB,KCMF,CHiB4B,CAAClF,ELrBzB,CAA4B1F,GKqBhC,EAAqC2C,CAAC,ALrBlC,EKqBJ,ALrBwC5C,EKqBE,CLrBtC;AEEJ2J,ACJE1B,AKOFiK,AHiBE,ALrBC,AMVH,AFcE,AGNAlS,ANNJ,AFUE,EGDA2J,AMGAuI,CJhBgB,CDSdjK,ACjBW,AGkBXjI,CJDC,AKOA,CNHC,ACJAqI,AKOAlI,CNHC6E,AIXA,ACQA,CAACwK,CNNCjM,AFUA,CMmBCyH,ANnBA,CGDJ,AIXKpI,APYF,COZG,CJWC/B,AHCA,CILT,AFLJ,AFUS,CMmBM,AC/BA,ACQX,ANLFvB,CKHA,ALGC,AFSa,CGDV,ACJW0K,AKOf,CAAgB/J,AHiBA4K,AC/BAjI,ACQA2M,CLGC,AIXA,ALGb,CADN,AFUS,CAFoB,COVP1O,ALIpBtB,CAAC,COUD,ADNE,CJDA,CEwBsB,AC/BA,ALIpB,CI2BqBqD,AC/BA+C,ALE3B,CI6B0B,CAAtB,AJ1BFhG,IKLA,EAAiCiD,ALEnC,CKFoC,CLK1B,GKL8B,CAAtC,EAAyC;AJYvC,ACJAqF,AKQF,AHgBE,AC/BApH,AFmBFwJ,AGXC,ANHD7G,AFOA,EKOA6G,CGdM,CJEJpC,AGPApH,ACKF,CJEG,CAAC0H,EKQE4J,AFfA,CAACvP,ALKE,AFOF,CGDCpE,AGoBAgN,AC/BF,APYE,CILN,AGPA,CLKU7L,EOUA,AFfAkB,APYL,CGDM,CHCC,CSGCjB,ATHR,CGDS,AGoBA,AC/BA,ALKE,CKLDgD,AFmBA,AHdEO,AFOF,COZD,APYT,CMmBY2H,AC/BP,AFmBO,ALVQ,CGEPlB,AESlB,EEpBoBmE,CEeC,CAAC7N,CNJR,ADNJ,CCMc8E,ADNE,ICMZ,AGoBc,AC/BlB,CD+BmBmC,CHpBC,CIXC6G,ALKE,CI0BL,AJ1BlB,EI0BwBhD,AJ1BEzL,COUvB,APVwB,COUD,EPVI,CI0BZ,CAA5B,AC/BA,ALKoC,GAASD,COUhC,APVH,COUZ,APdF,EAKE;ACKkCuB,ACHhCI,AKQFiR,ARLE,AMVArR,AFoBEvB,AGZJ,ANFA,AFMA,ESGA4S,ELREjR,AGPAJ,AFoBEvB,CILD,AJKE,CFV6BuB,AMK9BV,ADPAgP,CJDC,ACaE,CDbDtG,AHGAlJ,AMVA,AFmBJ,AHbI8D,CKNCb,APYA,COZC,APYA,CQJR,EDRW,ACQAhD,ANFA,CDIC,AMVN,APYC,COZL,CLMY,AFMA,CSGd,APTgBL,AFMT,CSGS4S,AFfAtR,ALMC,CFMA,EQJE,ANFC,CKNA,ACQAhB,ANFL,CECb,AGPmB+C,APYd,CILe5B,AKQtB,AFfsB,APQK,CEFF,CDIDN,AOFb,ANFG,CECZ,AGPuB,ACQAP,CDRL,CAAJ,CLMc,EKNA4N,ELM9B,IMEW,CAA0B/N,CDRrB,ECQL,CDR8BgO,ONUvC,EAAgD,AMVhD;AJU8B,ACF/B,AEwBC,ALrBE,AMVFnN,AFoBEtB,AGZJ,ANFA,AFMA,GIrBA,CGSEsB,AFoBEtB,CFXY,AEWX,CFXH,CEWK,CCWDiM,AC/BA,AFkBJ,AGVInL,ANFAqD,CKNCd,APYA,COZC,APYA,CQJC,ARIF,CCFGvC,CMVC,APYA,COZL,ACQM,ANFA,CDIC,AMVX,CD+BY,CJzBCV,AFMR,CCFU,AMVDkB,CD+BCwK,ANnBA,CAAV,CALoB,COPP,CNUE1K,AMVDiC,ALMA,CKNC,ALMAO,GKNG,CAAL,CAAJ,GNUC,AMVa4K,ALMf,CAAgBtK,EIyB7B,ALrBgC9D,EKqBC,CJzBpB,EKNC,ACQUK,ANFYyD,CDIlC,EMVqCuK,ACQ7B,EAAmB,ANFY,GAAG,IKN5C,ALMa,CAAf,CAFA,CAIA;ACEE,ACFH,AKOCmE,AHiBIrP,ALrBA,AMVH,AFoBGqH,AGb6B9K,ARKjC,CI1Ba,CK4Bb8S,EJMIhI,AGb6B9K,EFwB7ByD,EGjBE,CAAC4D,ADP+B,ARK/B,CKQG,ALRF,CGHC,AGsBA,ALrBA/G,AOH+B,ARKjC,CKQK,CLRD,CMmBCiD,AExBmB,CFwB3B,CHtBUmF,AMKd,AJMgB,CJVZ,ADEG,ESEU,ATFA,CCFCpI,EEDT,CAAY0J,AHGd,CANoB,CGGJ,CFCC,CAACzI,EEDEyI,EAAE,AMKA,CNLCX,OFCZ,CACZ,CADY,EAEZ,CAFY,CEDS,CAAiBlK,AFItCmB,KEJqB,CAAlB,AFIG,CEJV,AFIWM,MAAP,CAAcZ,KAHF,EAIZM,MAAM,CAACM,MAAP,CAAcG,MAJF,EAKZS,IALF;AEAH,AMKC,AHiBEwK,ALhBAhL,AICF,AGV2CD,ANC7C,AFKA,GKGmB,CGT0BA,CHe3C,CCUEiL,ALhBAhL,ECRE,CDQC,ADHA,CSEC2O,ARCA/O,AOT2C,ARM3C,EQN6C,ECQzC,ATFL,ECGH,ADHU,CSEC,ARCAa,GDHR,EMmBa,ANnBA,CSEC,ARCjB,ADHG,CCGeC,ADVK,CM0BJyK,EGjBElH,CRCC,IAAI,CKgB1B,CGjBiB,CAAYC,OAAO,IAAItE,MAAM,CAACa,MAAP,CAAcyD,OAAd,CAAvB,CAAnB;AAEA,AHgBC,ALhBG,AMhBN,AFsBIjF,AGhB2B,ANCvBqE,AFMR,GQPY,CHgBRrE,AGhBJ,ANCQqE,CGeH,EAAE,AHfD,CGcJ,CErBK1B,APaA,CAAC,ICGIjB,ADHL,EAAO,CCGC,CMhBf,ENgBkBC,ADHX,EAAa,CSGb+N,ARAc,CAAC9N,EDHf,CSGL,EAAW0Q,QAAQ,CAACtJ,CRAJ,CAAoBvH,IAApB,CAAZ,CQAe,CAAR,GAAqB,MAAhC;AN/B0B,AMgC3B,AHgBA,ALhBKV,AMhBP,AFsBKd,AGhBJ,ANAaqE,AFFc,CAAtB,ESQL,CJUIrE,AHhBSqE,CGgBR,EAAE,CJNDvD,AIIJ,AGdIJ,GPUG,CAACA,EOVE,GAAGI,CPUT,CAAWc,COVC,CAAClB,GPUb,CAAiBmB,EOVvB,QPUM,GAA+B,OAAMJ,GAAI,aAAzC;AACAX,AIMF8J,AGhBJ,ANDM,IGiBFA,EHjBmBtG,EDWjBxD,AOVAuB,CAAC,CHgBG,CJND,CAACP,AIME,AGhBFpB,IHgBM,EGhBA,CAACZ,CNDoB,CDW/B,ACXgCmE,CDWlB,CAAd,COVN,CPUuB,CAAjB,EAAoB7D,ECXW,CAArC,GDWgC,CAACM,MAAP,CAAcZ,KAAlC,EAAyCM,MAAM,CAACM,MAAP,CAAcG,MAAvD;AEND,AMML+R,AHiBA,ALhBK,AMhBA,AFkBH,AGZF,ANDA,AFQK,ESELA,CJHmB,EAWjB,CFdStI,AHIA1K,CGJC,AFGR,CQGE,ADTA0C,ANDAQ,COUC+P,AHiBA,AChCOnE,ACMP,CLGQ,AGuBP,CHvBQnE,CAAD,AKHL7J,CF0BC4K,AJ3BA,CCIQxK,EDJL,CCIQ,CMMtB,AFfK,ACMW,CDNQQ,ACMPT,AROO,CGJCR,ADJP8C,COUC,AHiBA,CAACI,ANnBO,CObtB,EAAyBoL,ACM9B,CDNK,CDgCc,CHvBJ,AGuBR,AChC0BD,EDgCL,GHvBUnF,AGuB/B,CAAP,CGjBA,EFf0C,ALK5B,CAAsB,EKLSoF,CAAxC,CJS0C,ADJP,CCIQrG,AITA,ALKZ,GAAQ,CCIN,ADJxB,CCIuCxH,ADJrD,GCIwD,CAAC0J,gBAAJ,CAAqBD,CAArB,CAAf,CAAjC;AGwBN,ALhBI,AMhBH,AFuBIxK,AGhBJ,ANFAC,AFQA,EERAA,CAAC,CGkBGD,CJpBF,AIoBG,CGhBD6P,ANFA5P,CKLC,AFuBE,AHlBF,CGkBG,CADN,ALTK,CERC,AFQA,CCGC,AMhBAqD,ACOT,ANFA,AFQO,CObG,CCOChD,ARMA,CAAJ,CObM,CAAb,APac,CAAP,CObSgD,APYW,COZV,ECOE,CDPC/B,ACOAhB,IDPI,ACOb,CDPc8F,ACOAxF,MDPzB,EAAiCyC,CAAC,ECOvB,CAA0B3C,CDPC,CAAtC,EAAyC,ECO9B,EAdqD,CAgBhE;ACOA,ARCI,AMhBF,AFuBEV,ALVJ,IKUIA,CAAC,CIRD,CAACwS,AJQE,CAFL,CLRK,CObC5D,APaA,CCGCxO,AMhBA,APaF,CSEP,CTFW,CSEC,AFfAkB,APaL,EAAO,CCGV,CMhBY,CAAC+B,CNgBCjD,AMhBF,APaT,CObL,APWyB,KCKH,YAAY2B,SAAlB,GAA8B3B,MAAM,CAACkB,IAArC,GAA4ClB,MAA1D;AQAF,AHiBJ,ALhBK,AMhBD,AFuBEwK,AGfJ,ANHA,AFQA,IKUIA,ECSAsB,CJ3BC,CMGCgE,CRKC,CSEC0C,AFfA/D,AFuBE,ALVF,CObC,ALKAxL,CGkBG,AHlBF,EI2BE,AChCA/B,APaL,CERM,COUC,AJQE,AHlBhB,AFQc,CMmBC,AExBA,ARKR,CObS,ALKA+B,COUChD,AFfAgD,ALKA,AFQA,CObC,ACQAhD,ARKX,CAHoB,CELP,CKLC,ALKrB,CKLgB,CAAd,ALKqBgD,CAAC,COUC,CAAC1C,ADPA,ANH1B,CMG2BA,CNHC,WOUX,CAAuB,ADPtB,CAAuB,OCOxB,CAAf,ADPgB,EAAiCI,UAAjC,CAA4C,IAA5C,CAAlB;ACQE4R,AHiBFxG,AChCE,AFmBA,AGXF+D,ANHE,AFQF,EMmBA/D,AExBA+D,CHAmB,CIOjByC,CJSA,CCQE,CGjBC,CAAC/R,AHiBA,CADS,ANlBR,CObC+H,ALKApE,AFQA,CObC,ACQA,CAAC7D,CNHC,CKLCY,APaL,EEROvB,AFQA,CERC,AFQR,CObS,ACQhB,CCOE,AFfesD,ACQAvD,ARKA,CSEC8S,AFfA,ALKA,GKLG,APad,CObS,ACQhB,ARC2B,COTzB,CEeA,APVsBvP,CMGChB,ANHX,CMGd,ENH4BrC,CAAC,GAAG,EAA9B;AI4BFoM,ALjBE,AMdA,AFuBErM,AGhBJmQ,ANHE,AFQF,EMmBA9D,AExBA8D,EHgBInQ,CAAC,EAAE,CAAC,CJTDiC,AIQL,ALVK,CMmBC,AC/BA8M,ALIAtK,AFQA,CQLC,ARKF,CMmBG,AExBA9D,CFsBK,ANjBJ,COZC,ALIA,GKJG,ALIAyD,AFQR,CCEL,AOPF,CAAiBtD,ARKA,CAAV,CCEY,ADPQ,EEHN,CAAC0D,CMGtB,CPOE,AMdsBqK,CAAT,ALIM,CMGKtM,ANHxB,CMGF,ANL4B,CKFA,ALM1B,SKNmCuM,CAAtB,GAA0B,SAASlG,CAAhD;AEcAiK,AHkBFvG,ALjBE,AMbA,AFsBErM,AGfJ,ARIA,EMmBAqM,EGlBEuG,AJUE5S,CAAC,CGfD4P,CHeG,CAFL,CJPK3N,ADFA,CSCC,AFZA8M,APWA,CSCC5H,AFZA,ACOT,ARIO,EQJI9G,ARIA,CCET,AMbUyO,GD8BG,ALjBA,ADFR,CSCL,AFZc,CD8BC,ANnBA,ESCE,ARCjB,AONiB,CFoBJ,AC3BKJ,ACOApO,CRIb,CANoB,EQEhB,CAAcM,IDPb,EEYmB,CFZC,GAApB,CCOD,CAA0BsP,CDPC,CAApC,OCO4C,CAACxP,MAApC;ACMP,AHkBJ4L,ALjBC,AMbChL,AFsBEsJ,AGdJ,ANJE,AFOF,EMmBA0B,EC9BEhL,AFsBEsJ,ECQA,EAAE,AC9BA,ACQA+B,CDRCtJ,ALIA,AFOA,COXD,AFsBI,ALXF,COXN,CFsBU,CHlBDC,CI0BC,AC9BAhC,ACQA,ANJA,AFOL,CMmBO,CAJC,ADJC,ALXF,CQHC,ANJA,CKJC,ALId,CKJe+B,CAAC,ALIAC,AFOX,CQHYoJ,ANJA,CFOC,COXC,APWd,COXS,ALIM,AFAK,CSQlB6F,AFZG,ALIV,EAAuBjP,CKJChC,ALIA,EAAxB,EKJ4B,ALIA,CKJC+B,CAAC,EEY5B,ADJW,CDRoB,ACQT,CCIJgP,AFZQ,CAAJ,GAActD,CAAtC,GEY4B,CAAChG,QAAD,CAAR,GAAqB,MAAvC;AACD,AHkBHwD,AC9BC,AFkBC,AGVAC,ANJE,AFOJ,EMmBAD,CD5BmB,CGMjBC,CCEA,AJaA,ILZK,CQHC,ARGA,CMmBC,CEtBCE,CFsBCb,CNnBJ,EAAO,IAAP,EAAa,IAAb,EQHUY,CFiBF,OEjBL,CAAgBpB,IADA;AFwB1BmB,ALjBAtK,AIUInC,AGfFoM,ANJE,AFFuB,CAAtB,CM4BLK,ALjBAtK,EIUInC,AGfFoM,CHeG,EAAE,CCOD,ADRJ,AGdI,EFsBEM,AEtBA,ENJEhI,CDSC,CAACtF,ICTI,EDSE,CCTC,CAACqF,CDSC,GCTG,EI0BPqG,ALjBS1L,CCTE,KDSjB,ACTuB,EDSA,ECTImE,CAAnB,MAA4B,CAA5B,GAAgCe,KAAhC,GAAwCD,GAAvD;AOQFwO,AHYa,ALVb,AMbF5D,AFuBIhP,AGlBsB,ANAtB,CIkBN,CCvBEgP,CCKe,CCMb4D,AJYE5S,AGlBJ,CHkBK,EAAE,CAFL,EIVM,AREAU,CQFCmS,CPNCpP,IDQI,ECRE,CDQCpD,CQFf,AFXgB,CAACiB,ALKAgC,CAAC,COMC,EFXH,ALKK,CKLvB,ALKmB,CDQM,CAAC3C,CCRC,IAAI,CAAJ,GOMzB,APNiC0C,CAA/B,GDQa,CAAuB,QAAvB,CAAf;AQDD,AREC3C,AMZF,AFsBIkK,AGdJ,ANJI9H,IDQFpC,AIUEkK,EHlBA9H,EMIE,CDRCxB,CNYC,AIUE,CJVDa,ACRA,CGkBG,AHlBFsB,CKJV,GFsBgB,EHlBA,EDQd,CCRiB,CAAV,CDQY,ACRjB,GAAoBgB,GDQtB,GCR4B,CAAC,CAAD,CAA1B;AI0BS,ALjBX/D,AMZH,AFkBG,AGXMgC,ANHJI,GGPe,CJejBpC,AOLMgC,CHgBN,CCMiBgK,AJzBf5J,IDQI,CAACvC,ACRA,CIyBI,AJzBHkD,CIyBgB,ALjBxB,AOLe,EAAEoF,CPKL,ECRE,GDQGtI,ACRA,CAAV,CDQP,ACRE,GAAoBkE,MAAM,CAAC,CAAD,CAA1B;AOOJrF,AHmBAe,ALjBEhB,AIWEY,AGjBE,ANFF+C,EOMJ1D,AHmBAe,ELjBEhB,AIWEY,CAAC,CGjB0B,ANF3B+C,CGmBG,CIbD,AJYJ,CIZKgQ,CREC,CAAClS,ACRA,CME4BuP,ANF3B1M,CIyBC,CAACyG,EGnBZ,CAAeyI,CDJ4B,ANF3B,CME4B7R,CCI5C,CHmBW,AJzBQ,CDQjB,AONyC,ANFlC,CIyBY,ALjBAJ,ACRjB,CME6CwP,ENFzBzL,GDQtB,GCR4B,CMEa,ANFZ,CAAD,CME8BkI,ANFxD,MMEuC,EAAyB;ACKpE,AHmBE,ALjBA,AMZG,AFuBD3M,AGjBFqM,ANFEvJ,IGmBA9C,AGjBFqM,CHiBG,CHnBDvJ,CGmBG,CAFL,CIXKhC,AHmBAoJ,ALjBApJ,AMZOkO,ELIL,COMT,AREE,ACRQvL,GDQG/C,CKiBX,EJzBc,CIyBC,AEvBA,EFuBE,ALjBA,AONA,ANFA,CDQCK,ACRX,CAAL,CIyBkBmL,AExB8C,END5C,CKJnB,CAA4BxJ,CLI7B,GIyBa,ALjBJ,CAAkB,IAAlB,AMZR,CNYH,CMZ0C;AEW7C,AHkBiC,ALf9B,AMbF,AFuBIkI,AGjBF4B,ANFC,IGmBC5B,AGjBF4B,IDNIhG,CD4B6B0D,CLf3B9H,AIUE,AGjBF,EDNE,AFuBE,AGjBFsK,GPOG,AMbA,CFuBG,EJVA,CMbCxM,CNaf,QOPeuM,IDNJ,CAAS/J,GCMZ,CAAgBsI,KDNb,CAAb;AD4BiB,ALdf,AIMA,AGhBkE,ANCnE,GGXkB,AGUwB,CAA3C,CFwBE,ADHA,KJXM3I,CAAC,GAAI3B,MAAM,CAACZ,KAAP,GAAe,CAA1B;AQFJ,AHiBG,ALdC,AMdF,AFyBIC,AGjBJ,IHiBIA,CAAC,EEzBA,AFyBE,CADL,AGhBI,EPMEuC,CAAC,AMdAtC,CAAC,ENcGU,CQHAqS,AFXA,CAAb,EAAgB/S,CAAC,CNcE,CAACa,CMdA,IEWtB,CAA2BS,ARGZ,CMda,CAA1B,CNc6B,CQH/B,ARGI,AMd2BtB,CAAC,CEWC+I,CFX/B,EAAkC,KEWpC,EAA2CtD,IAA3C,EAAiD;AAC/C,ARGE/E,AMdA,AFyBEV,AGlBI0C,ANFR,IDSEhC,AIWEV,AGlBI0C,CHkBH,CIdDqG,CJcG,CAFL,CEvBK,ALKAjG,CDSC,CAAClB,EMdE7B,ACOM,CCIL,AFXA,ALKZ,COMa0S,ADJMrC,CPOjB,CAAa7N,AMdA,CAAb,EAAgBxC,CAAC,GAAG,EEWlB,GAAuB2S,CFXC,CNc1B,AMdA,EAA6B3S,CNcC,AMdA,EAA9B,CEWE,CAAgC,AFXA,MEWhC,CAAJ,ARGE,EQH2C;AAC3C,AHiBF,ALdEW,AMdE,AFyBAkK,AGnBE,ANDP,IDSGlK,AIWEkK,EGnB6B,IPQzB,AIWE,CJXDhJ,CMdCoC,AFyBE,AGnB2BqM,CFsB5BxE,GLdT,AIWc,CJXD/L,AMdA,GAAG0G,ENchB,EMdoB,CNcE,AMdD1D,ACM6B,CAACoN,CCKtC5O,CRGWe,CKc1B,ALd2B,CMdT,CEWhB,AFX2BtC,CD4BC,ALdAqC,AMdZ,CEWGwO,CFXW5Q,CAAd,ACMkC,CDNhD,CNcgC,AOR4BkQ,IPQ9D,CQH4B,CAACnH,GDLqB,CAApD,CAjCgE,CAmChE,ECG8B,CAA5B;AACD,AHiBC,ALdArI,AMbE,AFoBF,GIZF,AJnBmB,CJwBjBA,CIYA,IIfK,CRGC,AMbAuO,CD2BCpD,ALdAjK,KAAP,CAAaf,CMbC,GAAG,CAAf,CNaF,GAAuB,CKcvB,ELdyByB,CAAC,GAAGF,KAAM,IAAnC;AQFA,AHiBD,ALdC1B,AIYEX,AGnBJ,ANFK,IDSHW,AIYEX,CAAC,EAAE,CAAC,AGnBFoE,CHkBJ,CIdM3C,ARGA,CAACI,GQHG,ADJA,CNFQ8C,CDSlB,CQHa,ARGAlC,AOPA,ENFV,CAAoBf,COMN2H,ADJAlK,ENFd,EOMU,APNe,COMN,CAACoC,CRGvB,CAAyB,EQHH,ADJT,CCIA,ADJgB,ECIC,IRG9B,AOPmC,EPOC,COPR,GAAc,CPODrB,AOPb,GAAkB,EPO9C,COPa,CAAf;ACIkCwF,ARIhC,AMdE,AF0BAzF,AGnBJ,ANFA,IGqBIA,CAAC,CIhB6ByF,CJgB3B,CAFL,CJVKzD,ACTA,EKLE,ELKE9C,EKLEmE,CAAC,ENcZ,CMde,CAAb,CNce,CMdCA,ACOV,CDPW,ACOrB,ANFO,EDSL,AOPWc,ANFS,CKLE,IAAI,CAAJ,ACOxB,ANF4B,CAAC,CMERiM,CDPW,CAA5B,EAA+B/M,CAAC,ALKDsB,IKLK,ACOV,CDP1B,ACO2BrD,ANFS,CAACG,CKLE,ECO3C,ANFwC,CAAZ,EAAmBmD,WAAnB,EAArB,EAAP;AOKgC,AHmBhC,ALbE,AMfI,AF0BFgG,AGnBJ,ANFD,IGqBKA,CIjBW,CAAb,IJiBQ,CJXD,CMfC5G,AF0BE,CCEDyI,ELbT,CIWc,CE1BD,CAACpJ,CAAD,CAAL,CD4BV,CErBU,CAAV,CFqBsB,CC5BC,ACOVc,CDPP,EAAoB,GCO1B,EAAqBiM,SAAS,CAAC9O,IAA/B;ACGE,AHmBA,ALbD,AMfO,AFsBN,AGfF,GHrBmB,EAyCjB,KIlBMG,CHmBCgL,EGnBE,GAAG/K,GAAG,CAACC,EDFR,CAAV,EAAawC,GFqBX,GErBF,EAAqBiM,ECEP,CAAoB5O,IAApB,CAAZ,CDF4B,CAACF,IAA/B,EAvCgE,CAyChE;ACCE,AHmBD,AC5BO2N,AF2BJlP,AHtBN,IGsBMA,CAAC,EAAE,CAAC,CADN,CIjBMgK,AFTAkF,GESG,EPJEpK,COIC,EFTE,ELKlB,CKLqBoK,ALKAnK,COIC,CPJtB,EAAyB,IKLI,GAAG,CAAtB,UESmB;AAAErD,ARO7BgB,AMfO,AF2BHzC,AGnBJ,ANHA,EDUAyC,EIYIzC,CJZD,AIYE,CInBwByB,AROzBiB,CIYG,CAFL,OJVC,EAAY,SOPDyB,MAAd,EAAsB0E,OAAtB;ACA2B,AHqB3B8D,ALbE,AMfG,AF2BD/B,AHtBJ,EIuBA+B,EDDI/B,CIpBgB,CAAlB,APFE,CAAC9F,CIuBC,CAAC1E,AJvBP,CDUQU,AIYE,CHtBD,CGsBG,CJZD,EKaL,CLbQ,AIYE,CCCDhB,ILbIgB,CKab,EAAgB8L,ALbpB,QKa4B,GAAG,EAA3B,EAA+B;AGpBnClJ,AHqBA,ALbA5C,AIQA,AGfF,ANHA,GGvBmB,CIyBjB4C,ARQA5C,CIaA,CGpBE6O,CPOC,CKaCtM,ALbAV,CKaJ,AEpBF,ANHO,EOEE,AHqBAkK,AEpBA,CCDClJ,AHqBR,CJvBSoB,CIuBC+H,CGrBV,CAAY/C,CHqBZ,EGrBA,AHqBehK,CAAf,ALbA,ACVK,CDUY2C,ACVAsC,CIuBChF,CAAlB,KJvBwB,EDUxB,EAA4B,ACVAiF,CDU5B,EAA+B,CAA/B,MCVsC,CAAC,MAAMD,OAAO,EAAd,EAAkBF,EAAlB,CAAjC,CAAP;AOGE,AHqBA,ALbD,AMfG,AF4BA/E,AGpBF,ANHH,IGuBKA,CAAC,EAAE,CADL,ECCMmK,AC5BA+E,CCQC,MFoBM,CC5BC,ED4BE,CC5BC,CD4BC,CC5BhB,ED4BmB,AC5BA,EEORlF,GAAb,AHqB0BG,EGrBR0G,KHqBF,IGrBW,CAAC7H,QAAD,EAAWgB,GAAX,CAA3B;AACArI,AHoBmC,AC3B/B,AF4BF1B,AGpBAmE,ICDFzC,AJqBE1B,CAAC,CGpBDmE,CCDC,AJqBE,CIrBDmF,AJmBJ,CCCsCsD,GEpB/B,WCAP,CAAoBnL,GAApB;AACD,AHmBiB,ALXlBmB,AMfM,AF4BFgI,AGpBA/B,ANHN,EDUEjG,EIaIgI,CCFF,CElBE/B,CPOC,CAAC9I,CAAD,CIaK,CJbDC,CAAJ,AIaO,CE5BD,ACMF,CPSG,CCVCyC,CGuBG,CE5BDY,CAAC,ALKlB,CAAmBvC,EKLE,CAAb,ALKR,EKLwBuC,ALKAX,CKLC,GAAG,IAAI,CAAJ,ALK5B,EAAmC3C,CKLC,ALKpC,CKLQ,CLK8BC,CKLCqD,ALKvC,CKLwC,CLKC,GKLG,CAApC,EAAuC;AEQ9C,AHoBG,ALZA,AMfM,AFwBN,AGhBE+M,ANHJtP,EAAAA,CG3BmB,EAmDjB,AHxBC,CMGCsP,ANHAzN,IIsBIoK,ALZAlK,CKYC,ELZE,CKYC,CEtBH,CFsBP,ALZa,AMfDqM,CAAC,CLKf,CDUiBnP,ACVA2C,CDUE,AMfDsB,INeIhE,CAAE,AMfD,CAACqD,CNetB,AMfqB,CAAL,ALKlB,EAA4BtD,CAA5B,EKL+B,ALKAC,CKLb,ALKlB,GKLmC,GAAjB,GAAuB,CAAjC;ANgBN,AMfMgE,AF6BJjE,AGrBAuQ,ANHJ,IGwBIvQ,CAAC,CGrBDuQ,CHqBG,CJdDzN,AIaJ,AHvBIgC,EKLEb,CNeC,ECVE,CAAC,CKLC,ALKF,CDUG,AMfAX,ALKd,CKLa,CAAL,ACQQ,EAAEvC,CPOCmB,AMfA+B,ECQE,CAAC3C,EPOpB,AMfsB,CAACgC,CNeC,AMfA,GAAG,CAAL,CAAL,GAAeW,ACQhB,CAAiB,CAAjB,EAAoB,CDRC,ACQrB,CDRsBX,CAAC,ACQAhB,CAAvB,EDR0B,ACQAC,CDRL,ACQrB,CDRgB,GAAe4M,CAAzC;AEQV,AHmBI,ALXA,AMfK,AF6BHlP,AG1BK,ANEV,IGwBKA,CAAC,AG1BH,EH0BK,CAFL,CCAEqD,ALZGpB,CKYF,GAAG4K,CAAC,ALZP,GKYU,ALZGhK,CQRZxC,AHoBC,EAAWyM,ALZb,GKYgB,GGpBP,AHoBU1M,CGpBTE,IAAd,CHoB6B,CGpBTyS,AHoBU3M,MAD1B,EAEE,GGrBN,EHqBW0G,GAAL,GAAWD,CAAC,IAAIC,GAAhB,GAAsBD,CAAC,IAAIC,GAF7B,EAGEzJ,CAAC,GAAG,KAAKyJ,GAAL,GAAW,EAAED,CAAb,GAAiB,EAAEA,CAHzB,EAIE;AGrBN,AHsBME,ALfF,AMfG,AF6BDnC,AGrBH,IHqBGA,ECCAmC,CAAC,CAACpH,ALfA,CAAC,CQPP,AJqBU,ECCN,ADDQ,CCCDvF,CLfC4B,EIcI,CIrBlB,EAAWgI,AHsBQ,CAAC3G,CGtBpB,AHsBmB,CGtBL,AHsBR,CLfF,EAAqB,KQPzB,ARO8BnB,EQPNjD,KAAK,IAAI,AROR;AQNvB,AHsBG,ALfD,AMfC,AFyBD,AHpBJ,GG/BqB,EAwDjB,GItBIwQ,EROE/M,EQPE,GAAGzD,APHAiG,IDUI,ACVnB,COGoB,APHApE,COGC3B,CROC,CCVtB,EAAyBgG,CDUCpD,CQPX,CAAalD,EPH5B,EAAgCyC,COGjB,CAAmB,CAAnB,AROO,CQPpB,AROkC,ACVpC,EAAsC,GDUGwB,KAAL,CAAW/C,CAAX,EAAcC,CAAd,CAAd,EAAgC,CAAhC,EAAmC,CAAnC,CAAlB;AQNF,AROE,AMfD,AF8BGD,AGtBJ,ANHA,IGyBIA,CAAC,EAAE,CItBDjB,AJqBJ,AHxBI4D,CDUC5B,AOPAqD,GPOL,CAASxB,CQPC,CDAZ,CArDgE,CCqDjD,ADAA,ANHA,GAAG,COGC5D,GPHGoE,CDUpB,CAAsBT,KQPT,EAAf,EROE,EAAiC,CAAjC,EAAoC,CAApC,ACVgB,CAAsB,IAAI,CAA1B,CAAlB;AIyBE,ADCE1C,AGtBL,ANHC,IGyBIA,CAAC,CHzBDoF,CGyBG,CAFL,CHvBK,CIwBCvE,EJxBE,CAAV,GIwBc,GAAGT,MAAM,CAACgG,MAAP,IAAiB8D,OAAO,CAACkC,QAAR,GAAmBtM,KAApC,CAAf;AGrBFhB,AHsBE,ALdA,AMhBF,AF+BI8L,EIvBJ9L,EJuBI8L,IIvBE,ARQA,CQRC5L,AFRA0D,CD8BCtD,ADCE,EAAE,CJfDgC,EQRX,CHsBc,ADCE,EIvBAnC,AFRhB,CD8BiB,EAAf,CLdA,CQRmB,CRQC,GQPpB8T,WAAW,CAAC,IAAI7T,UAAJ,CAAeD,KAAK,CAACE,MAAN,CAAaC,MAA5B,CAAD,EAAsCqQ,IAAI,CAACuD,IAA3C,EAAiDvD,IAAI,CAAChK,IAAtD,CADb;AHuBEzF,ALdE,AMhBL,AF2BG,AGlBJ,ANJE,GGlCmB,CC2DjBA,ADzFW,CCyFV,EJzBE,CIyBC,CAAJ,EJzBOyD,CDWC3C,GAAG,AOPAyP,ENJE,CDWC,ECXE,CAAlB,EDWqBnP,ACXAqC,KMIvB,CAA6BU,ANJA,GDWvB,ACX0B,CAA9B,EMIF,ANJmCV,EMIE,INJI,EAAvC,EAA2C;AOI3C3E,ARQIgC,AIgBJiK,AGvBA,ANJE,EOGFjM,AJwBAiM,IJhBIjK,EQRE,AJwBA,AGvBAA,CCDCzB,ARQA,ACXA,CDWCyC,AIgBA,CACN,AGxBO,ENJEuD,CMIChF,GNJG,EDWX,CAAc,ACXA,CDWd,ACXF,CMIkB,CPOC,AOPAM,ANJA0E,CDWjB,EQRJ,ARQwBvE,CQRC2O,APHA,EDWE,CAAC/O,ACXA,COG5B,APHE,EAA6B2E,GDWP,AOPZ,CPOuBvF,AOPA,ANJA,EAAjC,EAAqC,CDWnC,EAAsCgB,COP9B,EPOiC,AOPAC,CPOCL,MAAJ,CAAWG,EOPzC,CAA4C,GPOpD,COPQ,CAAZ;ACAD,AHqBG,ALbEC,AMhBN,AFiCMf,AGxBJ,ANJI,COHN,GJ+BMA,CAAC,CJjBDe,CIiBG,CADL,AGvBIJ,CPOC,AMhBAyO,CNgBCpM,CKaC/C,AJxBA,CIwBC,CC7BZ,CACEkD,ACQY,CFoBCrC,AJxBAwC,CAAC,CMICvC,ENJE,CKJX,ACQY,ANJd,CIwBF,ALbE,AOPeJ,CNJC2C,CIwBC,AC5BZ,ALIY,CDWC,ECXE,CMIxB,CNJI,EAAwBA,CDWxB,ACXyB,EAAzB,EAA6B;AIyB7BtD,ALbAe,AMhBOhB,AFiCPE,AGxBJU,ANJM,EKLKZ,ACSXY,EHwBIV,CAAC,CCJDD,ALbAe,CKaC,AC7BW,AFiCT,CAFL,AGtBI,CPOC,AMhBW,ACSXhB,CFoBC,ALbAkD,AMhBC,CD6BL,CJxBMM,CAAC,CMIX,ENJc,CMIC,ANJT,GDWF,AOPJ,CPOmBvD,CAAC,GAAG,CAAJ,GAAQ,GAAvB,EAA4BC,CAAC,GAAG,CAAJ,GAAQ,GAApC,EAAyC,CAAzC,EAA4C,CAA5C;AACAc,AMjBiBD,AFkCjB+J,AGxBJlK,ANJM,EKNeG,ACUrBH,EHwBIkK,EJjBA9J,EMjBuB,ACUrB,CPOC,AOPAD,CPOCkC,AMjBqB,AFkCnB,EAAE,EH5BAwB,CMIZ,CHwBgB,CH5BD,CMIC,ENJEa,CDWd,AOPJ,ENJqB,CDWC,CCXhB,MDWF;AKaA,ALZAtE,AMlBK,AF+BP,AGnBFA,ANLM,CKRR,CCaEA,CDXAsO,AF6BQ,EAMN,AGxBC,CPMCtO,AONA6B,GPMG,CAACK,GKYGjD,CAAC,AC7BD,ALMCyE,GIuBG1E,AC7BD,CCWd,ANLgB,CMKCqE,CPMb,CAAepE,ACXAuB,CIuBf,ALZgB,EKYE,CLZC,AONvB,ANLuB,CDWJ,ACXKiD,CMKC,CAAzB,CPM2B,ACXJ,CMKK,ANLtB,CMKN,ANRiC,CDc7B,ACTE,EDS0BvE,CAAC,GAAG,CAAJ,GAAQ,GAApC,EAAyC,CAAzC,EAA4C,CAA5C;AKaE,ALZH,AMlBaF,AFoCZC,AGvBJ,EDbgBD,EFoCZC,CAAC,EEpCgB,AFoCd,CADL,AGtBI0B,CDbiB,CAAT,CCaL,EFiBEuL,CEjBCtM,MAAM,CAAC8P,GFiBb,CAAiBzQ,CAAjB,EAAoBC,CAApB,CEjBM,CFiBiB+M,AEjBA,CFiBvB,EAA0B3N,MAA1B,EAAkCU,AEjB5B,CAAZ,IFiBM,EAAyCoK,OAAzC;AACAnK,ALZL,AMnByBc,AFqCtBb,AGvBJ,ANLM,EKToBa,EFqCtBb,CAAC,EAAE,CCNDD,AC/B0B,AFmC9B,AGrBIU,CFiBC,CC/B2B,CCczB,EFiBEyJ,CEjBC,CNLC5G,CAAC,EMKEuM,CNLC,CIsBC,AJtBZ,CIsBa1D,CJtBC7I,CMKR,ANLS,EIsBf,AEjBN,ANLM,EAAmB;AIuBpB,AChCS,AFsCVsH,AGvBJnK,ANLQ,CKZV,CCiBEA,CDdA,CFqCImK,CGvBD,CAACmF,GAAJ,CHuBU,EAAE,AGvBFtO,GAAV,CHuBgB;AJjBhBqB,AMnBA,AFiCE,AGnBF,ANLQ,EDURA,CIQQ,EAWN,EJnBG,CAAC/C,CAAC,AOLA,GPKG,CAAL,AOLMgF,EPKE/E,CAAC,ACVAsF,GDUG,ACVA,CDUZ,AOLE,CAAYN,CPKC,ACVA,CAACR,IAAI,CMKC,ENLG,EMKE/D,GAAG,ANLC,CMKAzB,GNLIsE,CAAnB,EMKW,GAAa,CNLI,CAA5B,GAAgC,CMKF0B,ANL9B,GAAoC,GAAhD,CMKiD,CAACvE,GAAD,CAAlD,CAAP;AFiBIT,ALXF,AMnBF,AFsCID,AGxBL,ANJS,IG4BJA,CAAC,CCRDC,AC9BAD,CD8BC,AC9BA,AFsCE,CAAC,CADN,CJlBMkD,AMnBA,CD8BCiH,AC9BT,KLUczG,EIoBE,CAAC0I,ELXE,CCTC,CIoBhB,CLXkB,CCTC7I,CAAC,CDStB,ECTyB,CAAnB;AIqBL,ALXD,AMnBF,AFsCItD,AH5BI0C,IG4BJ1C,CAAC,CEtCDA,CAAC,AFsCE,CAFL,EJjBMF,AMnBA,ALUA4C,CKVR,CAHA,CAKA,ENiBa,GAAG,CAAd,ACTe,CAACe,MAAM,GAAG,CAAV,CAAT,GAAwB6B,GAAxB;ADUN,AImBEsF,AGxBS,ANJLlI,IG4BJkI,MJnBI/J,AImBE,AH5BF6B,EG4BI,GGxBgB6D,CPKd,AImBE,GJnBC,AOLJ,ANJI,CDSf,AOJF9E,ANLkBgC,GMKf,GAAI,ANLiB,GAAG,CAAV,CAAT,GAAwB6B,GAAxB,mBMK4BmL,MAAM,CAAC,2BAAD,CAA8B,EAD3D,EAEb;AFcE,ALVA,AMlBF,AFiCE,AGlBF,ANNQ/N,GGaA,EAgBN,CEtCE2M,INkBInM,ACTAR,CImBCtD,EC5BE,GNkBG,AMlBA,CD4BZ,ELVe,ACTA,CAACqE,GKTlB,CNkBsBrD,ECTE,GAAG,CDSzB,ACTe,CAAT,GAAwBkF,GAAxB;AIoBP,ALTC,AMnBF,AFsCIvF,AGvBJ,ANNQ2C,IG6BJ3C,CAAC,CEtCDuP,CFsCG,CAAC,CADN,CJlBMhO,ACVAoB,IDUI,AMnBA,GNmBG,AMnBA,ELSE,CAACe,CDUCN,IMnBnB,CLSwB,GAAG,CAAV,CAAT,GAAwB,GAAxB,CDUO,AClBU,CDkBYrD,ACVA,KDUK,GAAGe,MAAR,GAAiB,CAAvC,CAAb;AAEA,AIkBEb,AGtBJ,ANPO,IG6BHA,CAAC,EAAE,CAFL,EJhBMoD,KAAK,GAAG,KAAd,CARkB,CAQG;AKSvB6J,AC7BA,AFuCIrC,AGtBJ,EFYAqC,EDUIrC,EEvCAwE,ECiBE,EHsBI,EAAE,ICVE,ADUE,CCVDrP,AC7BA,CD6BD,AC7BED,ED6BEE,CAAJ,EAAOF,AC7BjB,GAAoBsP,ED6BV,EAAchD,OC7BO,CD6BrB,AC7BsBvL,ED6BE,IC7BtC,EAA4C;AD8B1C,ALRA,AMrBA,AFmCA,AGnBMsD,ANPF,GGUE,CGHAA,CDhBLkL,AFwCD,IJnBK,COLD,CFaGjD,CC7BP,CNqBS/I,CAAC,AMrBAiM,ALSAvP,CAAC,EDYE,CAAb,ACZcsD,CIoBC,AJpBA,CDYCA,CAAC,CKQCtD,AC7BlB,ALSkB,CIoBX,AJpBH,CDYgBc,EKQEuL,AC7BA,CAACkD,GNqBvB,EAA4BjM,CAAC,CKQC,CLR9B,AMrBsB,ED6BWrD,ALRA,AMrBAqP,CD6BX,GAAevP,GC7Bf,CAAtB,CD6BA;AACD,ALRG,AMrBH,AFwCGC,AGzBY8I,ANNV,GKnBN,CAYA,AFsCI9I,AGzBY8I,CHyBX,EAAE,CADL,GGxBI,CPMIvF,CAAC,CCZCtD,CAAC,CDYCH,ECZGiB,GAAG,CAACJ,MAAJ,CDYU,ACZCG,CDYAoC,KCZX,GAAoB,CAArB,EDYW,CCZekC,CDYDpF,CAAC,GAAG,ACZ7B,CDYW,EAAqBC,ACZEqF,CDYD,GAAG,ACZE,CDYN,ECZS,CDYDhC,ACZxC,CDYW,CAAvB,CCZyDI,MAAvD;ADaF,AImBAzD,AG1BqBoQ,ANLnB,IG+BFpQ,AG1BqBoQ,CH0BpB,EAAE,CAFL,IJjBQ7M,COPJ,CNLMd,GDYG,ACZA,CAAC3B,EDYEwC,CAAC,ACZJ,EAAM,CDYC,CAAlB,ECZqBvB,SAAJ,CAAcW,SAAd,EAAyB,CAAzB,EAA4B,CAA5B,CAAN,EAAsC3C,CAAtC,EAAyCC,CAAzC,CAAT;AIqBNgN,ALRI,AImBApC,AG3BgC0F,ANJ/B,EIoBLtD,EDWIpC,AG3BgC0F,MH2B1B,EJnBA9M,AImBE,CCXD,CAACzD,CAAD,ALRE,CImBG,CCXDC,CAAJ,ALRKuD,EKQEwJ,CAAP,EAAU3N,ALRA,GAAGU,GKQb,EAAkBA,ALRA,GAAG,CAA5B,CKQO,EAAyBoK,OAAzB,EAAkC;AAC3C,ALRE,AMrBJ,AFoCE,AGxBI,ANHH,GGMK,EA0BN,CG7BmD,EFiB/CgD,AC7BAH,CAAC,GNqBGtJ,AMrBAP,ACYiDyJ,MPS3C,AMrBA,ACYiD,CDZhD0C,CD6Bf,AEhBA,CPQiBhM,CKQCA,ALRA,CKQlB,EAAqBC,ALRAxD,CKQrB,AC7Bc,CAAN,CD6BgB+M,CAAxB,CLRiB,AMrBSuC,CD6BCjC,CAA3B,CLR6B,CKQCC,ALR5B,OMrBmC,CD6BrC,AC7BsCiC,ED6BEhC,CAAxC,EAA2CP,EC7BN,CD6BrC,AC7BF,CAbA,CD0CkDQ,AC7BA,ID6BhD;AACAjK,ADYEtD,AG5BF0B,ANJD,EMICA,EFgBA4B,ADYEtD,CCZD,ADYE,AG9B4D,EH8B1D,AG3BL,CFeI,ADWJ,GG7B+D,CAAjE,CFkBWkN,cAAL,CAAoBlN,CAApB,EAAuBC,CAAvB,EAA0BF,KAA1B,EAAiCoK,OAAO,CAACkC,QAAzC,CAAJ;AACAc,ALTE,AMpBJ,AFyCIlN,AGzBJ,ANPD,EAED,EIkBIkN,ADYElN,CAAC,EAAE,CEzCDF,AFuCJ,AGvBI4Q,EPIEtN,GMpBG,ENoBP,AOJS,CFaC,AC7BCgM,CNoBA,COJC,CFaC,EAAf,CEbkBhG,IAAJ,CDhBU,ACgBD,CDhBEtJ,ACgBDqE,KDhBX,CCgBU,CAAT,CDhBmB4I,CAArB,ACgBqB,GDhBK,CAAxC;ANqBMrJ,AMpBN,AFyCIkH,AGzBF,IHyBEA,IJrBElH,AMpBA7C,EFyCI,EAAE,EEzCA,CNoBC,CAAC8C,AIqBE,CEzCAyL,ENoBV,CACE,AOLU,QDhBS,CAACvO,MAAZ,GAAqBkM,CAAtB,GAA2B,CAA1C,INoBM,EAEEzJ,CAFF,EAGEC,KAHF,EAIEC,GAJF,EAKEzD,CAAC,GAAG,CALN,EAMEsD,CANF,EAOEH,MAAM,CAACU,QAAP,CAAgBL,KAAhB,EAAuBC,GAAvB,CAPF;AKSJ,ALAG,AISH,AGvBiC,GHH3B,AGGQ,CAAhB,CH4BE,ICbEF,CAAC,GAAGuJ,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG5C,OAAO,CAACkC,QAD3B,EAEE,KAAKU,GAAL,GAAWD,CAAC,GAAGC,GAAf,GAAqBD,CAAC,GAAGC,GAF3B,EAGExJ,CAAC,GAAG,KAAKwJ,GAAL,GAAW,EAAED,CAAb,GAAiB,EAAEA,CAHzB,EAIE;AACAK,AChCJ,AF0CInN,AG1BJ,ANPK,IGiCDA,CAAC,CCVDmN,AChCAmC,CF0CG,CADL,AGzBIsB,KDhBK,CCgBC,CNPQpL,EMOL7D,CFgBC,AChCA,CDgCCiE,CEhBC,CAAChE,ANPd,CAAsBb,CIuBvB,CAAkBiM,CAAC,AJvBlB,CIuBmB1J,AChCxB,CDgCyB,AJvBOmB,CKTN,EDgCElB,CAAL,AJvBlB,CIuBD,CJvBkCC,GMOvB,CAAoBmN,CNP9B,EAAwC,IMO9B,CAAf;AFiBG,ALLCpP,AM3BFvB,AF0CEC,AGzBJ,ANRA,IKTED,AF0CEC,CE1CD,AF0CE,CJfDsB,CIeG,CE1CD,AFwCJ,AGvBIsP,ANRAzL,CKTCjC,CN2BC,CAAC1D,EClBE,CDkBP,CAAS0D,AM3BA,CAACoM,ALSA/L,CMQC,GAAGlD,CPUC,AClBA,CDkBCwD,EM3BP,CAAN,ALSgB,EDkBV,AClBb,CDkB0BN,AM3BAzD,ACiBA,ANTmB,CMSlBa,ANRA,IDkBd,AM3BP,EN2B2B6C,EM3BE,CN2BtB,AM3BX,CN2BE,EAAmCC,COVrB,CAAuB,IPUrC,COVc,CAAlB;APWG,AM3BF,AF0CGmH,AGzBJvK,EAAAA,CDnBA,CF4CIuK,KE1CG,CF0CG,AGzBF,CAACtK,CHyBG,GGzBZ,CHyBgB,AGzBFM,WAAd,CAA0BgQ,SAA1B;AFeExD,AC/BApN,AFsCA,AGpBF,ANTA,GGFQ,CCwBNoN,AC/BApN,CAAC,AF2CD,CHlCEmF,EKTE,ACkBA0L,CDlBC3N,ELSE,CIsBC,EEbE,CFaCgH,AC/BA,CAACoF,ALSA,CMSCjP,ANTf,EAAiB,GIsBG,CAACkM,CC/BR,CAAN,ACkBgB,CAAC5L,EDlBEE,ID+Bb,CAAkBqM,CC/BzB,IAA8B,CAAlC,ACkBa,CAAuB,KFazB,CAAX,EEba,EAAiCnM,UAAjC,CAA4C,IAA5C,CAAf;AFcEsM,ALJA,AM3BD,AF2CGtN,AGzBJ8Q,ANTE,EMSFA,EFaExD,ADYEtN,CCZD,ADYE,EAAE,CCZD,ADYE,AGzBF,CHwBJ,AGxBKW,CFaL,CLJOY,IAAP,AOTF,CAAcxB,KAAd,GAAsB,GAAtB;APUC,AIgBGE,AGzBJ6Q,ANTE,EMSFA,EHyBI7Q,CAAC,EAAE,CAFL,AGvBI,CAACU,CNTC8E,KMSR,CAAc3E,CNTC,GAAGyD,EMSlB,GAAuB,GAAvB,MNTgC,CAACE,IAAD,CAA9B;AIsBA,AC9BF,AF2CIoG,AGzBJgG,ANTE,EMSFA,EHyBIhG,KCZAtH,AC/BG,CD+BF,ADYK,AHlCFvD,CMSC,ANTA,CGkCG,AGzBFa,CFaFuM,CAAC,AJtBI5J,EGkCG,CCZJ,CAAR,CJtBc,CIsBH+J,EJtBM,CMSrB,CFamB,AEbGuD,ANTV,GIsBU3G,AJtBK,CAAzB,EMS0B,CAACxJ,GFaA,CAAC0L,EEb9B,EAtBA,CAuBA,GFWE,EAEE,KAAKkB,IAAL,GAAYH,CAAC,GAAGG,IAAhB,GAAuBH,CAAC,GAAGG,IAF7B,EAGEhK,CAAC,GAAG,KAAKgK,IAAL,GAAY,EAAEH,CAAd,GAAkB,EAAEA,CAH1B,EAIE;AACAE,ALrHoB,AMkFftN,AFwCP,AH9BA,GGNM,CEJCA,CAAF,AF6CL,CCVEsN,CAAC,CAAC/J,CAAD,CAAD,AJzBItD,CAAC,EIyBE,CAAC+M,AJzBC,CIyBA,AJzBCxJ,CIyBAF,CAAC,GAAGC,AJzBC,CIyBN,CAAD,EJzBW,CIyBA8J,AJzBV,IAAe,EAAhB,EIyBmB,CAAC9J,AJzBE,CIyBH,AJzB7B,CIyBS,IAA2B4G,OAAO,CAACmC,eAA1C;AACD,ACpCSrM,AF8CRD,AG1BJ,ANRE,IKZUC,AF8CRD,CE9CG,AF8CF,EAAE,CAAC,CADN,CHjCMiE,KAAK,GAAGlD,GAAG,CAACO,GMQP8C,MAAb,EAAqB0M,CNRL,CAAiB9Q,CAAjB,EAAoBC,CMQpC,ANRgB,EAAuB,CAAvB,EAA0B,CAA1B,CAAd;AKZaF,AF+CXE,AGzBJ,IDtBeF,AF+CXE,CAAC,EAAE,CAFL,AGvBI8Q,CDtBC,CCsBC,GAAGzQ,QAAQ,CAACM,aAAT,CAAuB,IAAvB,CAAX;AFeE,ACrCoBE,AFgDlB+J,AGzBJkG,ANVE,EMUFA,EDvBsBjQ,AFgDlB+J,AGzBF,CAAC3D,IFcIsG,AJxBA,CGmCG,EAAE,CHnCDlK,CMUX,ANVY,EGmCI,CGzBA,ANVD,CAAb,EAAgBA,CIwBhB,AJxBiB,CIwBC0J,CAAlB,CJxBoB,CIwBCM,CAArB,EAAwBtN,AJxBA,CIwBxB,AJxBA,EIwB2BC,AJxBAqD,CIwB3B,AJxB4B,CMUCsN,CFcC7Q,AJxB9B,EAAgC,GIwBhC,AEdoC,EFcCoK,OAArC,2CEdF;AFeE,ACtCK,AF6CL,AGpBF,ANXI,GKdJ,AFIQ,EA8CN,GGzBI6G,EAAE,CFaC,CJxBCtL,CMWCpF,GFaGmN,AJxBA,GAAGxJ,EMWE,CAACrD,ENXE,CAACW,IIwBd,AJxBQ,CIwBWlC,AJxBAiE,CAAC,GAAG,CMWrB,ANXM,CIwBR,AEbyB,EFaEvD,EEbzB,CAAX,ANXuC,EIwB9B,CJxBQ,CIwB0BsN,EJxBE,KAA5B,CIwBR,EAA4C/J,AJxBA,CIwB5C,EAA+C6G,IJxBpD,GIwBK,CAAP;AACD,ACtCF,AFkDKnK,AGzBJ+Q,ANXI9M,EMWJ8M,EHyBI/Q,AGzBF,CHyBG,AGzBFa,CNXCoD,CGoCG,CADL,GHnCO,CAAC1C,IMWV,ANXI,CMWWyP,ANXAvR,EMWf,CNXI,CAAegG,OAAO,CAACC,IAAD,CAAtB,EAA8BpC,CAAC,GAAG,CAAlC;AGqCArD,AGzBJ,ANXG,IGoCCA,CAAC,EAAE,CAFL,AGvBIgR,SAAS,GAAG3Q,QAAQ,CAACM,aAAT,CAAuB,IAAvB,CAAlB;AFcA4M,ACtCK,AFkDD3C,AGzBJkG,EFaAvD,AEbAuD,EHyBIlG,AGzBF,CAAChK,IDzBW2O,CFkDJ,EAAE,ECZA,CAACxC,CAAD,ADYI,AGzBhB,CAAeiE,CFaC3D,CAAJ,EAAOtN,CAAP,ACtCP,CACLU,CDqCsBT,CAAV,CCtCP,ACyBL,CFayBF,CCpCzBsC,IDoCY,CCpCP,CDoC2B8H,ECpCxB,KDoCI,EAA6B;AACvC,ACrCQpK,AF6CR,AGrBFO,ANXE,EKbQP,ACwBVO,CHzBQ,EAmDN,EElDa,CDqCToN,AJxBAjI,CKbW/E,CCwBT,CAACH,CDxBW,CAACR,ECwBrB,ANXa,CMWCc,ANXA8E,EKbN,GDqCN,AJxBI,EIwBegI,EJxBElI,EMWvB,CFaE,AEbwBsL,EFaEvN,AEb5B,EAjCA,ANsB8B,CMa9B,ANb+Ba,EIwB7B,CJxBqB,CIwBYyI,CAAjC,EAAoCM,CAApC,AJxBqC3H,EIwBEmI,GAAvC,EAA4Cb,AJxBA,CAACzI,EIwB7C,EAAiDiJ,CJxBjD,EAAoD,CIwBpD,EAAuDM,OAAvD;AACAd,ACtC0BjM,AFmDxBd,AHrCA+D,EKdwBjD,EDsC1BiM,ADaE/M,CAAC,CHrCD+D,CIwBC,ADaE,CEnD2B,AFkDhC,ECZMoG,ACtC4BzJ,GAAG,ALc5B,CKd6BI,ALc5B8E,GIwBG,CAAC6G,AJxBZ,CAAa,KIwBf;AACAoB,ACvCM,AFoDJ5N,AGzBJ,ANZMiE,CKjBD,EAGL,CDsCE2J,ADaE5N,CAAC,EAAE,CAFL,AGvBIiR,ANZAhN,GIwBG,CEZC,EFYE,CEZC,CFYX,CJxBa,EAAEO,EMYE+L,ENbF,WMae,CAACD,YAAD,CAAhC;ADzBA,AFmDI1F,AGzBJgG,ANZM7Q,EMYN6Q,EHyBIhG,IEnDElK,ALcAX,CAAC,CGqCG,CGzBD,ANZAA,CGqCG,AGzBFa,ANZA,EKdE,CLcC,CGqCG,AHvCC,CKZFP,MC0Bf,CAAsB4Q,CD1BC,CAACtQ,EC0BxB,WD1Be,CAAuB,QAAvB,CAAf;ADsCE,ACrCFD,AF+CE,AGrBF,ANZMV,EKdNU,CFJQ,EAwDN,GEpDI,AC0BAwQ,ANZAlR,CIuBC6M,ACrCAjL,ALcA,CIuBC,CJvBC5B,CAAC,CIuBC,CAAJ,ACrCP,AC0BY,CD1BCuC,ALcA,CIuBCoL,CEXC,EFWE,GAAGb,CEXCyD,EFWE,CAACnK,GCrCxB,GDqCE,ACrC4B,EDqCEyG,CAAC,CEXC,CAAChE,CFWC8E,GAAlC,EAAuCd,ACrCzC,CDqC0C,AEXR,CAAlC,CFWE,EAA4C;AAC1Ca,ACrCJ,AFoDI3N,AG1BJ6Q,ANhBiB,EMgBjBA,EH0BI7Q,CAAC,CCfD2N,CDeG,AH1CH,CKVE5M,AFmDJ,GCdO,ACrCA,AC0BA,CAACF,EFWEkM,ACrCApM,GDqCG,CAACmM,CAAD,CAAX,ACrCc,CAAC9L,EC0BnB,CAAsBmQ,MAAtB,CD1BY,CAAkB,IAAlB,CAAZ;ADsCI3N,ACrCJ7C,AFoDIV,AG1BJ,ANZG,EKdHU,EFoDIV,CAAC,CCfDuD,CDeG,CEpDD,AFkDJ,AGxBI4N,CD1BCrR,EDqCE,GAAG,ACrCZ,EC0Bc,CD1BCsC,EDqCE6K,AEXA,GD1BG,CAACnN,EC0BEyQ,GD1BvB,KDqCY,CACNxQ,CAAC,GAAGmK,AEZ0B,CAACkG,MFYpB,CAACjE,EEZkB,CAApC,CFYU,GAAeuB,KAAK,CAAC3N,CADnB,EAENC,CAAC,GAAGkK,OAAO,CAACiC,IAAR,GAAeuB,KAAK,CAAC1N,CAFnB,EAGNF,KAHM,EAINoK,OAAO,CAACkC,QAJF,CAAR;ACpCJ1L,AFoDIkK,AG1BJgG,ED1BAlQ,AC0BAkQ,EH0BIhG,IEpDE,CAAC/J,CFoDG,CG1BD,CH0BG,AG1BFD,GD1BV,CFoDgB,EEpDAwB,KAAK,AC0BrB,CD1BsBvB,AC0BAsQ,MD1BtB,EC0BA;AFgBI,ACxCJ,AF+CE,AGrBF,ANbE,GGtBM,CA5FK,IEqGP,AC0BAC,ENbE3O,CI4BFgL,EJ5BK,CAAC3M,GAAD,EAAMkD,CMaC,GAAG,CFeF,AJ5BR,EAAajE,CI4BFoN,AEfGjN,ANbd,CI4BY,CJ5BIF,CAAhB,CI4Be,AJ5BxB,CI4BI,EAAuBsN,IAAI,EEfZ,CFeepD,AEfN+G,IAAT,CAArB,EFe2C,CAAC7E,QADxC,EAEE,KAAKkB,IAAL,GAAYH,CAAC,GAAGG,IAAhB,GAAuBH,CAAC,GAAGG,IAF7B,EAGEG,aAAa,GAAG,KAAKH,IAAL,GAAY,EAAEH,CAAd,GAAkB,EAAEA,CAHtC,EAIE;AACAJ,AC7CEhN,AFqDRiL,AG1BA,ANZE,EGsCFA,EErDQjL,CAAF,GD6CAgN,AElBAsE,CFkBC,CAAC9N,ADQA,EAAE,CACR,ECTW,EElBE,CFkBCkK,EElBE,IAAIvN,OFkBf,CAAD,IAA4BwN,CElBhB,CAASyD,GFkBY,CAACvG,IElBtB,CAAlB,CFkBkC,GAAeyC,CAAC,CAACI,aAAD,CAA5C;AACD,AC9CMzN,AFuDPD,AG3BJ,ANZC,IKhBUC,AFuDPD,CEvDE,AFuDD,EAAE,CADL,AG1BIuR,OAAO,GAAG,IAAIpR,aAAJ,CAASgR,MAAT,CAAhB;AD5BcrQ,AFwDVb,AG3BJ,ID7Bca,AFwDVb,CAAC,EAAE,CAFL,AGzBIuR,ED7BA,QC6BU,GAAG,IAAIrR,aAAJ,CAAS2Q,MAAT,CAAnB;AFkBIjD,AC/CkB9N,AFyDlB8K,AG1BJ,ANbA,IKlBsB9K,AFyDlB8K,ECVAgD,EEhBE4D,ANbA9O,EGuCI,EAAE,CCVD,CAACiD,EDUI,CHvCD,CI6BX,AEhBY,CFgBCuE,CJ7BC,CMaC7J,GNbG8C,EI6BE,CAACmJ,EEhBE,CAACmF,CFgBX,CAAa1E,CAAb,EAAgBxJ,KAAhB,CAAb,AJ7Bc,CAAsB,CMarB,CAAuB,ENbE,CAA1B,CAAlB,CA5B6C,CA4BG,EMa7B,CAAnB;AFiBG,AChDG,AFsDJ,AGtBFiO,EAAAA,CHqBU,EAMR,CE3D8BrC,IAAI,CAAC1O,CCgC3B,CAACiR,CDhCyB,EAAMhR,MAAN,ACgCpC,CDhCA,ACgCqBiR,GAArB,CAAyB,WAAzB;AD9BA7Q,AF0DIf,AG1BJ,ANdA,EKlBAe,EF0DIf,CE1DD,AF0DE,CE1DDiB,ACgCA4Q,CH0BG,AHxCF,CGuCH,GGzBO,ANdAtO,CAAC,EMcE,CDhCZ,ALkBa,CKlBC7C,ALkBd,EMcA,ANdgB6C,CKlBhB,ALkBiB,EKlBEvD,CAAnB,CLkBqB,CKlBCC,ALkBtB,CKlBA,CLkBwBsD,CKlBCxD,ALkBA,EAAzB,EAA6B,CKlB7B,EAAgCe,MAAhC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8CH,MAAM,CAACZ,KAArD,EAA4DY,MAAM,CAACG,MAAnE;AD+CE,AC7CF,AFyDIb,AHxCF,IGwCEA,CAAC,EAAE,CAFL,CEvDKc,ED6CE8M,CC7CT,MD6CE;AACD,AC7CF,AFyDKhD,AG1BJ4G,ANdE,EMcFA,EH0BI5G,MAAM,AHxCFtF,EGwCI,AG1BF,CAAC6B,ANdA,GGwCK,AHxCF,CAAC3C,GMcf,CNdmB,EMcE,CNdE,KMcI,ANdClB,CAAd,MAAsB,CAAtB,GAA0B,CAA1B,GAA8B,GAA1C;AGqCA,AGtBAsO,ANdAlP,GG8BQ,CGhBRkP,ANdAlP,CGyCA,IG3BK,GAAG,CAACkP,ANdA,CAACpS,GAAV,CMcA,ANdc,CAAC8F,GAAD,EAAMA,GAAN,EAAWA,GAAX,EAAgB,GAAhB,CAAd,EAAoC,CAAC,IAAIhC,CAAL,IAAU,CAA9C,EAH2B,CAGuB;AI6BpDkK,AC7CK,AF0DDzN,AG3BH,ANdA,EI4BDyN,CEhBA,AN9C6C,CG2EzCzN,AHvCJ,CGuCK,EAAE,CAAC,CE1DMyP,AFyDZ,MCZW,CAACpP,MAAD,AC7CR,CAAuBK,CD6CNX,EC7CjB,EAA4BsC,CD6CpB,EAAgBgL,EC7CxB,EAAmC,ID6C3B,EAA0B/J,CAA1B,EAA6B6G,OAA7B,EAAsC;AACjD,AC7CF,AF0DIlK,AHvCJ,IGuCIA,CAAC,EAAE,CCbD6N,AC7CA/M,AFwDJ,ECXA,CC7CO,CD6CCgN,EAAR,AC7CUyB,ED6CExB,EAAZ,EAAgBzK,CAAhB,EAAmBuJ,CAAnB,EAAsBC,CC7CC,CAACrM,CD6CxB,EAA2BmN,AC7CJ,EAAMxL,KD6C7B,AC7CuB,CAAzB;AD8CEwL,AC7CF,AF0DIhD,AG3BJ4G,ANZA,EMYAA,EFcE5D,ADaEhD,KE1DG9J,CF0DG,CCbD,CC7CC,AF0DE,AG3BF,CD/BCO,AC+BAuF,CFcC,EAAV,ADac,QG3BhB,CD/BO,CAAiB,CAAjB,AC+BkBnI,CAAC,CD/BC,CAApB,EAAuBqC,AC+BA,GD/BG,CAACJ,MAAJ,CAAWZ,KAAlC,EAAyCgB,GAAG,CAACJ,MAAJ,CAAWG,MAApD,CAAP;AACD,AFsDG,AGvBA,ANZF,GGwBU,EAgBR,GG5BI,CAAC+Q,KAAL,EAAY;AFcZ,ADeE7R,AG5BF,ANZF,IGwCIA,CAAC,EAAE,CADL,CCbE+N,CEdI/N,CFcF,AEdG,GFcA8M,AEdIpO,CFcH,AEdI,CAACsI,EFcF,CAAT,EAAY+F,AEdH,GFcM,AEdI,CAAX,EFcU5C,CEdM,CAA1B,KFc2B,CAACiC,IAD5B,EAEE,KAAKW,GAAL,GAAWD,CAAC,GAAGC,GAAf,GAAqBD,CAAC,GAAGC,GAF3B,EAGEgB,EAAE,GAAG,KAAKhB,GAAL,GAAW,EAAED,CAAb,GAAiB,EAAEA,CAH1B,EAIE;AACAe,AChDC,AF2DD5N,AG5BF,ANZF,IGwCIA,CAAC,CCXD4N,CDWG,CAFL,EG1BM5N,CAAC,EFiBE,CAAC2F,AEjBClH,CD/BO4P,AC+BN,CAACrH,EFiBX,CACG,EElBM,GAAU,CAAX,CD/BP,CAA2BvG,CC+BJ,CAA1B,CD/BG,CDiDa,CCjDmBK,GAAG,GAAGyO,aAAa,CAAC9O,GAAD,CAAnD,EAA0D;ADkDvD,ACjDR,AF2DImK,AG5BF2G,IH4BE3G,AG5BF2G,KD/BK,CF2DG,ECVEpE,ADUA,CCVJ,ACjDGpI,CC+BC,CFkBGuI,AElBF1K,CH4BG,GCVR,CCjDD,AC+BL,CFkBmBoL,ACjDFhJ,AC+BAjF,CAAjB,EAAoBC,CAApB,GD/BwB,CDiDlB,GCjDsB;ADkDtBgO,ACjDN,AFuDA,AGxBAoD,GHQQ,CGRRA,CH6BA,GCXMpD,ECjDAtN,MDiDQ,ACjDF,AC+BA,CAACkC,EFkBI,ACjDF9B,EDiDT,CCjDY,AC+BlB,CD/BmBJ,AC+BAX,CAAnB,EAAsBC,CAAtB,ED/BA;AACAU,AF4DEX,AG7BFuR,ANbF,IKlBE5Q,AF4DEX,AG7BFuR,CH6BG,EAAE,CADL,AHzCIvR,CAAC,CKlBC,CAACwB,AC+BA,CAACqB,ANbAW,KKlBR,AC+BA,ANba,CKlBCkM,AC+BA1P,CAAd,CNbgB,CMaCC,CD/BC,AC+BlB,ANbF,IKlBwBgF,OAAO,CAACyK,IAAD,CAA7B;ADiDM,AChDP,AF4DGzP,AG7BFqR,ANbF,GKrBO,CAAP,AF+DIrR,AG7BFqR,CH6BG,EAAE,CAFL,AHxCIrR,CAAC,GAAK,CI+BF+N,AElBC,ANbExK,CMaDX,CFkBA,GAAGuK,AJ/BG,CI+BF,AElBd,CAAgBpN,CAAhB,CFkBiB,AJ/BG,CI+BZ,AElBWC,ANbT,CMaV,CFkBoBsN,EJ/BK,CAAhB,CI+Be,EJ/BM,CI+BHpD,CJ/BnB,GAA4B/E,GI+BF,CAACgH,CJ/BM,GI8BnC,AJ9BsC,EIgCpC,AJhCV,CA5C6C,CA4CK,GIgCnCmB,IAAL,GAAYH,CAAC,GAAGG,IAAhB,GAAuBH,CAAC,GAAGG,IAF7B,EAGES,EAAE,GAAG,KAAKT,IAAL,GAAY,EAAEH,CAAd,GAAkB,EAAEA,CAH3B,EAIE;AACAU,ACpDX,AF4DKjD,AG7BFmG,IH6BEnG,AG7BFmG,EAAE,CAAC9J,GFqBK4G,ADQA,ECRE,ADQA,GCRGxK,CAAC,ADQA,AG7Bd,GFqBiB6G,AErBD,OFqBQ,CAACkC,AErBFrM,CAAE,OFqBR,CErBeC,CAAE,CFqBE8N,EAAvB,CErBb,EFqByC5D,OAAO,CAACkC,QAAR,GAAmBtM,KAAnB,GAA2BiO,EAA5D;AACAC,ADIR,AGzBA,ANdF,GGkBU,EA0BR,GH5CIvK,EImCIuK,AErBFhK,INdI,CMcC,ENdET,CImCG,AErBF+N,CFqBG3L,GJnCC,CImCV,CACG,CEtBU,CAAC7C,ANdA,CAAxB,CA7C6C,CA+C7C,EMYgB,CAAc/C,CAAd,EAAiBC,CFsBT,AEtBR,CAAd;AFuBY,ACrDT,AF6DDD,AG9BF,IH8BEA,CAAC,EAAE,CADL,CE5DYwO,CC+BN/J,IAAI,EFsBMyJ,CAAJ,AEtBC,EFsBMC,ECrDhB,CAAsBuB,CDqDb,EAAatB,CCrDtB,EAA4B,KDqDnB,aEtBoBnK,KAAnB,CAAb;AFuBYmK,ACrDd,AF6DInO,AG9BFyG,ANbFhE,EAAAA,EG2CIzC,AG9BFyG,CH8BG,AH3CF,CAAC3F,CG2CG,CAFL,CE3DK,ALkBJ,CMaK,CAACiH,ANbA,CImCKoG,CCrDHpJ,ELkBEhD,KImCS,ACrDf,CAAYiD,EDqDM,CJnChB,CImCK,AJnCStC,GKlBG,CC+BxB,GD/B4B,AC+BAqF,ENbrB,EAAyB,CAAzB,EAA4B,CAA5B,CAAN,EAAsChI,CAAC,GAAG,CAA1C,EAA6CC,CAAC,GAAGyD,EMaHoO,IAAnB,ANb3B,CMamD,ANbtD,IMa8B,EAA8B7N,KAA9B,CAA5B;AD9BA,AF6DE4G,AG9BF,ANbH,IG2CKA,ME7DI9L,AF6DE,AG9BF8Q,EH8BI,GG9BC,CD/BC,AF6DE,EG9BA5P,CD/BC,AC+BA,ID/BIyG,CC+BC,EAAN,GD/BW,CAAC1H,AC+BAgB,CAAC,KAAK,EAAhC,ED/Be,EAAf;ADqDY,ADKZ,AG1BA,GHAQ,CA1JG,MG0JLyF,OFsBQlC,AEtBD,CFsBE,EEtBC,CFsBE2K,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGhE,OAAO,CAACkC,EEtBT5H,IAAf,EFqBJ,AErByBoL,EFuBvB,GEvBE,CAAhB,CFuBmB1B,IAAL,GAAYD,CAAC,GAAGC,IAAhB,GAAuBD,CAAC,GAAGC,IAF7B,EAGE5K,CAAC,GAAG,KAAK4K,IAAL,GAAY,EAAED,CAAd,GAAkB,EAAEA,CAH1B,EAIE;AACAE,ACzDdrP,AF+DFmM,AG/BE,ANbG,EG4CLA,EE/DEnM,IF+DI,CH5CQ8G,CKnBN,AF+DA,AG/BAxB,CDhCCsL,AFgEP,EGhCS,CFyBKvB,EEzBF3I,IDhCZ,CLmBG,CIsCmB,AJtCGpF,CIsCFuF,ACzDJ,ACgCA,CAACvB,GFyBN,AEzBF,CFyBiBhE,AEzBL0F,ANbrB,CKnBsBd,CLmBQlE,EMarB,CAAiB,ANb1B,CIsCgC,CAAC+M,AJtCE,CKnBN,ACgCpB,CFyB0B,ACzDL,ACgCjC,GFyByCvK,CAAN,ACzDEpE,CDyDR,GAAiBkO,MCzDb,CAAetO,CDyDM,CAACwE,CAAD,CAAxC,ECzDwC,CAAClE,MAAtB,CAAD,CAAhC;AD0Da,ADOXW,AGhCF,ANbF,IG6CIA,CAAC,EAAE,CADL,AH5CIsC,CAAC,CMaCgC,ENbE,GMaG,ANbb,GMagBmB,OAAO,CAACnB,KAAR,CAAcyB,IAAd,CAAmB,GAAnB,CAAd;ADhCAhH,AFiEEkB,AGhCFgR,ANbF,IKpBElS,AFiEEkB,AGhCFgR,CHgCG,EAAE,CAFL,AH3CI1O,CAAC,CKpBC,CAACjD,CLoBC,CMaC,CAAC4H,CNbZ,QMaE,GAAuB,EDjCvB,CAAyBwI,IAAzB,CCiC8BrL,GAAI,KAAIoB,OAAO,CAAC4B,MAAR,CAAehD,GAAI,gDAA+CA,GAAI,sBAAqBC,KAAM,KAAImB,OAAO,CAAC4B,MAAR,CAAe/C,KAAM,gDAA+CA,KAAM,YAArN;AFyBY,ACzDb,AFiEGuG,AGhCH,ANbD,GKxBO,ACoBP,CDpBA,AFqEIA,IH7CEzG,EG6CI,EAAE,EH7CA,EG6CI,CH7CD,EIqCMgK,EJrCFhL,MIqCL,WJrCC,CAAsBd,CAAC,GAAGC,CAAJ,GAAQ,CAA9B,CAAf,CAHwC,CAGS;AIsCpC,ACzDd,AF6DG,AG5BH,GH2BS,EAMN,MCpBU,EADF;AAcD,ADQLvC,AH/CJ,IG+CIA,CAAC,EAAE,AH/CF,CG8CH,GH9COC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsC,CAAC,GAAG,CAAxB,EAA2BtC,CAAC,EAA5B,EAAgC;AGgD5BA,AGjCN,ANdI,IG+CEA,CAAC,EAAE,CAFL,CH7CK,IAAID,CAAC,CMcCoQ,ENdE,CAAb,EAAgBpQ,CMcpB,ANdqB,CMcCe,ENdEuB,CMcxB,ANdyB,EMcE6N,CNdC,CAAxB,EAA2BnQ,CAAC,EAA5B,EMcJ,ANdoC,EMcE4M,MAAtC,EAA8CzC,OAAO,GAAG,EAAxD,EAA4D;AFyBlD,ADSJU,AGjCJ,ANdI,IG+CAA,IGjCEvI,CAAC,CHiCG,EAAE,AGjCFvB,ANdAgC,GIsCKkL,AExBF,CHiCG,AGjCFtN,CNdC,GAAGsD,EMcR,CFwBF,AExBalE,ENdE,CAACC,CAAD,CMcvB,CNd2BC,CAAJ,EAAOI,MAAP,CAAnB,CAD8B,CACK;AIuChC,ADKL,AG7BF,GHuBQ,EAWN,ECnCI,CECAkC,CFFF,AEEG,GAAGxB,GAAG,CAACJ,MAAJ,CAAWG,MAArB;AF0BG,ADSCd,AGlCJ,ANfIe,IGiDAf,CAAC,CHjDDe,CGiDG,CAAC,AGlCFV,CHiCJ,AHhDK,CAACuC,IMeI,GAAG,KNfX,CAAiB,IAAIZ,SAAJ,CAAce,CMeXhC,GAAG,CAACO,ANfP,EAAqB,CAArB,EAAwB,CAAxB,CAAjB,EAA6CtB,CAAC,EMe1B,CAAiB,ANfY,CMe7B,ANfpB,EMewC,ANfYC,CMehC,ANfiC,EMeVqC,CAAvB,ANfoC,CAAxD,CMe8CC,CAA1B,CAAT,EAAuC,EAAvC,CAAf;AHmCItC,AGlCJ,ANfG,IGiDCA,CAAC,EAAE,CAFL,AGhCI+J,GAAG,GAAG4C,MAAM,CAACA,MAAP,CAAcvM,MAAM,CAACkB,IAArB,EAA2Be,CAA3B,EAA8B6H,OAA9B,CAAZ;AFyBE,ADUEU,AGlCJ,ANfC,IGiDGA,IGlCElI,EHkCI,CCVDkL,CDUG,IAAI,CGlCD,CFwBb,EExBgB,IAAI7L,SAAJ,CAAc,IAAIoB,iBAAJ,CAAsB4G,GAAtB,CAAd,EAA0C1H,CAA1C,EAA6CC,CAA7C,CAAlB;AFyBC,ADMC,AG9BF4N,EAAAA,CHmBQ,EAgBN,MGnCO,CAACvN,YAAV,CAAuBD,SAAvB,EAAkC,CAAlC,EAAqC,CAArC;AHoCI3C,AGlCJ,ANhBA,IGkDIA,CAAC,EAAE,CAAC,CADN,AGjCK,ANhBAoE,MAAP;AI3F0B,AD8ItBnE,AGnCK0C,ANfV,IGkDK1C,AGnCK0C,CHmCJ,EAAE,CAFL;AAGEkI,AGpCG,GAAP,CHoCIA,MAAM,EAAE,IAAI;AAHd,AGhCH,ANdM,GG8BG,EAqBN,IHnDY/E,mBAAT,CAA6BzF,MAA7B,EAAqCU,GAArC,EAA0C;AGoD3Cf,AHnDJ+D,EAAAA,EGmDI/D,CAAC,EAAE,CADL,CHlDK,GAAG,EAAV,CAD+C,CAG/C;AGkDIC,AGrCN,IHqCMA,CAAC,EAAE,CAFL,CGnCK8R,cAAT,CACEtL,IADF,EAEEzG,CAFF,EAGEC,CAHF,EAIE+R,QAAQ,GAAG,IAAI5O,iBAAJ,CAAsB,IAAI,CAAJ,GAAQ,CAA9B,CAJb,EAKE;AHiCIyH,AGhCJ,ANlBA,IGkDIA,GHlDC,CMkBC5G,EHgCI,CHlDDX,CGkDG,AHlDF,CMkBC,ENlBE,CGkDG,AGhCFmD,GNlBd,CMkBkB,CAAC1D,ANlBAO,CAAC,IMkBN,ANlBU,CMkBCtD,CAAX,EAAcC,ANlB5B,CMkBc,CAAd,ANlB8BqD,CMiB9B,ANjB+B,CMmB/B,CNnBA,EAAmC;AG+CjC,AG3BF,ANnBE,GGyBM,EA0BN,KHnDMY,SAAS,GAAG7D,MAAM,CAACiD,CAAD,CAAxB;AGoDEtD,AGhCJ,ANnBE,IGmDEA,CAAC,EAAE,CADL,EHlDM;AGoDJC,AHpDMoE,IGoDNpE,CAAC,CHpDKoE,CGoDH,CAFL,CHlDM;AGqDJwG,AGjCJ,ANpBevG,IGqDXuG,EHrDWvG,EMoBTjB,EHiCI,CHrDF,CGqDI,CGjCD,GHiCK,AGjCFrD,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAA/B;AH8BE,AG7BF,ANrBsB0F,GGwBd,EA+BN,CHvDoBA,EMqBhBlB,IAAI,GAAG,6BAAmBR,KAAnB,EAA0BZ,KAA1B,CAAb;AHmCIrD,AGlCJ,ANtBQ,IGwDJA,CAAC,EAAE,CADL,AGjCIiS,ANtB0B1N,UMsBhB,GAAG,CNtB2B,CAACL,SAAD,CAA5C,aMsBgCO,IAAf,CAAnB;AHmCIxE,AGjCJ,IHiCIA,CAAC,CGjCDoD,CHiCG,CAFL,GG/BF,EAAWM,OAAO,CAACC,GAAR,CAAYqO,UAAZ;AHkCPpH,AHzDF,IGyDEA,IHzDElF,EGyDI,EAAE,CHzDD,GGyDK,CHzDDtB,GAAG,CAAC0B,IAAJ,CAAS,EAAT,MAAiBzB,KAAK,CAACyB,IAAN,CAAW,EAAX,CAA9B,EAA8C;AGsD9C,AG7BF,ANxBI,GGsBI,CA1LK,GG4LR,IAAIzC,CAAC,ANxBAtD,CAAC,EMwBE,CAAb,AN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","file":"scr-tools.628f49dc.js","sourceRoot":"../public","sourcesContent":["export default function drop(root, callback) {\n  root.ondragover = () => false;\n  root.ondragend = () => false;\n  root.ondrop = e => {\n    e.preventDefault();\n\n    const droppedFile = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      callback(new Uint8Array(event.target.result));\n    };\n    reader.readAsArrayBuffer(droppedFile);\n\n    return false;\n  };\n}\n","export const brightColoursLookup = new Map();\nbrightColoursLookup.set([0, 0, 0].toString(), 0b000);\nbrightColoursLookup.set([0, 0, 0xff].toString(), 0b001);\nbrightColoursLookup.set([0xff, 0, 0].toString(), 0b010);\nbrightColoursLookup.set([0xff, 0, 0xff].toString(), 0b011);\nbrightColoursLookup.set([0, 0xff, 0].toString(), 0b100);\nbrightColoursLookup.set([0, 0xff, 0xff].toString(), 0b101);\nbrightColoursLookup.set([0xff, 0xff, 0].toString(), 0b110);\nbrightColoursLookup.set([0xff, 0xff, 0xff].toString(), 0b111);\n\nexport const normalColoursLookup = new Map();\nnormalColoursLookup.set([0, 0, 0].toString(), 0b000);\nnormalColoursLookup.set([0, 0, 0xd7].toString(), 0b001);\nnormalColoursLookup.set([0xd7, 0, 0].toString(), 0b010);\nnormalColoursLookup.set([0xd7, 0, 0xd7].toString(), 0b011);\nnormalColoursLookup.set([0, 0xd7, 0].toString(), 0b100);\nnormalColoursLookup.set([0, 0xd7, 0xd7].toString(), 0b101);\nnormalColoursLookup.set([0xd7, 0xd7, 0].toString(), 0b110);\nnormalColoursLookup.set([0xd7, 0xd7, 0xd7].toString(), 0b111);\n\nexport const brightColours = {\n  0b000: [0, 0, 0],\n  0b001: [0, 0, 0xff],\n  0b010: [0xff, 0, 0],\n  0b011: [0xff, 0, 0xff],\n  0b100: [0, 0xff, 0],\n  0b101: [0, 0xff, 0xff],\n  0b110: [0xff, 0xff, 0],\n  0b111: [0xff, 0xff, 0xff],\n};\n\nexport const normalColours = {\n  0b000: [0, 0, 0],\n  0b001: [0, 0, 0xd7],\n  0b010: [0xd7, 0, 0],\n  0b011: [0xd7, 0, 0xd7],\n  0b100: [0, 0xd7, 0],\n  0b101: [0, 0xd7, 0xd7],\n  0b110: [0xd7, 0xd7, 0],\n  0b111: [0xd7, 0xd7, 0xd7],\n};\n","function getIndexForXY(width, x, y) {\n  return width * y + x;\n}\n\nlet order = 1;\n\nexport default class Zoom {\n  constructor(buffer, target = document.body, id) {\n    this.target = target;\n    this.order = order++;\n    this.id = id || `zoom-${this.order}`;\n    if (buffer instanceof HTMLImageElement) {\n      const img = buffer;\n      const canvas = document.createElement('canvas');\n      target.appendChild(canvas);\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = (buffer = canvas.getContext('2d'));\n      ctx.drawImage(img, 0, 0);\n      img.parentNode.replaceChild(canvas, img);\n    }\n\n    if (buffer instanceof CanvasRenderingContext2D) {\n      const ctx = (this.sourceCtx = buffer);\n      this.buffer = buffer.getImageData(\n        0,\n        0,\n        buffer.canvas.width,\n        buffer.canvas.height\n      ).data;\n      ctx.canvas.toBlob(blob => {\n        const url = URL.createObjectURL(blob);\n        ctx.canvas.style.background = `url(${url}) no-repeat`;\n        ctx.clearRect(0, 0, buffer.canvas.width, buffer.canvas.height);\n      });\n    } else {\n      this.buffer = buffer instanceof ImageData ? buffer.data : buffer;\n    }\n    this.isVisible = false;\n    this._last = null;\n  }\n\n  makeVisible(target = this.target) {\n    const canvas = document.createElement('canvas');\n    canvas.className = 'zoom';\n    canvas.id = this.id;\n    target.appendChild(canvas);\n    this.ctx = canvas.getContext('2d');\n\n    const scale = 20;\n    const w = (canvas.width = 8);\n    const h = (canvas.height = 8);\n    canvas.style.imageRendering = 'pixelated';\n    canvas.style.width = `${w * scale}px`;\n    canvas.style.height = `${h * scale}px`;\n    canvas.style.setProperty('--order', this.order);\n    this.isVisible = true;\n\n    return this;\n  }\n\n  put(imageData) {\n    const ctx = this.ctx;\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  seeXY(x, y) {\n    const key = `${x}x${y}`;\n    if (key === this._last) return;\n    this._last = key;\n    if (!this.isVisible) this.makeVisible();\n    const imageData = new ImageData(this.pixel(x, y), 8, 8);\n    this.ctx.putImageData(imageData, 0, 0);\n\n    if (this.sourceCtx) {\n      const ctx = this.sourceCtx;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.strokeStyle = 'white';\n      ctx.strokeRect(x * 8 + 0.5, y * 8 + 0.5, 8, 8);\n      ctx.strokeStyle = 'black';\n      ctx.strokeRect(x * 8 - 0.5, y * 8 - 0.5, 8, 8);\n    }\n  }\n\n  pixel(x = 0, y = 0) {\n    const sourceWidth = 256;\n    const width = 8;\n    const height = 8;\n    const source = this.buffer;\n\n    const data = new Uint8ClampedArray(width * height * 4);\n\n    const print = false; //x === 31 && y === 23;\n\n    for (let i = 0; i < height; i++) {\n      const j = getIndexForXY(sourceWidth, x * 8, y * 8 + i);\n      const index = j * 4;\n      const end = index + width * 4;\n      const offset = i * width * 4;\n      if (print) {\n        console.log(\n          'j: %s, index: %s, end: %s',\n          j,\n          index,\n          end,\n          x * 8,\n          i,\n          source.subarray(index, end)\n        );\n      }\n      data.set(source.slice(index, end), offset);\n    }\n\n    return data;\n  }\n}\n","import {\n  brightColours,\n  normalColours,\n  normalColoursLookup,\n  brightColoursLookup,\n} from './zx-colour.js';\n\nimport Zoom from './Zoom.js';\n\nlet toBlink = [];\nlet blinkOn = false;\n\nfunction block(\n  x = 0,\n  y = 0,\n  buffer, // expected to be 6912 long (2048 * 3 + 768)\n  attribute = buffer.subarray(2048 * 3)[y * 32 + x]\n) {\n  const start = ((y / 8) | 0) * 2048;\n  const pixels = buffer.subarray(start, start + 2048);\n\n  // reminder: paper is binary 0, ink is 1\n  const { ink, paper } = readAttributes(attribute);\n  const pixel = new Uint8ClampedArray(4 * 8 * 8);\n  y = y % 8;\n\n  for (let i = 0; i < 8; i++) {\n    const ptr = x + 256 * i + y * 32;\n    const byte = pixels[ptr];\n\n    // imageData rgba 8x1\n    for (let j = 0; j < 8; j++) {\n      // determines bit for i, based on MSb as left most pixel\n      const colour = (byte & (1 << (7 - j))) === 0 ? paper : ink;\n\n      const offset = j * 4 + 4 * 8 * i;\n      pixel[offset + 0] = colour[0];\n      pixel[offset + 1] = colour[1];\n      pixel[offset + 2] = colour[2];\n      pixel[offset + 3] = 255;\n    }\n  }\n\n  return pixel;\n}\n\nexport async function load(url) {\n  return new Uint8Array(await (await fetch(url)).arrayBuffer());\n}\n\nasync function sleep(ms) {\n  // return;\n  if (!ms) return;\n  return new Promise(resolve => setTimeout(() => resolve(), ms));\n}\n\nasync function put(ctx, imageData, x, y) {\n  ctx.putImageData(imageData, x, y);\n  await sleep(0);\n}\n\nasync function draw(ctx, third, data) {\n  const imageData = new Uint8ClampedArray(4 * 8);\n  let ctr = 0;\n  for (let offset = 0; offset < 8; offset++) {\n    for (let line = 0; line < 8; line++) {\n      for (let i = 0; i < 32; i++) {\n        let j = 0;\n        const ptr = ctr++;\n        const byte = data[ptr];\n\n        // imageData rgba 8x1\n        for (; j < 8; j++) {\n          // determines bit for i, based on MSb\n          const bit = (byte & (1 << (7 - j))) === 0 ? 0 : 255;\n\n          const offset = j * 4;\n          imageData[offset + 0] = bit;\n          imageData[offset + 1] = bit;\n          imageData[offset + 2] = bit;\n          imageData[offset + 3] = 255; // - bit; // alpha\n        }\n        const x = i * 8;\n        const y = (ctx.canvas.height / 3) * third + line * 8 + offset;\n        await put(ctx, new ImageData(imageData, 8, 1), x, y);\n      }\n    }\n  }\n}\n\n// stream individual whole bytes into the canvas\nexport async function stream(ctx, byte, index) {\n  const third = index >> 11; // 0..2047, 2048..4095, 4096..6143\n\n  if (third === 3) {\n    // colour\n    const attribs = readAttributes(byte);\n    const x = (index % 32) * 8;\n    const y = ((index >> 5) % 64) * 8;\n\n    const block = ctx.getImageData(x, y, 8, 8);\n    for (let i = 0; i < 8 * 8; i++) {\n      const type = block.data[i * 4] === 255 ? 'ink' : 'paper';\n      block.data.set(attribs[type], i * 4);\n    }\n\n    if (attribs.blink && attribs.ink !== attribs.paper) {\n      toBlink.push({\n        attribute: byte,\n        x: x / 8,\n        y: y / 8,\n      });\n    }\n\n    await put(ctx, block, x, y);\n\n    return;\n  }\n\n  const imageData = new Uint8ClampedArray(4 * 8); // 1x8 pixel array\n\n  for (let j = 7; j >= 0; j--) {\n    // determines bit for i, based on MSb\n    const bit = (byte & (1 << j)) === 0 ? 0 : 255;\n    imageData.set([bit, bit, bit, 255], (7 - j) * 4); // place the bits forward\n  }\n\n  // build the line based on the 8bit byte\n  // for (let j = 0; j < 8; j++) {\n  //   // determines bit for i, based on MSb\n  //   const bit = (byte & (1 << (7 - j))) === 0 ? 0 : 255;\n  //   imageData.set([bit, bit, bit, 255], j * 4);\n  // }\n\n  const x = index % 32;\n  const y = (((index >> 5) * 8) % 64) + third * 56; // this is the y coord\n  const offset = index >> 8;\n\n  // await\n  put(ctx, new ImageData(imageData, 8, 1), x * 8, y + offset);\n}\n\nexport function pixelsForSCR(buffer, ctx) {\n  const w = 256;\n  const h = 192;\n  const pixels = new Uint8ClampedArray(w * h * 4); // 196,608\n  for (let y = 0; y < h / 8; y++) {\n    for (let x = 0; x < w / 8; x++) {\n      const pixel = block(x, y, buffer); // returns 8x8\n      ctx.putImageData(new ImageData(pixel, 8, 8), x * 8, y * 8);\n    }\n  }\n\n  return pixels;\n}\n\nexport function loadBlinkAttributes(buffer, ctx) {\n  toBlink = [];\n\n  // 768\n  for (let i = 6144; i <= 6912; i++) {\n    const attribute = buffer[i];\n    const { ink, paper, blink } = readAttributes(attribute);\n    if (blink && ink.join('') !== paper.join('')) {\n      const x = i % 32;\n      const y = (i >> 5) % 64;\n\n      toBlink.push({\n        attribute,\n        i,\n        x,\n        y,\n      });\n    }\n  }\n\n  let timer = null;\n\n  const blink = {\n    start: () => {\n      timer = setInterval(() => doBlink(ctx, buffer), 333);\n    },\n    stop: () => {\n      return clearInterval(timer);\n    },\n  };\n\n  return blink;\n}\n\nasync function colour(ctx, buffer) {\n  const attribs = buffer.subarray(2048 * 3);\n\n  for (let i = 0; i < attribs.length; i++) {\n    const attribute = attribs[i];\n    const { ink, paper, blink } = readAttributes(attribute);\n\n    const x = i % (ctx.canvas.width / 8);\n    const y = (i / (ctx.canvas.width / 8)) | 0;\n\n    const pixel = new ImageData(block(x, y, buffer), 8, 8);\n\n    if (blink && ink.join('') !== paper.join('')) {\n      toBlink.push({\n        attribute,\n        x,\n        y,\n      });\n    }\n\n    await put(ctx, pixel, x * 8, y * 8); // replace the whole shebang\n  }\n}\n\nfunction doBlink(ctx, buffer) {\n  blinkOn = !blinkOn;\n\n  toBlink.forEach(item => {\n    const { x, y } = item;\n    let attribute = item.attribute;\n    if (blinkOn) {\n      // swap the paper and ink\n      attribute =\n        (attribute & 192) + // bright + blink\n        ((attribute & 7) << 3) + // ink moved to paper\n        ((attribute & 56) >> 3); // paper moved to ink\n    }\n    const pixel = new ImageData(block(x, y, buffer, attribute), 8, 8);\n    put(ctx, pixel, x * 8, y * 8);\n  });\n}\n\nexport default async function main(url) {\n  const buffer = await load(url || './screens/remy.scr');\n\n  const canvas = document.createElement('canvas');\n  const log = document.createElement('pre');\n\n  document.body.appendChild(canvas);\n  const zoom = new Zoom(buffer);\n  document.body.appendChild(log);\n  const ctx = canvas.getContext('2d');\n\n  window.ctx = ctx;\n\n  const scale = 2;\n  const w = (canvas.width = 256);\n  const h = (canvas.height = 192);\n  canvas.style.imageRendering = 'pixelated';\n  canvas.style.width = `${w * scale}px`;\n  canvas.style.height = `${h * scale}px`;\n  ctx.fillStyle = '#ccc';\n  ctx.fillRect(0, 0, w, h);\n\n  await draw(ctx, 0, buffer.subarray(0, 2048));\n  await draw(ctx, 1, buffer.subarray(2048, 2048 * 2));\n  await draw(ctx, 2, buffer.subarray(2048 * 2, 2048 * 3));\n\n  const attribs = buffer.subarray(2048 * 3);\n\n  await colour(ctx, buffer);\n  zoom.seeXY(0, 0);\n\n  // setInterval(() => zoom.seeXY(), 1000);\n\n  canvas.onmousemove = e => {\n    const { ptr, x, y, byte, bright, blink, ink, paper } = readFromPoint({\n      attribs,\n      scale,\n      x: e.pageX,\n      y: e.pageY,\n    });\n\n    zoom.seeXY(x / 8, y / 8);\n\n    log.innerHTML = `ptr: ${ptr}\nx: ${x} (${x / 8})\ny: ${y} (${y / 8})\nbyte: ${byte}\nink: <span style=\"color: white; text-shadow: 1px 1px 0 #000; background: rgb(${ink.join(\n      ','\n    )})\">${(byte & 7).toString(2).padStart(3, '0')}</span>\npaper: <span style=\"color: white; text-shadow: 1px 1px 0 #000; background: rgb(${paper.join(\n      ','\n    )})\">${((byte & 56) >> 3).toString(2).padStart(3, '0')}</span>\nbright: ${bright}\nblink: ${blink}\n`;\n  };\n\n  canvas.onclick = e => {\n    const { x, y, ink, paper } = readFromPoint({\n      attribs,\n      scale,\n      x: e.pageX,\n      y: e.pageY,\n    });\n\n    toBlink.push({\n      x,\n      y,\n      ink,\n      paper,\n    });\n  };\n\n  setInterval(() => doBlink(ctx, buffer), 333);\n}\n\nexport function blink(ctx, buffer) {\n  return setInterval(() => doBlink(ctx, buffer), 333);\n}\n\nexport function readAttributes(byte) {\n  const bright = !!(byte & 64);\n  const source = bright ? brightColours : normalColours;\n\n  const values = {\n    ink: byte & 7,\n    paper: (byte & 56) >> 3,\n  };\n\n  const ink = source[values.ink]; // 0b00000111\n  const paper = source[values.paper]; // 0b00111000\n  const blink = !!(byte & 128);\n\n  return {\n    values,\n    bright,\n    ink,\n    paper,\n    blink,\n  };\n}\n\nfunction readFromPoint({ x, y, scale = 1, attribs = [] }) {\n  x = (((x / scale) | 0) / 8) | 0;\n  y = (((y / scale) | 0) / 8) | 0;\n  const ptr = y * 32 + x;\n  const byte = attribs[ptr];\n\n  const { ink, paper, bright, blink } = readAttributes(byte);\n\n  return {\n    ptr,\n    x: x * 8,\n    y: y * 8,\n    byte,\n    ink,\n    paper,\n    blink,\n    bright,\n  };\n}\n\nfunction getIndexForXY(width, x, y) {\n  return width * y + x;\n}\n\n/**\n * Converts canvas image data to SCR binary format\n * @param {Number} third 0-2: the thirds of the screen data\n * @param {Uint8Array} arrayBuffer expected to be 3 * 2048 + 768 (empty)\n * @param {Uint8ClampedArray} canvasImageData canvas pixel data (expects to be filled)\n */\nexport function pixelsToBytes(third, arrayBuffer, canvasImageData) {\n  const data = arrayBuffer.subarray(third * 2048, (third + 1) * 2048);\n  const pixels = canvasImageData.subarray(\n    third * (canvasImageData.length / 3),\n    (third + 1) * (canvasImageData.length / 3)\n  );\n\n  let ptr = 0;\n\n  for (let offset = 0; offset < 8; offset++) {\n    for (let y = 0; y < 8; y++) {\n      const row = y * 8 + offset;\n\n      for (let x = 0; x < 32; x++) {\n        let byte = 0;\n\n        for (let j = 0; j < 8; j++) {\n          const index = getIndexForXY(256, x * 8 + j, row) * 4;\n          byte += (pixels[index] === 0 ? 1 : 0) << (7 - j);\n        }\n\n        data[ptr] = byte;\n        ptr++;\n      }\n    }\n  }\n}\n\n/**\n * Converts canvas image data to SCR binary format\n * @param {Number} third 0-2: the thirds of the screen data\n * @param {Uint8Array} allPixels expected to be 3 * 2048 + 768\n * @param {Uint8ClampedArray} allData canvas pixel data\n */\nexport function putPixels(third, allPixels, allData) {\n  const pixels = allPixels.subarray(third * 2048, (third + 1) * 2048);\n  const data = allData.subarray(\n    third * (allData.length / 3),\n    (third + 1) * (allData.length / 3)\n  );\n\n  let ptr = 0;\n\n  for (let offset = 0; offset < 8; offset++) {\n    for (let y = 0; y < 8; y++) {\n      const row = y * 8 + offset;\n\n      for (let x = 0; x < 32; x++) {\n        let bit = 0;\n\n        for (let j = 0; j < 8; j++) {\n          const index = getIndexForXY(256, x * 8 + j, row) * 4;\n          bit += (data[index] === 0 ? 1 : 0) << (7 - j);\n        }\n\n        pixels[ptr] = bit;\n        ptr++;\n      }\n    }\n  }\n}\n\nexport function getInkFromPixel(rgb, shiftBright = false) {\n  rgb = `${rgb[0]},${rgb[1]},${rgb[2]}`;\n  let ink = brightColoursLookup.get(rgb);\n\n  if (!ink) {\n    ink = normalColoursLookup.get(rgb);\n    if (shiftBright) ink <<= 3;\n  }\n\n  return ink;\n}\n\nexport function attributesForBlock(block, print) {\n  let attribute = 0;\n  const inks = new Uint8Array((0b111 << 3) + 1).fill(0); // container array\n\n  for (let i = 0; i < block.length / 4; i++) {\n    const ink = getInkFromPixel([...block.slice(i * 4, i * 4 + 3)], true);\n    inks[ink]++;\n  }\n\n  if (print) {\n    Object.keys(inks).forEach(\n      (ink, count) =>\n        inks[count] && console.log('ink %s (%s)', ink, inks[count])\n    );\n  }\n\n  let [{ ink: paper }, { ink } = { ink: 0 }] = Array.from(inks)\n    .map((count, ink) => ({ ink, count }))\n    .filter(({ count }) => count)\n    .sort((a, b) => a.count - b.count)\n    .slice(-2);\n\n  if (paper === null) {\n    paper = ink;\n  }\n\n  // this helps massage the colours into a better position\n  if (ink === 7 && paper !== 7) {\n    [ink, paper] = [paper, ink];\n  }\n\n  // work out the brightness based on the majority ink\n  if (ink >> 3 === 0 || paper >> 3 === 0) {\n    // if ink or paper is black, then take the brightness from the other colour\n    if (ink === 0 || paper === 0) {\n      const colour = ink === 0 ? paper : ink;\n      if (colour >>> 3 === 0) {\n        // colour is bright\n        attribute += 64;\n      } else {\n        // not bright\n      }\n    } else {\n      // we're dealing with bright\n      if (print) console.log('dealing with bright');\n      if (ink >> 3 === 0 && inks[ink] > inks[paper]) {\n        if (print) console.log('ink > paper', ink, paper);\n        attribute += 64;\n      } else if (paper >> 3 === 0 && inks[paper] > inks[ink]) {\n        if (print) console.log('paper > ink');\n        attribute += 64;\n      }\n    }\n  }\n\n  if (ink >> 3 !== 0) {\n    ink = ink >> 3;\n  }\n\n  if (paper >> 3 !== 0) {\n    paper = paper >> 3;\n  }\n\n  attribute += paper << 3;\n  attribute += ink;\n\n  return attribute;\n}\n\nexport function putAttributes(pixels, inkData) {\n  let ptr = 0;\n  const zoom = new Zoom(inkData);\n  for (let y = 0; y < 192 / 8; y++) {\n    for (let x = 0; x < 256 / 8; x++) {\n      const block = zoom.pixel(x, y);\n      const print = false; // x === 28 && y === 19;\n\n      pixels[2048 * 3 + ptr] = attributesForBlock(block, print);\n\n      ptr++;\n    }\n  }\n}\n\nexport function download(data, filename = 'image.png', type = 'image/png') {\n  const click = function(node) {\n    var event = new MouseEvent('click');\n    node.dispatchEvent(event);\n  };\n\n  const a = document.createElement('a');\n  a.download = filename;\n  const blob = new Blob([data], { type });\n  const url = URL.createObjectURL(blob);\n  a.href = url;\n  click(a);\n  URL.revokeObjectURL(url);\n}\n","class ArrayNode extends Array {\n  constructor() {\n    super();\n\n    // allow setting any node property via proxy\n    return new Proxy(this, {\n      set(obj, prop, value) {\n        if (prop in HTMLElement.prototype) {\n          return obj.filter(el => (el[prop] = value));\n        }\n\n        const res = (this[prop] = value);\n        return res;\n      },\n    });\n  }\n\n  on(event, handler, options) {\n    return this.filter(el => el.addEventListener(event, handler, options));\n  }\n\n  emit(type, data) {\n    const event = new Event(type, { data });\n    return this.filter(el => el.dispatchEvent(event));\n  }\n}\n\nexport const $ = (s, ctx = document) => ArrayNode.from(ctx.querySelectorAll(s));\n","export default (function() {\n  var a = document.createElement('a');\n  document.body.appendChild(a);\n  a.style = 'display: none';\n  return function(data, fileName) {\n    let blob = null;\n\n    if (data instanceof Blob) {\n      blob = data;\n    } else {\n      if (!Array.isArray(data)) {\n        data = [data];\n      }\n      blob = new Blob(data, { type: 'octet/stream' });\n    }\n    const url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n})();\n","export default {\n  oneDimensional: [\n    {\n      x: 1,\n      y: 0,\n      factor: 1,\n    },\n  ],\n  floydSteinberg: [\n    {\n      x: 1,\n      y: 0,\n      factor: 7 / 16,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 3 / 16,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 5 / 16,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 1 / 16,\n    },\n  ],\n  jarvisJudiceNinke: [\n    {\n      x: 1,\n      y: 0,\n      factor: 7 / 48,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 5 / 48,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 3 / 48,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 5 / 48,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 7 / 48,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 5 / 48,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 3 / 48,\n    },\n    {\n      x: -2,\n      y: 2,\n      factor: 1 / 48,\n    },\n    {\n      x: -1,\n      y: 2,\n      factor: 3 / 48,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 5 / 48,\n    },\n    {\n      x: 1,\n      y: 2,\n      factor: 3 / 48,\n    },\n    {\n      x: 2,\n      y: 2,\n      factor: 1 / 48,\n    },\n  ],\n  stucki: [\n    {\n      x: 1,\n      y: 0,\n      factor: 8 / 42,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 4 / 42,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 2 / 42,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 4 / 42,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 8 / 42,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 4 / 42,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 2 / 42,\n    },\n    {\n      x: -2,\n      y: 2,\n      factor: 1 / 42,\n    },\n    {\n      x: -1,\n      y: 2,\n      factor: 2 / 42,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 4 / 42,\n    },\n    {\n      x: 1,\n      y: 2,\n      factor: 2 / 42,\n    },\n    {\n      x: 2,\n      y: 2,\n      factor: 1 / 42,\n    },\n  ],\n  atkinson: [\n    {\n      x: 1,\n      y: 0,\n      factor: 1 / 8,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 1 / 8,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 1 / 8,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 1 / 8,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 1 / 8,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 1 / 8,\n    },\n  ],\n  burkes: [\n    {\n      x: 1,\n      y: 0,\n      factor: 8 / 32,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 4 / 32,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 2 / 32,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 8 / 32,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 2 / 32,\n    },\n  ],\n  sierra3: [\n    {\n      x: 1,\n      y: 0,\n      factor: 5 / 32,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 3 / 32,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 2 / 32,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 5 / 32,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 4 / 32,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 2 / 32,\n    },\n    {\n      x: -1,\n      y: 2,\n      factor: 2 / 32,\n    },\n    {\n      x: 0,\n      y: 2,\n      factor: 3 / 32,\n    },\n    {\n      x: 1,\n      y: 2,\n      factor: 2 / 32,\n    },\n  ],\n  sierra2: [\n    {\n      x: 1,\n      y: 0,\n      factor: 4 / 16,\n    },\n    {\n      x: 2,\n      y: 0,\n      factor: 3 / 16,\n    },\n    {\n      x: -2,\n      y: 1,\n      factor: 1 / 16,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 2 / 16,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 3 / 16,\n    },\n    {\n      x: 1,\n      y: 1,\n      factor: 2 / 16,\n    },\n    {\n      x: 2,\n      y: 1,\n      factor: 1 / 16,\n    },\n  ],\n  sierraLite: [\n    {\n      x: 1,\n      y: 0,\n      factor: 2 / 4,\n    },\n    {\n      x: -1,\n      y: 1,\n      factor: 1 / 4,\n    },\n    {\n      x: 0,\n      y: 1,\n      factor: 1 / 4,\n    },\n  ],\n  none: [],\n};\n","import matrices from './matrices.js';\n\nconst colorMap = [\n  [0, 0, 0xff],\n  [0xff, 0, 0],\n  [0xff, 0, 0xff],\n  [0, 0xff, 0],\n  [0, 0xff, 0xff],\n  [0xff, 0xff, 0],\n  [0xff, 0xff, 0xff],\n  [0, 0, 0],\n  [0, 0, 0xd7],\n  [0xd7, 0, 0],\n  [0xd7, 0, 0xd7],\n  [0, 0xd7, 0],\n  [0, 0xd7, 0xd7],\n  [0xd7, 0xd7, 0],\n  [0xd7, 0xd7, 0xd7],\n];\n\nfunction getDistance(current, match) {\n  const redDifference = current[0] - match[0];\n  const greenDifference = current[1] - match[1];\n  const blueDifference = current[2] - match[2];\n\n  return (\n    redDifference * redDifference +\n    greenDifference * greenDifference +\n    blueDifference * blueDifference\n  );\n}\n\n// feels expensive, but https://www.cyotek.com/blog/finding-nearest-colors-using-euclidean-distance\nfunction defaultFindColor(rgb) {\n  let shortestDistance;\n  let index;\n\n  index = -1;\n  shortestDistance = Number.MAX_SAFE_INTEGER;\n\n  for (let i = 0; i < colorMap.length; i++) {\n    const match = colorMap[i];\n    const distance = getDistance(rgb, match);\n\n    if (distance < shortestDistance) {\n      index = i;\n      shortestDistance = distance;\n    }\n  }\n\n  return [...colorMap[index], 255];\n}\n\nconst defaults = {\n  step: 4,\n  channels: 4,\n  diffusionFactor: 0.9,\n  clip: () => {},\n  findColor: defaultFindColor,\n  matrix: matrices.floydSteinberg,\n};\n\nexport default class Dither {\n  constructor(options) {\n    this.options = { ...defaults, ...options };\n  }\n\n  static get defaultFindColor() {\n    return defaultFindColor;\n  }\n\n  static get matrices() {\n    return matrices;\n  }\n\n  dither(buffer, width, settings = {}) {\n    let i, k, ref, x, y;\n    const options = { ...this.options, ...settings };\n\n    const d = [];\n    for (\n      i = k = 0, ref = buffer.length;\n      0 <= ref ? k <= ref : k >= ref;\n      i = 0 <= ref ? ++k : --k\n    ) {\n      d.push(buffer[i]);\n    }\n    const height = buffer.length / (options.channels * width);\n    const result = [];\n    y = 0;\n    while (y < height) {\n      x = 0;\n      while (x < width) {\n        this.handlePixel(x, y, d, result, width, options);\n        x += options.step;\n      }\n      y += options.step;\n    }\n    return result;\n  }\n\n  calculateIndex(x, y, width, channels) {\n    return channels * x + channels * y * width;\n  }\n\n  handlePixel(x, y, d, result, width, options) {\n    var currentColor, i, j, k, l, newColor, q, ref, ref1;\n    i = this.calculateIndex(x, y, width, options.channels);\n    currentColor = [];\n    for (\n      j = k = 0, ref = options.channels;\n      0 <= ref ? k < ref : k > ref;\n      j = 0 <= ref ? ++k : --k\n    ) {\n      currentColor.push(d[i + j]);\n    }\n    newColor = options.findColor(currentColor);\n    q = [];\n    for (\n      j = l = 0, ref1 = options.channels;\n      0 <= ref1 ? l < ref1 : l > ref1;\n      j = 0 <= ref1 ? ++l : --l\n    ) {\n      q[j] = (d[i + j] - newColor[j]) * options.diffusionFactor;\n    }\n    this.diffuseError(d, q, x, y, width, options);\n    return this.applyNewColor(result, width, newColor, i, options);\n  }\n\n  diffuseError(d, q, x, y, width, options) {\n    var channelOffset, entry, index, k, l, len, ref, ref1, results;\n    ref = options.matrix;\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      entry = ref[k];\n      index = this.calculateIndex(\n        x + options.step * entry.x,\n        y + options.step * entry.y,\n        width,\n        options.channels\n      );\n      for (\n        channelOffset = l = 0, ref1 = options.channels;\n        0 <= ref1 ? l < ref1 : l > ref1;\n        channelOffset = 0 <= ref1 ? ++l : --l\n      ) {\n        d[index + channelOffset] += entry.factor * q[channelOffset];\n      }\n      results.push(options.clip(d, index));\n    }\n    return results;\n  }\n\n  applyNewColor(buffer, width, newColor, i, options) {\n    var di, dx, dy, j, k, ref, results;\n    results = [];\n    for (\n      dx = k = 0, ref = options.step;\n      0 <= ref ? k < ref : k > ref;\n      dx = 0 <= ref ? ++k : --k\n    ) {\n      results.push(\n        (function() {\n          var l, ref1, results1;\n          results1 = [];\n          for (\n            dy = l = 0, ref1 = options.step;\n            0 <= ref1 ? l < ref1 : l > ref1;\n            dy = 0 <= ref1 ? ++l : --l\n          ) {\n            di = i + options.channels * dx + options.channels * width * dy;\n            results1.push(\n              (function() {\n                var m, ref2, results2;\n                results2 = [];\n                for (\n                  j = m = 0, ref2 = options.channels;\n                  0 <= ref2 ? m < ref2 : m > ref2;\n                  j = 0 <= ref2 ? ++m : --m\n                ) {\n                  results2.push((buffer[di + j] = newColor[j]));\n                }\n                return results2;\n              })()\n            );\n          }\n          return results1;\n        })()\n      );\n    }\n    return results;\n  }\n}\n","import Zoom from './Zoom.js';\n\nexport default function main(image) {\n  return imageToBlob(image).then(fileToBinary);\n}\n\nexport function contrast(imageData, contrast = 50) {\n  const data = imageData.data;\n  contrast = contrast / 100 + 1; //convert to decimal & shift range: [0..2]\n  const intercept = 128 * (1 - contrast);\n  for (let i = 0; i < data.length; i += 4) {\n    data[i] = data[i] * contrast + intercept;\n    data[i + 1] = data[i + 1] * contrast + intercept;\n    data[i + 2] = data[i + 2] * contrast + intercept;\n  }\n  return imageData;\n}\n\nexport function threshold(data, _, threshold = _) {\n  for (let i = 0; i < data.length; i += 4) {\n    const r = data[i];\n    const g = data[i + 1];\n    const b = data[i + 2];\n\n    const test = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n\n    const v = test >= threshold ? 255 : 0;\n    data[i] = data[i + 1] = data[i + 2] = v;\n  }\n\n  invertPotentialInk(data);\n\n  return data;\n}\n\nexport function invertPotentialInk(imageData) {\n  const zoom = new Zoom(imageData);\n  for (let y = 0; y < 192 / 8; y++) {\n    for (let x = 0; x < 256 / 8; x++) {\n      const block = zoom.pixel(x, y);\n\n      let inkCount = 0;\n      for (let i = 0; i < 8 * 8 * 4; i += 4) {\n        if (block[i] === 0) {\n          // black = ink\n          inkCount = inkCount + 1;\n        }\n      }\n\n      if (inkCount < 32) {\n        // flip\n        for (let i = 0; i < 8 * 8 * 4; i += 4) {\n          const c = block[i] === 0 ? 255 : 0;\n          block[i] = block[i + 1] = block[i + 2] = c;\n        }\n      }\n    }\n  }\n  return imageData;\n}\n\nfunction crop(\n  source = { width: 0, height: 0 },\n  destination = { width: 0, height: 0 }\n) {\n  // result:\n  let x = 0;\n  let y = 0;\n\n  // which is longest side\n  let longest = 'width';\n  let shortest = 'height';\n  if (destination.width < destination.height) {\n    [longest, shortest] = [shortest, longest];\n  }\n\n  // get divisor\n  const d = source[longest] / destination[longest]; // FIXME does this work for scaling up?\n\n  const width = (destination.width * d) | 0;\n  const height = (destination.height * d) | 0;\n\n  if (longest === 'height') {\n    x = (source[shortest] - width) / 2;\n  } else {\n    y = (source[shortest] - height) / 2;\n  }\n\n  return { x, y, width, height };\n}\n\nexport function imageToCanvas(\n  img,\n  scale = { width: img.width, height: img.height }\n) {\n  const canvas = document.createElement('canvas');\n  canvas.style.imageRendering = 'pixelated';\n  const ctx = canvas.getContext('2d');\n  canvas.width = scale.width;\n  canvas.height = scale.height;\n\n  const { x, y, height, width } = crop(img, canvas);\n\n  ctx.drawImage(img, x, y, width, height, 0, 0, canvas.width, canvas.height);\n\n  return ctx;\n}\n\nexport function imageToPixels(img, scale) {\n  const ctx = imageToCanvas(img, scale);\n  return ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nexport async function imageToBlob(img, ctx = imageToCanvas(img)) {\n  return new Promise(resolve => {\n    const canvas = ctx.canvas;\n    canvas.toBlob(file => resolve(file));\n  });\n}\n\nexport function fileToBinary(file) {\n  return new Promise(resolve => {\n    const reader = new window.FileReader();\n    reader.onloadend = () => resolve(new Uint8Array(reader.result));\n    reader.readAsArrayBuffer(file);\n  });\n}\n","import Dither from './Dither.js';\nimport Zoom from './Zoom.js';\nimport { imageToCanvas, contrast } from './image.js';\nimport {\n  attributesForBlock,\n  readAttributes,\n  pixelsForSCR,\n  putAttributes,\n  getInkFromPixel,\n  putPixels,\n} from './scr.js';\n\nexport async function dither({ url, all = false, debug = false }) {\n  const img = new Image();\n  img.crossOrigin = 'anonymous';\n  img.src = url;\n  await new Promise((resolve, reject) => {\n    img.onload = resolve;\n    img.onerror = reject;\n  });\n  if (debug) document.body.appendChild(img);\n  const ctx = imageToCanvas(img, { width: 256, height: 192 });\n  const canvas = ctx.canvas;\n  const w = canvas.width;\n  const h = canvas.height;\n\n  if (debug) document.body.appendChild(canvas);\n\n  // the buffer is used to draw into as a temp space\n  const bufferCtx = document.createElement('canvas').getContext('2d');\n  bufferCtx.canvas.width = w;\n  bufferCtx.canvas.height = h;\n\n  if (debug) document.body.appendChild(bufferCtx.canvas);\n\n  const dither = new Dither({\n    matrix: Dither.matrices.none,\n    step: 1,\n  });\n\n  const { imageData: inkData } = await render(ctx, bufferCtx, dither, {\n    diffusionFactor: 0.1,\n    matrix: Dither.matrices.atkinson,\n  });\n\n  const { imageData: pixelData } = await renderFromInk(bufferCtx, bufferCtx);\n\n  // load all the final output into SCR format - starting with binary for pixels\n  const pixels = new Uint8Array((256 * 192) / 8 + 768);\n  putPixels(0, pixels, pixelData.data);\n  putPixels(1, pixels, pixelData.data);\n  putPixels(2, pixels, pixelData.data);\n\n  // …then try to work out the attributes (bright, ink and paper)\n  putAttributes(pixels, inkData);\n\n  if (all) {\n    return {\n      pixels,\n      inkData,\n      pixelData,\n      originalData: ctx.getImageData(0, 0, w, h),\n    };\n  }\n\n  return pixels; // this is the raw binary .src format\n}\n\nasync function pixelsToImage(pixels) {\n  const ctx = document.createElement('canvas').getContext('2d');\n  const canvas = ctx.canvas;\n  canvas.width = 256;\n  canvas.height = 192;\n\n  ctx.putImageData(pixels, 0, 0);\n\n  const url = canvas.toDataURL('image/png');\n  const img = new Image();\n  img.src = url;\n  return new Promise(resolve => (img.onload = () => resolve(img)));\n}\n\nexport default async function main(\n  url = `https://twivatar.glitch.me/${prompt('Give me a twitter handle:')}`\n) {\n  // export default async function main(url = './image-manip/tap-js.png') {\n  // const username = prompt('Give me a twitter handle:');\n\n  // ctx = drawing context with our source image\n  const { pixels, inkData, pixelData, originalData } = await dither(\n    // `https://twivatar.glitch.me/${username}`,\n    url,\n    true\n  );\n\n  const scrBlob = new Blob([pixels], {\n    'content-type': 'application/binary',\n  });\n  const scrURL = URL.createObjectURL(scrBlob);\n\n  const container = document.createElement('div');\n  document.body.appendChild(container);\n\n  const scrCtx = document.createElement('canvas').getContext('2d');\n  scrCtx.canvas.width = 256;\n  scrCtx.canvas.height = 192;\n  container.appendChild(scrCtx.canvas);\n  // validate our pixels by translating the SCR binary back into a canvas\n  pixelsForSCR(pixels, scrCtx);\n\n  const ul = document.createElement('ul');\n  ul.innerHTML = `<li><a href=\"${scrURL}\" download=\"image.scr\">Download .SCR file</a></li>`;\n\n  const li = document.createElement('li');\n  ul.appendChild(li);\n  const attribsLI = document.createElement('li');\n  ul.appendChild(attribsLI);\n  document.body.appendChild(ul);\n\n  // put all the image data into imgs\n  const img2 = await pixelsToImage(originalData);\n  container.appendChild(img2);\n  const inkImg = await pixelsToImage(inkData);\n  container.appendChild(inkImg);\n  const pixelImg = await pixelsToImage(pixelData);\n  container.appendChild(pixelImg);\n\n  const zoomOriginal = new Zoom(img2);\n  const zoomPixel = new Zoom(pixelImg);\n  const zoomInk = new Zoom(inkImg);\n  const zoomResult = new Zoom(scrCtx);\n\n  const rootCanvas = document.querySelector('canvas');\n  rootCanvas.classList.add('crosshair');\n\n  let hover = true;\n\n  rootCanvas.onclick = () => {\n    hover = !hover;\n  };\n\n  rootCanvas.onmousemove = e => {\n    if (!hover) return;\n    const x = (e.pageX / 8) | 0;\n    const y = (e.pageY / 8) | 0;\n    zoomResult.seeXY(x, y);\n    zoomOriginal.seeXY(x, y);\n    zoomInk.seeXY(x, y);\n    zoomPixel.seeXY(x, y);\n    li.innerHTML = `{ x: ${x}, y: ${y} }`;\n    const block = zoomInk.pixel(x, y);\n    const byte = attributesForBlock(block);\n    window.attributesForBlock = attributesForBlock.bind(null, block);\n    const debug = y === 18 && x === 20;\n    const attribs = readAttributes(byte, debug);\n    const ink = attribs.ink.join(',');\n    const paper = attribs.paper.join(',');\n    attribsLI.innerHTML = `ink: ${ink} (${attribs.values.ink}) <span class=\"block\" style=\"background: rgb(${ink})\"></span>, paper: ${paper} (${attribs.values.paper}) <span class=\"block\" style=\"background: rgb(${paper})\"></span>`;\n  };\n}\n\nasync function render(ctx, bufferCtx, dither, options = {}) {\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  const buffer = contrast(ctx.getImageData(0, 0, w, h), 10);\n  const res = dither.dither(buffer.data, w, options);\n  const imageData = new ImageData(new Uint8ClampedArray(res), w, h);\n  bufferCtx.putImageData(imageData, 0, 0);\n\n  return { imageData };\n}\n\nfunction putInkForBlock(\n  zoom,\n  x,\n  y,\n  newBlock = new Uint8ClampedArray(8 * 8 * 4)\n) {\n  const block = zoom.pixel(x, y);\n  // 1: find how many colours we're dealing with (256 elements)\n  // 2: if 2 - switch them to majority paper (0b0) and least ink (0b1)\n  // 3: if more than two, order then select\n  const print = x === 3 && y === 1;\n  const byte = attributesForBlock(block, print);\n  const attributes = readAttributes(byte);\n\n  if (print) console.log(attributes);\n\n  for (let i = 0; i < 64; i++) {\n    const ink = getInkFromPixel([...block.slice(i * 4, i * 4 + 3)]);\n\n    if (ink === attributes.values.ink) {\n      newBlock.set([0, 0, 0, 255], i * 4);\n    } else if (ink === attributes.values.paper) {\n      newBlock.set([255, 255, 255, 255], i * 4);\n    } else {\n      newBlock.set([0, 0, 0, 255], i * 4);\n    }\n  }\n\n  return newBlock;\n}\n\nasync function renderFromInk(ctx, bufferCtx) {\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  const buffer = ctx.getImageData(0, 0, w, h);\n\n  const zoom = new Zoom(buffer.data);\n\n  const blockBuffer = new Uint8ClampedArray(8 * 8 * 4);\n\n  for (let y = 0; y < 192 / 8; y++) {\n    for (let x = 0; x < 256 / 8; x++) {\n      putInkForBlock(zoom, x, y, blockBuffer);\n\n      bufferCtx.putImageData(new ImageData(blockBuffer, 8, 8), x * 8, y * 8);\n    }\n  }\n\n  const imageData = bufferCtx.getImageData(0, 0, w, h);\n\n  return { imageData };\n}\n\nif (window.location.search.includes('retrofy')) main();\n","import drop from '../lib/dnd.js';\nimport { pixelsForSCR } from './lib/scr.js';\nimport { $ } from '../lib/$.js';\nimport save from '../lib/save.js';\nimport { dither } from './lib/retrofy.js';\n\nconst result = $('#result')[0];\n\nfunction basename(filename) {\n  return filename\n    .split('.')\n    .slice(0, -1)\n    .join('.');\n}\n\nfunction container(filename, altDownload) {\n  const isSCR = filename.toUpperCase().endsWith('.SCR');\n\n  const canvas = document.createElement('canvas');\n  canvas.width = 256;\n  canvas.height = 192;\n  const ctx = canvas.getContext('2d');\n  const div = document.createElement('div');\n  div.className = 'container';\n  div.appendChild(canvas);\n\n  const button = document.createElement('button');\n  div.appendChild(button);\n  button.onclick = async () => {\n    const file = await new Promise(resolve => canvas.toBlob(resolve));\n\n    save(file, basename(filename) + '.png');\n  };\n  button.innerText = 'Download PNG';\n\n  if (!isSCR) {\n    const button = document.createElement('button');\n    div.appendChild(button);\n    button.onclick = async () => {\n      save(altDownload, basename(filename) + '.scr');\n    };\n    button.innerText = 'Download SCR';\n  }\n\n  result.prepend(div);\n  return ctx;\n}\n\nasync function fileHandler(data, filename, type) {\n  if (filename.toUpperCase().endsWith('.SCR')) {\n    pixelsForSCR(data, container(filename));\n  } else {\n    const blob = new Blob([data], { type });\n    const url = URL.createObjectURL(blob);\n    const res = await dither({ url });\n    console.log(res);\n    pixelsForSCR(res, container(filename, res));\n    URL.revokeObjectURL(url);\n  }\n}\n\ndrop(document.body, fileHandler);\n\n$('input').on('change', event => {\n  const file = event.target.files[0];\n  const reader = new FileReader();\n  reader.onload = event =>\n    fileHandler(new Uint8Array(event.target.result), file.name, file.type);\n  reader.readAsArrayBuffer(file);\n});\n"]}